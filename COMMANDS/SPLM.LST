6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 1
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\FLEX.LIB

00001         AD24                PCRLF           EQU     $AD24
00002         AD18                PUTCHR          EQU     $AD18
00003         AD15                GETCHR          EQU     $AD15
00004         AD1B                INBUFF          EQU     $AD1B
00005         A012                SWIJMP          EQU     $A012
00006         AC18                CURCHR          EQU     $AC18
00007         AD2A                RSTRIO          EQU     $AD2A
00008         AD2D                GETFIL          EQU     $AD2D
00009         AD3F                RPTERR          EQU     $AD3F
00010         B403                FMSCLS          EQU     $B403
00011         AD03                WARMS           EQU     $AD03
00012         AD33                SETEXT          EQU     $AD33
00013         B406                FMS             EQU     $B406
00014         AD27                NXTCH           EQU     $AD27
00015         AC14                LINPTR          EQU     $AC14
00016         AD12                OUTCH2          EQU     $AD12
00017         AD39                OUTDEC          EQU     $AD39
00018         AC0E                MONTH           EQU     $AC0E
00019         AC0F                DAY             EQU     $AC0F
00020         AC10                YEAR            EQU     $AC10
00021         E124                SFE1            EQU     $E124
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 1
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

00001               
00002               
00003               *
00004               * +-------------------------------------------------------------------------+
00005               * |   This file has been generated by The Interactive Disassembler (IDA)    |
00006               * |           Copyright(c) 2013 Hex-Rays, <support@hex-rays.com>          |
00007               * |                    License info: 48-B559-7554-5B                   |
00008               * |            MichaelEvenson, Safe Banking Systems Software            |
00009               * +-------------------------------------------------------------------------+
00010               *
00011               * Input MD5   :73B0BE84F881F428D18032259D9EEE92
00012               * Input CRC32 :CA4F1EC7
00013               
00014               * File Name   : C:\ProgramData\EvensonConsultingServices\SWTPCmemulator\COMMANDS\SPLM.CMD
00015               * Format      : FLEX STX file
00016               
00017               * Processor:        6800 []
00018               * Target assembler: Public domain 6809 assembler v2.01 (OS9 support)
00019               
00020               * ===========================================================================
00021               
00022               * Segment type: Pure code
00024         0380                                org     $380
00025               
00026               * =============== S U B R O U TI N E =======================================
00027               
00028               * Attributes: thunk
00029               
00031         0380                start           EQU     *
00032 0380 7E 2C78                                jmp     start_0
00033               * End of function start
00034               
00035               
00036               * =============== S U B R O U TI N E =======================================
00037               
00038               * Attributes: thunk
00039               
00040         0383                sub_383         EQU     *
00041 0383 7E 4800                                jmp     sub_4800
00042               * End of function sub_383
00043               
00044               * ---------------------------------------------------------------------------
00045 0386    47                  byte_386        fcb     $47
00046 0387    FF                  byte_387        fcb     $FF
00047 0388    00                  byte_388        fcb     0
00048 0389    00                                  fcb     0
00049               
00050               * =============== S U B R O U TI N E =======================================
00051               
00052               
00053         038A                sub_38A         EQU     *
00054 038A 7E AD24                                jmp     PCRLF
00055               * End of function sub_38A
00056               
00057               
00058               * =============== S U B R O U TI N E =======================================
00059               
00060               
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 2
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

00061         038D                sub_38D         EQU     *
00062 038D 7E AD18                                jmp     PUTCHR
00063               * End of function sub_38D
00064               
00065               * ---------------------------------------------------------------------------
00066               * START OF FUNCTION CHUNK FOR sub_26E8
00067               
00068         0390                loc_390         EQU     *
00069 0390 7E 497D                                jmp     loc_497D
00070               * END OF FUNCTION CHUNK FOR sub_26E8
00071               * ---------------------------------------------------------------------------
00072               * START OF FUNCTION CHUNK FOR sub_2EB2
00073               
00074         0393                loc_393         EQU     *
00075 0393 7E 4A65                                jmp     loc_4A65
00076               * END OF FUNCTION CHUNK FOR sub_2EB2
00077               * ---------------------------------------------------------------------------
00078 0396    00                  byte_396        fcb     0
00079 0397    00                                  fcb     0
00080 0398    0000                word_398        fdb     0
00081 039A    A080                word_39A        fdb     $A080
00082 039C    00                                  fcb     0
00083 039D    00                  byte_39D        fcb     0
00084               
00085               * =============== S U B R O U TI N E =======================================
00086               
00087               
00088         039E                sub_39E         EQU     *
00089 039E 7E AD15                                jmp     GETCHR
00090               * End of function sub_39E
00091               
00092               * ---------------------------------------------------------------------------
00093 03A1    39                  byte_3A1        fcb     $39
00094 03A2    02                  byte_3A2        fcb     2
00095 03A3    00                                  fcb     0
00096               
00097               * =============== S U B R O U TI N E =======================================
00098               
00099               
00100         03A4                sub_3A4         EQU     *
00101 03A4 7E AD1B                                jmp     INBUFF
00102               * End of function sub_3A4
00103               
00104               
00105               * =============== S U B R O U TI N E =======================================
00106               
00107               * Attributes: thunk
00108               
00109         03A7                sub_3A7         EQU     *
00110 03A7 7E 4B1F                                jmp     sub_4B1F
00111               * End of function sub_3A7
00112               
00113               * ---------------------------------------------------------------------------
00114               * START OF FUNCTION CHUNK FOR sub_26D7
00115               
00116         03AA                loc_3AA         EQU     *
00117 03AA 7E 4844                                jmp     loc_4844
00118               * END OF FUNCTION CHUNK FOR sub_26D7
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 3
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

00119               * ---------------------------------------------------------------------------
00120 03AD                                        rmb     $53
00121 0400    00                  unk_400         fcb     0
00122 0401    00                                  fcb     0
00123 0402    00                  unk_402         fcb     0
00124 0403    00                                  fcb     0
00125 0404    00                                  fcb     0
00126 0405    00                                  fcb     0
00127 0406    00                                  fcb     0
00128 0407    00                                  fcb     0
00129 0408    00                                  fcb     0
00130 0409    00                                  fcb     0
00131 040A    00                                  fcb     0
00132 040B    00                                  fcb     0
00133 040C    00                                  fcb     0
00134 040D    00                                  fcb     0
00135 040E    00                                  fcb     0
00136 040F    00                                  fcb     0
00137 0410    00                                  fcb     0
00138 0411    00                                  fcb     0
00139 0412    00                                  fcb     0
00140 0413    00                                  fcb     0
00141 0414    00                                  fcb     0
00142 0415    00                                  fcb     0
00143 0416    00                                  fcb     0
00144 0417    00                                  fcb     0
00145 0418    00                                  fcb     0
00146 0419    00                                  fcb     0
00147 041A    00                                  fcb     0
00148 041B    00                                  fcb     0
00149 041C    00                                  fcb     0
00150 041D    00                                  fcb     0
00151 041E    00                                  fcb     0
00152 041F    00                                  fcb     0
00153 0420    00                                  fcb     0
00154 0421    00                                  fcb     0
00155 0422    00                                  fcb     0
00156 0423    00                                  fcb     0
00157 0424    00                                  fcb     0
00158 0425    00                                  fcb     0
00159 0426    00                                  fcb     0
00160 0427    00                                  fcb     0
00161 0428    00                  unk_428         fcb     0
00162 0429    00                  unk_429         fcb     0
00163 042A    00                  unk_42A         fcb     0
00164 042B    00                                  fcb     0
00165 042C    00                                  fcb     0
00166 042D    00                                  fcb     0
00167 042E    00                                  fcb     0
00168 042F    00                                  fcb     0
00169 0430    00                                  fcb     0
00170 0431    00                                  fcb     0
00171 0432    00                                  fcb     0
00172 0433    00                                  fcb     0
00173 0434    00                                  fcb     0
00174 0435    00                                  fcb     0
00175 0436    00                                  fcb     0
00176 0437    00                                  fcb     0
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 4
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

00177 0438    00                                  fcb     0
00178 0439    00                                  fcb     0
00179 043A    00                                  fcb     0
00180 043B    00                                  fcb     0
00181 043C    01                  unk_43C         fcb     1
00182 043D    01                                  fcb     1
00183 043E    0C                                  fcb     $C
00184 043F    0C                                  fcb     $C
00185 0440    0E                                  fcb     $E
00186 0441    0E                                  fcb     $E
00187 0442    0E                                  fcb     $E
00188 0443    03                                  fcb     3
00189 0444    0E                                  fcb     $E
00190 0445    03                                  fcb     3
00191 0446    0E                                  fcb     $E
00192 0447    02                                  fcb     2
00193 0448    03                                  fcb     3
00194 0449    03                                  fcb     3
00195 044A    03                                  fcb     3
00196 044B    0E                                  fcb     $E
00197 044C    00                                  fcb     0
00198 044D    00                                  fcb     0
00199 044E    0A                                  fcb     $A
00200 044F    0A                                  fcb     $A
00201 0450    0A                                  fcb     $A
00202 0451    0A                                  fcb     $A
00203 0452    0A                                  fcb     $A
00204 0453    0A                                  fcb     $A
00205 0454    05                                  fcb     5
00206 0455    05                                  fcb     5
00207 0456    07                                  fcb     7
00208 0457    08                                  fcb     8
00209 0458    0A                                  fcb     $A
00210 0459    02                                  fcb     2
00211 045A    00                                  fcb     0
00212 045B    00                                  fcb     0
00213 045C    01                  unk_45C         fcb     1
00214 045D    02                                  fcb     2
00215 045E    00                                  fcb     0
00216 045F    00                                  fcb     0
00217 0460    00                                  fcb     0
00218 0461    00                                  fcb     0
00219 0462    00                                  fcb     0
00220 0463    00                                  fcb     0
00221 0464    00                                  fcb     0
00222 0465    00                                  fcb     0
00223 0466    02                                  fcb     2
00224 0467    02                                  fcb     2
00225 0468    02                                  fcb     2
00226 0469    02                                  fcb     2
00227 046A    00                                  fcb     0
00228 046B    00                                  fcb     0
00229 046C    00                  unk_46C         fcb     0
00230 046D    00                                  fcb     0
00231 046E    00                                  fcb     0
00232 046F    00                                  fcb     0
00233 0470    00                                  fcb     0
00234 0471    00                                  fcb     0
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 5
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

00235 0472    00                                  fcb     0
00236 0473    00                                  fcb     0
00237 0474    00                                  fcb     0
00238 0475    00                                  fcb     0
00239 0476    01                                  fcb     1
00240 0477    01                                  fcb     1
00241 0478    02                                  fcb     2
00242 0479    02                                  fcb     2
00243 047A    00                                  fcb     0
00244 047B    00                                  fcb     0
00245 047C    00                  unk_47C         fcb     0
00246 047D    00                                  fcb     0
00247 047E    01                                  fcb     1
00248 047F    02                                  fcb     2
00249 0480    00                                  fcb     0
00250 0481    00                                  fcb     0
00251 0482    02                                  fcb     2
00252 0483    02                                  fcb     2
00253 0484    00                                  fcb     0
00254 0485    00                                  fcb     0
00255 0486    00                                  fcb     0
00256 0487    00                                  fcb     0
00257 0488    00                                  fcb     0
00258 0489    00                                  fcb     0
00259 048A    00                                  fcb     0
00260 048B    00                                  fcb     0
00261 048C    02                  unk_48C         fcb     2
00262 048D    02                                  fcb     2
00263 048E    01                                  fcb     1
00264 048F    01                                  fcb     1
00265 0490    02                                  fcb     2
00266 0491    02                                  fcb     2
00267 0492    01                                  fcb     1
00268 0493    01                                  fcb     1
00269 0494    03                                  fcb     3
00270 0495    03                                  fcb     3
00271 0496    02                                  fcb     2
00272 0497    02                                  fcb     2
00273 0498    00                                  fcb     0
00274 0499    00                                  fcb     0
00275 049A    00                                  fcb     0
00276 049B    00                                  fcb     0
00277 049C    00                  unk_49C         fcb     0
00278 049D    00                                  fcb     0
00279 049E    00                                  fcb     0
00280 049F    00                                  fcb     0
00281 04A0    00                                  fcb     0
00282 04A1    00                                  fcb     0
00283 04A2    02                                  fcb     2
00284 04A3    02                                  fcb     2
00285 04A4    01                                  fcb     1
00286 04A5    01                                  fcb     1
00287 04A6    01                                  fcb     1
00288 04A7    01                                  fcb     1
00289 04A8    00                                  fcb     0
00290 04A9    00                                  fcb     0
00291 04AA    00                                  fcb     0
00292 04AB    00                                  fcb     0
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 6
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

00293 04AC    00                  unk_4AC         fcb     0
00294 04AD    00                                  fcb     0
00295 04AE    0B                                  fcb     $B
00296 04AF    0B                                  fcb     $B
00297 04B0    0F                                  fcb     $F
00298 04B1    0D                                  fcb     $D
00299 04B2    0D                                  fcb     $D
00300 04B3    0F                                  fcb     $F
00301 04B4    03                                  fcb     3
00302 04B5    0F                                  fcb     $F
00303 04B6    03                                  fcb     3
00304 04B7    02                                  fcb     2
00305 04B8    0F                                  fcb     $F
00306 04B9    0F                                  fcb     $F
00307 04BA    0F                                  fcb     $F
00308 04BB    0D                                  fcb     $D
00309 04BC    00                                  fcb     0
00310 04BD    00                                  fcb     0
00311 04BE    0A                                  fcb     $A
00312 04BF    0A                                  fcb     $A
00313 04C0    0A                                  fcb     $A
00314 04C1    0A                                  fcb     $A
00315 04C2    0A                                  fcb     $A
00316 04C3    0A                                  fcb     $A
00317 04C4    04                                  fcb     4
00318 04C5    04                                  fcb     4
00319 04C6    06                                  fcb     6
00320 04C7    08                                  fcb     8
00321 04C8    0A                                  fcb     $A
00322 04C9    02                                  fcb     2
00323 04CA    00                                  fcb     0
00324 04CB    00                                  fcb     0
00325 04CC    00                  unk_4CC         fcb     0
00326 04CD    00                                  fcb     0
00327 04CE    00                                  fcb     0
00328 04CF    00                                  fcb     0
00329 04D0    00                                  fcb     0
00330 04D1    00                                  fcb     0
00331 04D2    00                                  fcb     0
00332 04D3    00                                  fcb     0
00333 04D4    00                                  fcb     0
00334 04D5    01                                  fcb     1
00335 04D6    01                                  fcb     1
00336 04D7    01                                  fcb     1
00337 04D8    00                                  fcb     0
00338 04D9    00                                  fcb     0
00339 04DA    00                                  fcb     0
00340 04DB    00                                  fcb     0
00341 04DC    00                                  fcb     0
00342 04DD    00                                  fcb     0
00343 04DE    00                                  fcb     0
00344 04DF    00                                  fcb     0
00345 04E0    00                                  fcb     0
00346 04E1    00                                  fcb     0
00347 04E2    00                                  fcb     0
00348 04E3    00                                  fcb     0
00349 04E4    00                                  fcb     0
00350 04E5    00                                  fcb     0
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 7
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

00351 04E6    00                                  fcb     0
00352 04E7    00                                  fcb     0
00353 04E8    00                                  fcb     0
00354 04E9    00                                  fcb     0
00355 04EA    00                                  fcb     0
00356 04EB    00                                  fcb     0
00357 04EC    00                                  fcb     0
00358 04ED    00                                  fcb     0
00359 04EE    00                                  fcb     0
00360 04EF    00                                  fcb     0
00361 04F0    00                                  fcb     0
00362 04F1    00                                  fcb     0
00363 04F2    00                                  fcb     0
00364 04F3    00                                  fcb     0
00365 04F4    00                                  fcb     0
00366 04F5    00                                  fcb     0
00367 04F6    00                                  fcb     0
00368 04F7    00                                  fcb     0
00369 04F8    00                                  fcb     0
00370 04F9    00                                  fcb     0
00371 04FA    00                                  fcb     0
00372 04FB    00                                  fcb     0
00373 04FC    00                                  fcb     0
00374 04FD    00                                  fcb     0
00375 04FE    00                                  fcb     0
00376 04FF    00                                  fcb     0
00377 0500    00                  unk_500         fcb     0
00378 0501    00                                  fcb     0
00379 0502    00                                  fcb     0
00380 0503    00                                  fcb     0
00381 0504    00                                  fcb     0
00382 0505    00                                  fcb     0
00383 0506    00                                  fcb     0
00384 0507    00                                  fcb     0
00385 0508    00                                  fcb     0
00386 0509    00                                  fcb     0
00387 050A    00                                  fcb     0
00388 050B    00                                  fcb     0
00389 050C    00                                  fcb     0
00390 050D    00                                  fcb     0
00391 050E    00                                  fcb     0
00392 050F    00                                  fcb     0
00393 0510    00                                  fcb     0
00394 0511    00                                  fcb     0
00395 0512    00                                  fcb     0
00396 0513    00                                  fcb     0
00397 0514    00                                  fcb     0
00398 0515    00                                  fcb     0
00399 0516    00                                  fcb     0
00400 0517    00                                  fcb     0
00401 0518    00                                  fcb     0
00402 0519    00                                  fcb     0
00403 051A    00                                  fcb     0
00404 051B    00                                  fcb     0
00405 051C    00                                  fcb     0
00406 051D    00                                  fcb     0
00407 051E    00                                  fcb     0
00408 051F    00                                  fcb     0
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 8
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

00409 0520    00                                  fcb     0
00410 0521    00                                  fcb     0
00411 0522    00                                  fcb     0
00412 0523    00                                  fcb     0
00413 0524    00                                  fcb     0
00414 0525    00                                  fcb     0
00415 0526    00                                  fcb     0
00416 0527    00                                  fcb     0
00417 0528    00                                  fcb     0
00418 0529    00                                  fcb     0
00419 052A    00                                  fcb     0
00420 052B    00                                  fcb     0
00421 052C    00                                  fcb     0
00422 052D    00                                  fcb     0
00423 052E    00                                  fcb     0
00424 052F    00                                  fcb     0
00425 0530    00                                  fcb     0
00426 0531    00                                  fcb     0
00427 0532    00                                  fcb     0
00428 0533    00                                  fcb     0
00429 0534    00                                  fcb     0
00430 0535    00                                  fcb     0
00431 0536    00                                  fcb     0
00432 0537    00                                  fcb     0
00433 0538    00                                  fcb     0
00434 0539    00                                  fcb     0
00435 053A    00                                  fcb     0
00436 053B    00                                  fcb     0
00437 053C    00                                  fcb     0
00438 053D    00                                  fcb     0
00439 053E    00                                  fcb     0
00440 053F    00                                  fcb     0
00441 0540    00                                  fcb     0
00442 0541    00                                  fcb     0
00443 0542    00                                  fcb     0
00444 0543    00                                  fcb     0
00445 0544    00                                  fcb     0
00446 0545    00                                  fcb     0
00447 0546    00                                  fcb     0
00448 0547    00                                  fcb     0
00449 0548    00                                  fcb     0
00450 0549    00                                  fcb     0
00451 054A    00                                  fcb     0
00452 054B    00                                  fcb     0
00453 054C    00                                  fcb     0
00454 054D    00                                  fcb     0
00455 054E    00                                  fcb     0
00456 054F    00                                  fcb     0
00457 0550    00                  unk_550         fcb     0
00458 0551    42 59 54 45 41 44   aByteaddrprocli fcc     "BYTEADDRPROCLIT "
00459 0561    00                                  fcb     0
00460 0562    00                                  fcb     0
00461 0563    00                                  fcb     0
00462 0564    00                                  fcb     0
00463 0565    00                                  fcb     0
00464 0566    00                                  fcb     0
00465 0567    00                                  fcb     0
00466 0568    00                                  fcb     0
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 9
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

00467 0569    00                                  fcb     0
00468 056A    00                                  fcb     0
00469 056B    00                                  fcb     0
00470 056C    00                                  fcb     0
00471 056D    00                                  fcb     0
00472 056E    00                                  fcb     0
00473 056F    00                                  fcb     0
00474 0570    00                  unk_570         fcb     0
00475 0571    00                  byte_571        fcb     0
00476 0572    00                  unk_572         fcb     0
00477 0573    00                  unk_573         fcb     0
00478 0574    01                                  fcb     1
00479 0575    00                  unk_575         fcb     0
00480 0576    00                                  fcb     0
00481 0577    00                  unk_577         fcb     0
00482 0578    00                                  fcb     0
00483 0579    00                  unk_579         fcb     0
00484 057A    00                  unk_57A         fcb     0
00485 057B    00                                  fcb     0
00486 057C    00                                  fcb     0
00487 057D    00                                  fcb     0
00488 057E    00                                  fcb     0
00489 057F    00                                  fcb     0
00490 0580    00                                  fcb     0
00491 0581    00                                  fcb     0
00492 0582    00                                  fcb     0
00493 0583    00                                  fcb     0
00494 0584    00                                  fcb     0
00495 0585    00                                  fcb     0
00496 0586    00                                  fcb     0
00497 0587    00                                  fcb     0
00498 0588    00                                  fcb     0
00499 0589    00                                  fcb     0
00500 058A    00                                  fcb     0
00501 058B    00                                  fcb     0
00502 058C    00                                  fcb     0
00503 058D    00                                  fcb     0
00504 058E    00                                  fcb     0
00505 058F    00                                  fcb     0
00506 0590    00                                  fcb     0
00507 0591    00                                  fcb     0
00508 0592    00                                  fcb     0
00509 0593    00                                  fcb     0
00510 0594    00                                  fcb     0
00511 0595    00                                  fcb     0
00512 0596    00                                  fcb     0
00513 0597    00                                  fcb     0
00514 0598    00                                  fcb     0
00515 0599    00                                  fcb     0
00516 059A    00                                  fcb     0
00517 059B    00                                  fcb     0
00518               
00519               * =============== S U B R O U TI N E =======================================
00520               
00521               
00522         059C                sub_59C         EQU     *
00523               
00524               * FUNCTION CHUNK AT 0610 SIZE 00000021 BYTES
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 10
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

00525               * FUNCTION CHUNK AT 115F SIZE 00000010 BYTES
00526               * FUNCTION CHUNK AT 247D SIZE 0000007C BYTES
00527               
00528 059C 7E 05AC                                jmp     loc_5AC
00529               * ---------------------------------------------------------------------------
00530               
00531         059F                loc_59F         EQU     *
00532 059F 96 80                                  ldaa    $80
00533 05A1 26 01                                  bne     loc_5A4
00534 05A3 39                                     rts
00535               * ---------------------------------------------------------------------------
00536               
00537         05A4                loc_5A4         EQU     *
00538 05A4 7A 0042                                dec     $42
00539 05A7 7E 05E6                                jmp     loc_5E6
00540               * ---------------------------------------------------------------------------
00541 05AA 01                                     nop
00542 05AB 01                                     nop
00543               
00544         05AC                loc_5AC         EQU     *
00545 05AC CE 0428                                ldx     #unk_428
00546 05AF 96 42                                  ldaa    $42
00547 05B1 01                                     nop
00548 05B2 4A                                     deca
00549 05B3 BD 0C78                                jsr     AddBAtoX
00550 05B6 A6 00                                  ldaa    0,x
00551 05B8 97 80                                  staa    $80
00552 05BA 20 01                                  bra     loc_5BD
00553               * ---------------------------------------------------------------------------
00554 05BC 01                                     nop
00555               
00556         05BD                loc_5BD         EQU     *
00557 05BD CE 043C                                ldx     #unk_43C
00558 05C0 BD 0C78                                jsr     AddBAtoX
00559 05C3 A6 00                                  ldaa    0,x
00560 05C5 36                                     psha
00561 05C6 CE 04AC                                ldx     #unk_4AC
00562 05C9 96 81                                  ldaa    $81
00563 05CB BD 0C78                                jsr     AddBAtoX
00564 05CE 32                                     pula
00565 05CF A1 00                                  cmpa    0,x
00566 05D1 2E 10                                  bgt     loc_5E3
00567 05D3 CE 0428                                ldx     #unk_428
00568 05D6 96 42                                  ldaa    $42
00569 05D8 BD 0C78                                jsr     AddBAtoX
00570 05DB 96 81                                  ldaa    $81
00571 05DD A7 00                                  staa    0,x
00572 05DF BD 0E6D                                jsr     sub_E6D
00573 05E2 39                                     rts
00574               * ---------------------------------------------------------------------------
00575               
00576         05E3                loc_5E3         EQU     *
00577 05E3 7E 059F                                jmp     loc_59F
00578               * ---------------------------------------------------------------------------
00579               
00580         05E6                loc_5E6         EQU     *
00581 05E6 96 80                                  ldaa    $80
00582 05E8 81 02                                  cmpa    #2
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 11
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

00583 05EA 26 05                                  bne     loc_5F1
00584 05EC BD 06B1                                jsr     sub_6B1
00585 05EF 20 BB                                  bra     loc_5AC
00586               * ---------------------------------------------------------------------------
00587               
00588         05F1                loc_5F1         EQU     *
00589 05F1 81 03                                  cmpa    #3
00590 05F3 26 05                                  bne     loc_5FA
00591 05F5 BD 06C3                                jsr     sub_6C3
00592 05F8 20 B2                                  bra     loc_5AC
00593               * ---------------------------------------------------------------------------
00594               
00595         05FA                loc_5FA         EQU     *
00596 05FA 81 0A                                  cmpa    #$A
00597 05FC 26 05                                  bne     loc_603
00598 05FE BD 2774                                jsr     sub_2774
00599 0601 20 A9                                  bra     loc_5AC
00600               * ---------------------------------------------------------------------------
00601               
00602         0603                loc_603         EQU     *
00603 0603 81 0B                                  cmpa    #$B
00604 0605 26 05                                  bne     loc_60C
00605 0607 BD 09BC                                jsr     sub_9BC
00606 060A 20 A0                                  bra     loc_5AC
00607               * ---------------------------------------------------------------------------
00608               
00609         060C                loc_60C         EQU     *
00610 060C 7E 247D                                jmp     loc_247D
00611               * End of function sub_59C
00612               
00613               * ---------------------------------------------------------------------------
00614 060F 01                                     nop
00615               * START OF FUNCTION CHUNK FOR sub_59C
00616               
00617         0610                loc_610         EQU     *
00618 0610 BD 0B2C                                jsr     sub_B2C
00619 0613 20 97                                  bra     loc_5AC
00620               * ---------------------------------------------------------------------------
00621               
00622         0615                loc_615         EQU     *
00623 0615 81 0C                                  cmpa    #$C
00624 0617 26 05                                  bne     loc_61E
00625 0619 BD 0ACF                                jsr     sub_ACF
00626 061C 20 8E                                  bra     loc_5AC
00627               * ---------------------------------------------------------------------------
00628               
00629         061E                loc_61E         EQU     *
00630 061E 81 0D                                  cmpa    #$D
00631 0620 26 05                                  bne     loc_627
00632 0622 BD 0AF9                                jsr     sub_AF9
00633 0625 20 85                                  bra     loc_5AC
00634               * ---------------------------------------------------------------------------
00635               
00636         0627                loc_627         EQU     *
00637 0627 81 0E                                  cmpa    #$E
00638 0629 26 03                                  bne     loc_62E
00639 062B BD 0AEA                                jsr     sub_AEA
00640               
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 12
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

00641         062E                loc_62E         EQU     *
00642 062E 7E 05AC                                jmp     loc_5AC
00643               * END OF FUNCTION CHUNK FOR sub_59C
00644               * ---------------------------------------------------------------------------
00645 0631 3F                                     swi
00646               
00647               * =============== S U B R O U TI N E =======================================
00648               
00649               
00650         0632                sub_632         EQU     *
00651 0632 7F 0060                                clr     $60
00652               
00653         0635                loc_635         EQU     *
00654 0635 96 60                                  ldaa    $60
00655 0637 81 01                                  cmpa    #1
00656 0639 2F 01                                  ble     loc_63C
00657 063B 39                                     rts
00658               * ---------------------------------------------------------------------------
00659               
00660         063C                loc_63C         EQU     *
00661 063C 8D 08                                  bsr     sub_646
00662 063E 7C 0060                                inc     $60
00663 0641 20 F2                                  bra     loc_635
00664               * End of function sub_632
00665               
00666               
00667               * =============== S U B R O U TI N E =======================================
00668               
00669               
00670         0643                sub_643         EQU     *
00671 0643 7F 0060                                clr     $60
00672               * End of function sub_643
00673               
00674               
00675               * =============== S U B R O U TI N E =======================================
00676               
00677               
00678         0646                sub_646         EQU     *
00679 0646 7A 0043                                dec     $43
00680 0649 96 43                                  ldaa    $43
00681 064B CE 0400                                ldx     #unk_400
00682 064E BD 0C78                                jsr     AddBAtoX
00683 0651 A6 00                                  ldaa    0,x
00684 0653 36                                     psha
00685 0654 96 60                                  ldaa    $60
00686 0656 CE 0045                                ldx     #$45             * 'E'
00687 0659 BD 0C78                                jsr     AddBAtoX
00688 065C 32                                     pula
00689 065D A7 00                                  staa    0,x
00690 065F CE 045C                                ldx     #unk_45C
00691 0662 BD 0C78                                jsr     AddBAtoX
00692 0665 A6 00                                  ldaa    0,x
00693 0667 97 61                                  staa    $61
00694 0669 81 01                                  cmpa    #1
00695 066B 26 1E                                  bne     loc_68B
00696 066D 7A 0043                                dec     $43
00697 0670 CE 0400                                ldx     #unk_400
00698 0673 96 43                                  ldaa    $43
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 13
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

00699 0675 BD 0C78                                jsr     AddBAtoX
00700 0678 A6 00                                  ldaa    0,x
00701 067A 36                                     psha
00702 067B CE 0047                                ldx     #$47             * 'G'
00703 067E 96 60                                  ldaa    $60
00704 0680 48                                     asla
00705 0681 BD 0C78                                jsr     AddBAtoX
00706 0684 32                                     pula
00707 0685 6F 00                                  clr     0,x
00708 0687 A7 01                                  staa    1,x
00709 0689 20 25                                  bra     locret_6B0
00710               * ---------------------------------------------------------------------------
00711               
00712         068B                loc_68B         EQU     *
00713 068B 81 02                                  cmpa    #2
00714 068D 26 21                                  bne     locret_6B0
00715 068F 96 43                                  ldaa    $43
00716 0691 80 02                                  suba    #2
00717 0693 97 43                                  staa    $43
00718 0695 CE 0400                                ldx     #unk_400
00719 0698 BD 0C78                                jsr     AddBAtoX
00720 069B E6 00                                  ldab    0,x
00721 069D A6 01                                  ldaa    1,x
00722 069F 36                                     psha
00723 06A0 37                                     pshb
00724 06A1 CE 0047                                ldx     #$47             * 'G'
00725 06A4 96 60                                  ldaa    $60
00726 06A6 48                                     asla
00727 06A7 BD 0C78                                jsr     AddBAtoX
00728 06AA 33                                     pulb
00729 06AB 32                                     pula
00730 06AC E7 00                                  stab    0,x
00731 06AE A7 01                                  staa    1,x
00732               
00733         06B0                locret_6B0      EQU     *
00734 06B0 39                                     rts
00735               * End of function sub_646
00736               
00737               
00738               * =============== S U B R O U TI N E =======================================
00739               
00740               
00741         06B1                sub_6B1         EQU     *
00742 06B1 BD 1009                                jsr     sub_1009
00743 06B4 BD 06FC                                jsr     sub_6FC
00744 06B7 86 8B                                  ldaa    #$8B             * '?'
00745 06B9 97 4D                                  staa    $4D
00746 06BB 86 C9                                  ldaa    #$C9             * '?'
00747 06BD 97 4E                                  staa    $4E
00748 06BF BD 0793                                jsr     sub_793
00749 06C2 39                                     rts
00750               * End of function sub_6B1
00751               
00752               
00753               * =============== S U B R O U TI N E =======================================
00754               
00755               
00756         06C3                sub_6C3         EQU     *
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 14
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

00757 06C3 BD 1009                                jsr     sub_1009
00758 06C6 BD 074F                                jsr     sub_74F
00759 06C9 86 80                                  ldaa    #$80             * '?'
00760 06CB 97 4D                                  staa    $4D
00761 06CD 86 C2                                  ldaa    #$C2             * '?'
00762 06CF 97 4E                                  staa    $4E
00763 06D1 BD 0793                                jsr     sub_793
00764 06D4 96 80                                  ldaa    $80
00765 06D6 81 04                                  cmpa    #4
00766 06D8 27 01                                  beq     sub_6DB
00767 06DA 39                                     rts
00768               * End of function sub_6C3
00769               
00770               
00771               * =============== S U B R O U TI N E =======================================
00772               
00773               
00774         06DB                sub_6DB         EQU     *
00775 06DB 96 4F                                  ldaa    $4F
00776 06DD 81 01                                  cmpa    #1
00777 06DF 27 08                                  beq     loc_6E9
00778 06E1 86 40                                  ldaa    #$40             * '@'
00779 06E3 97 70                                  staa    $70
00780 06E5 BD 0C3B                                jsr     sub_C3B
00781 06E8 39                                     rts
00782               * ---------------------------------------------------------------------------
00783               
00784         06E9                loc_6E9         EQU     *
00785 06E9 BD 272C                                jsr     sub_272C
00786 06EC 01                                     nop
00787 06ED 01                                     nop
00788 06EE 01                                     nop
00789 06EF 01                                     nop
00790 06F0 01                                     nop
00791 06F1 86 C2                                  ldaa    #$C2             * '?'
00792 06F3 97 70                                  staa    $70
00793 06F5 7F 0071                                clr     $71
00794 06F8 BD 0C3F                                jsr     sub_C3F
00795 06FB 39                                     rts
00796               * End of function sub_6DB
00797               
00798               
00799               * =============== S U B R O U TI N E =======================================
00800               
00801               
00802         06FC                sub_6FC         EQU     *
00803 06FC 96 45                                  ldaa    $45
00804 06FE CE 047C                                ldx     #unk_47C
00805 0701 BD 0C78                                jsr     AddBAtoX
00806 0704 A6 00                                  ldaa    0,x
00807 0706 27 10                                  beq     loc_718
00808 0708 96 45                                  ldaa    $45
00809 070A 97 57                                  staa    $57
00810 070C BD 08D4                                jsr     sub_8D4
00811 070F 96 46                                  ldaa    $46
00812 0711 97 57                                  staa    $57
00813 0713 DE 49                                  ldx     $49
00814 0715 DF 4B                                  stx     $4B
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 15
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

00815 0717 39                                     rts
00816               * ---------------------------------------------------------------------------
00817               
00818         0718                loc_718         EQU     *
00819 0718 96 46                                  ldaa    $46
00820 071A CE 047C                                ldx     #unk_47C
00821 071D BD 0C78                                jsr     AddBAtoX
00822 0720 A6 00                                  ldaa    0,x
00823 0722 27 10                                  beq     loc_734
00824               
00825         0724                loc_724         EQU     *
00826 0724 96 46                                  ldaa    $46
00827 0726 97 57                                  staa    $57
00828 0728 BD 08D4                                jsr     sub_8D4
00829 072B 96 45                                  ldaa    $45
00830 072D 97 57                                  staa    $57
00831 072F DE 47                                  ldx     $47
00832 0731 DF 4B                                  stx     $4B
00833 0733 39                                     rts
00834               * ---------------------------------------------------------------------------
00835               
00836         0734                loc_734         EQU     *
00837 0734 96 50                                  ldaa    $50
00838 0736 27 03                                  beq     loc_73B
00839 0738 BD 0A84                                jsr     sub_A84
00840               
00841         073B                loc_73B         EQU     *
00842 073B 96 46                                  ldaa    $46
00843 073D 97 57                                  staa    $57
00844 073F DE 49                                  ldx     $49
00845 0741 DF 4B                                  stx     $4B
00846 0743 BD 08D4                                jsr     sub_8D4
00847 0746 96 45                                  ldaa    $45
00848 0748 97 57                                  staa    $57
00849 074A DE 47                                  ldx     $47
00850 074C DF 4B                                  stx     $4B
00851 074E 39                                     rts
00852               * End of function sub_6FC
00853               
00854               
00855               * =============== S U B R O U TI N E =======================================
00856               
00857               
00858         074F                sub_74F         EQU     *
00859 074F 96 46                                  ldaa    $46
00860 0751 CE 047C                                ldx     #unk_47C
00861 0754 BD 0C78                                jsr     AddBAtoX
00862 0757 A6 00                                  ldaa    0,x
00863 0759 2E C9                                  bgt     loc_724
00864 075B 96 45                                  ldaa    $45
00865 075D CE 047C                                ldx     #unk_47C
00866 0760 BD 0C78                                jsr     AddBAtoX
00867 0763 A6 00                                  ldaa    0,x
00868 0765 27 CD                                  beq     loc_734
00869 0767 D6 80                                  ldab    $80
00870 0769 C1 03                                  cmpb    #3
00871 076B 26 07                                  bne     loc_774
00872 076D 86 04                                  ldaa    #4
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 16
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

00873 076F 97 80                                  staa    $80
00874 0771 8D 89                                  bsr     sub_6FC
00875 0773 39                                     rts
00876               * ---------------------------------------------------------------------------
00877               
00878         0774                loc_774         EQU     *
00879 0774 36                                     psha
00880 0775 86 36                                  ldaa    #$36             * '6'
00881 0777 97 70                                  staa    $70
00882 0779 BD 0C3B                                jsr     sub_C3B
00883 077C 32                                     pula
00884 077D 81 01                                  cmpa    #1
00885 077F 27 07                                  beq     loc_788
00886 0781 86 37                                  ldaa    #$37             * '7'
00887 0783 97 70                                  staa    $70
00888 0785 BD 0C3B                                jsr     sub_C3B
00889               
00890         0788                loc_788         EQU     *
00891 0788 7C 0045                                inc     $45
00892 078B 7C 0045                                inc     $45
00893 078E 7F 0050                                clr     $50
00894 0791 20 A1                                  bra     loc_734
00895               * End of function sub_74F
00896               
00897               
00898               * =============== S U B R O U TI N E =======================================
00899               
00900               
00901         0793                sub_793         EQU     *
00902               
00903               * FUNCTION CHUNK AT 0806 SIZE 00000017 BYTES
00904               * FUNCTION CHUNK AT 0821 SIZE 0000000C BYTES
00905               * FUNCTION CHUNK AT 2736 SIZE 00000014 BYTES
00906               
00907 0793 96 57                                  ldaa    $57
00908 0795 26 23                                  bne     sub_7BA
00909 0797 DE 4B                                  ldx     $4B
00910 0799 8C 0001                                cpx     #1
00911 079C 26 17                                  bne     sub_7B5
00912 079E 96 4F                                  ldaa    $4F
00913 07A0 81 01                                  cmpa    #1
00914 07A2 27 11                                  beq     sub_7B5
00915 07A4 C6 4C                                  ldab    #$4C             * 'L'
00916 07A6 96 4D                                  ldaa    $4D
00917 07A8 81 8B                                  cmpa    #$8B             * '?'
00918 07AA 27 02                                  beq     loc_7AE
00919 07AC C6 4A                                  ldab    #$4A             * 'J'
00920               
00921         07AE                loc_7AE         EQU     *
00922 07AE D7 70                                  stab    $70
00923 07B0 BD 0C3B                                jsr     sub_C3B
00924 07B3 20 51                                  bra     loc_806
00925               * End of function sub_793
00926               
00927               
00928               * =============== S U B R O U TI N E =======================================
00929               
00930               
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 17
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

00931         07B5                sub_7B5         EQU     *
00932 07B5 BD 0B45                                jsr     sub_B45
00933 07B8 20 4C                                  bra     loc_806
00934               * End of function sub_7B5
00935               
00936               
00937               * =============== S U B R O U TI N E =======================================
00938               
00939               * Attributes: thunk
00940               
00941         07BA                sub_7BA         EQU     *
00942 07BA 7E 0FE2                                jmp     sub_FE2
00943               * End of function sub_7BA
00944               
00945               * ---------------------------------------------------------------------------
00946 07BD 01                                     nop
00947               * START OF FUNCTION CHUNK FOR sub_FE2
00948               
00949         07BE                loc_7BE         EQU     *
00950 07BE BD 0B51                                jsr     sub_B51
00951 07C1 20 43                                  bra     loc_806
00952               * ---------------------------------------------------------------------------
00953               
00954         07C3                loc_7C3         EQU     *
00955 07C3 81 04                                  cmpa    #4
00956 07C5 26 08                                  bne     loc_7CF
00957 07C7 BD 2762                                jsr     sub_2762
00958 07CA BD 0C1D                                jsr     sub_C1D
00959 07CD 20 37                                  bra     loc_806
00960               * ---------------------------------------------------------------------------
00961               
00962         07CF                loc_7CF         EQU     *
00963 07CF 81 05                                  cmpa    #5
00964 07D1 26 08                                  bne     loc_7DB
00965 07D3 BD 276E                                jsr     sub_276E
00966 07D6 BD 0C18                                jsr     sub_C18
00967 07D9 20 2B                                  bra     loc_806
00968               * ---------------------------------------------------------------------------
00969               
00970         07DB                loc_7DB         EQU     *
00971 07DB 81 08                                  cmpa    #8
00972 07DD 26 08                                  bne     loc_7E7
00973 07DF BD 0C0A                                jsr     sub_C0A
00974 07E2 BD 0B5F                                jsr     sub_B5F
00975 07E5 20 1F                                  bra     loc_806
00976               * ---------------------------------------------------------------------------
00977               
00978         07E7                loc_7E7         EQU     *
00979 07E7 81 09                                  cmpa    #9
00980 07E9 26 08                                  bne     loc_7F3
00981 07EB BD 0C0A                                jsr     sub_C0A
00982 07EE BD 0B6C                                jsr     sub_B6C
00983 07F1 20 13                                  bra     loc_806
00984               * ---------------------------------------------------------------------------
00985               
00986         07F3                loc_7F3         EQU     *
00987 07F3 81 0A                                  cmpa    #$A
00988 07F5 26 05                                  bne     loc_7FC
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 18
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

00989 07F7 BD 0B83                                jsr     sub_B83
00990 07FA 20 0A                                  bra     loc_806
00991               * ---------------------------------------------------------------------------
00992               
00993         07FC                loc_7FC         EQU     *
00994 07FC 81 0B                                  cmpa    #$B
00995 07FE 26 05                                  bne     loc_805
00996 0800 BD 0B9B                                jsr     sub_B9B
00997 0803 20 01                                  bra     loc_806
00998               * ---------------------------------------------------------------------------
00999               
01000         0805                loc_805         EQU     *
01001 0805 3F                                     swi
01002               * END OF FUNCTION CHUNK FOR sub_FE2
01003               * START OF FUNCTION CHUNK FOR sub_793
01004               
01005         0806                loc_806         EQU     *
01006 0806 96 57                                  ldaa    $57
01007 0808 44                                     lsra
01008 0809 25 16                                  bcs     loc_821
01009 080B 96 4F                                  ldaa    $4F
01010 080D 81 01                                  cmpa    #1
01011 080F 26 10                                  bne     loc_821
01012 0811 96 4E                                  ldaa    $4E
01013 0813 97 70                                  staa    $70
01014 0815 7E 2736                                jmp     loc_2736
01015               * ---------------------------------------------------------------------------
01016               
01017         0818                loc_818         EQU     *
01018 0818 BD 0C3F                                jsr     sub_C3F
01019 081B 20 04                                  bra     loc_821
01020               * END OF FUNCTION CHUNK FOR sub_793
01021               * ---------------------------------------------------------------------------
01022 081D 86 01                                  ldaa    #1
01023 081F 97 4F                                  staa    $4F
01024               * START OF FUNCTION CHUNK FOR sub_793
01025               
01026         0821                loc_821         EQU     *
01027 0821 96 4F                                  ldaa    $4F
01028 0823 84 01                                  anda    #1
01029 0825 8B 02                                  adda    #2
01030 0827 97 45                                  staa    $45
01031 0829 BD 0A6E                                jsr     sub_A6E
01032 082C 39                                     rts
01033               * END OF FUNCTION CHUNK FOR sub_793
01034               
01035               * =============== S U B R O U TI N E =======================================
01036               
01037               
01038         082D                sub_82D         EQU     *
01039               
01040               * FUNCTION CHUNK AT 08B3 SIZE 00000009 BYTES
01041               * FUNCTION CHUNK AT 08BD SIZE 00000016 BYTES
01042               * FUNCTION CHUNK AT 0CAE SIZE 0000000B BYTES
01043               * FUNCTION CHUNK AT 1CD5 SIZE 0000000E BYTES
01044               * FUNCTION CHUNK AT 21D0 SIZE 0000000D BYTES
01045               * FUNCTION CHUNK AT 274A SIZE 00000013 BYTES
01046               
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 19
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

01047 082D BD 0632                                jsr     sub_632
01048 0830 96 46                                  ldaa    $46
01049 0832 CE 046C                                ldx     #unk_46C
01050 0835 BD 0C78                                jsr     AddBAtoX
01051 0838 A6 00                                  ldaa    0,x
01052 083A 97 61                                  staa    $61
01053 083C 26 01                                  bne     loc_83F
01054 083E 3F                                     swi
01055               
01056         083F                loc_83F         EQU     *
01057 083F 96 45                                  ldaa    $45
01058 0841 81 02                                  cmpa    #2
01059 0843 2C 40                                  bge     loc_885
01060 0845 96 61                                  ldaa    $61
01061 0847 81 01                                  cmpa    #1
01062 0849 27 01                                  beq     loc_84C
01063 084B 3F                                     swi
01064               
01065         084C                loc_84C         EQU     *
01066 084C D6 47                                  ldab    $47
01067 084E 96 48                                  ldaa    $48
01068 0850 9B 4A                                  adda    $4A
01069 0852 D9 49                                  adcb    $49
01070 0854 D7 4B                                  stab    $4B
01071 0856 97 4C                                  staa    $4C
01072 0858 96 46                                  ldaa    $46
01073 085A 81 0B                                  cmpa    #$B
01074 085C 26 0C                                  bne     loc_86A
01075 085E 7E 1CD5                                jmp     loc_1CD5
01076               * ---------------------------------------------------------------------------
01077 0861 01                                     nop
01078               
01079         0862                loc_862         EQU     *
01080 0862 9B 48                                  adda    $48
01081 0864 D9 47                                  adcb    $47
01082 0866 D7 4B                                  stab    $4B
01083 0868 97 4C                                  staa    $4C
01084               
01085         086A                loc_86A         EQU     *
01086 086A 96 43                                  ldaa    $43
01087 086C CE 0400                                ldx     #unk_400
01088 086F BD 0C78                                jsr     AddBAtoX
01089 0872 96 4B                                  ldaa    $4B
01090 0874 A7 00                                  staa    0,x
01091 0876 96 4C                                  ldaa    $4C
01092 0878 A7 01                                  staa    1,x
01093 087A 96 46                                  ldaa    $46
01094 087C A7 02                                  staa    2,x
01095 087E 96 43                                  ldaa    $43
01096 0880 8B 03                                  adda    #3
01097 0882 7E 0CAE                                jmp     loc_CAE
01098               * ---------------------------------------------------------------------------
01099               
01100         0885                loc_885         EQU     *
01101 0885 96 45                                  ldaa    $45
01102 0887 CE 047C                                ldx     #unk_47C
01103 088A BD 0C78                                jsr     AddBAtoX
01104 088D A6 00                                  ldaa    0,x
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 20
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

01105 088F 26 07                                  bne     loc_898
01106 0891 96 50                                  ldaa    $50
01107 0893 27 03                                  beq     loc_898
01108 0895 BD 0A84                                jsr     sub_A84
01109               
01110         0898                loc_898         EQU     *
01111 0898 96 45                                  ldaa    $45
01112 089A 97 57                                  staa    $57
01113 089C DE 47                                  ldx     $47
01114 089E DF 4B                                  stx     $4B
01115 08A0 BD 08D4                                jsr     sub_8D4
01116 08A3 96 46                                  ldaa    $46
01117 08A5 7E 21D0                                jmp     loc_21D0
01118               * ---------------------------------------------------------------------------
01119               
01120         08A8                loc_8A8         EQU     *
01121 08A8 86 48                                  ldaa    #$48             * 'H'
01122 08AA BD 11E4                                jsr     sub_11E4
01123 08AD 86 59                                  ldaa    #$59             * 'Y'
01124 08AF BD 11E4                                jsr     sub_11E4
01125 08B2 01                                     nop
01126               * End of function sub_82D
01127               
01128               * START OF FUNCTION CHUNK FOR sub_82D
01129               
01130         08B3                loc_8B3         EQU     *
01131 08B3 96 61                                  ldaa    $61
01132 08B5 81 01                                  cmpa    #1
01133 08B7 26 0F                                  bne     loc_8C8
01134 08B9 7E 274A                                jmp     loc_274A
01135               * END OF FUNCTION CHUNK FOR sub_82D
01136               * ---------------------------------------------------------------------------
01137 08BC 01                                     nop
01138               * START OF FUNCTION CHUNK FOR sub_82D
01139               
01140         08BD                loc_8BD         EQU     *
01141 08BD 86 8B                                  ldaa    #$8B             * '?'
01142 08BF 97 4D                                  staa    $4D
01143 08C1 86 C9                                  ldaa    #$C9             * '?'
01144 08C3 97 4E                                  staa    $4E
01145 08C5 BD 21DD                                jsr     sub_21DD
01146               
01147         08C8                loc_8C8         EQU     *
01148 08C8 96 46                                  ldaa    $46
01149 08CA 84 01                                  anda    #1
01150 08CC 8B 06                                  adda    #6
01151 08CE 97 45                                  staa    $45
01152 08D0 7E 0CB2                                jmp     loc_CB2
01153               * END OF FUNCTION CHUNK FOR sub_82D
01154               * ---------------------------------------------------------------------------
01155 08D3 01                                     nop
01156               
01157               * =============== S U B R O U TI N E =======================================
01158               
01159               
01160         08D4                sub_8D4         EQU     *
01161               
01162               * FUNCTION CHUNK AT 0CC9 SIZE 0000000A BYTES
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 21
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

01163               
01164 08D4 86 86                                  ldaa    #$86             * '?'
01165 08D6 97 4D                                  staa    $4D
01166 08D8 86 C6                                  ldaa    #$C6             * '?'
01167 08DA 97 4E                                  staa    $4E
01168 08DC 96 57                                  ldaa    $57
01169 08DE 26 05                                  bne     loc_8E5
01170 08E0 BD 116F                                jsr     sub_116F
01171 08E3 20 78                                  bra     loc_95D
01172               * ---------------------------------------------------------------------------
01173               
01174         08E5                loc_8E5         EQU     *
01175 08E5 81 01                                  cmpa    #1
01176 08E7 26 05                                  bne     loc_8EE
01177 08E9 BD 0B51                                jsr     sub_B51
01178 08EC 20 6F                                  bra     loc_95D
01179               * ---------------------------------------------------------------------------
01180               
01181         08EE                loc_8EE         EQU     *
01182 08EE 81 04                                  cmpa    #4
01183 08F0 26 09                                  bne     loc_8FB
01184 08F2 86 32                                  ldaa    #$32             * '2'
01185 08F4 97 70                                  staa    $70
01186 08F6 BD 0C3B                                jsr     sub_C3B
01187 08F9 20 62                                  bra     loc_95D
01188               * ---------------------------------------------------------------------------
01189               
01190         08FB                loc_8FB         EQU     *
01191 08FB 81 05                                  cmpa    #5
01192 08FD 26 0C                                  bne     loc_90B
01193 08FF 86 33                                  ldaa    #$33             * '3'
01194 0901 BD 11E4                                jsr     sub_11E4
01195 0904 86 32                                  ldaa    #$32             * '2'
01196 0906 BD 11E4                                jsr     sub_11E4
01197 0909 20 52                                  bra     loc_95D
01198               * ---------------------------------------------------------------------------
01199               
01200         090B                loc_90B         EQU     *
01201 090B 81 06                                  cmpa    #6
01202 090D 26 08                                  bne     loc_917
01203 090F BD 0BD4                                jsr     sub_BD4
01204 0912 BD 0BE0                                jsr     sub_BE0
01205 0915 20 46                                  bra     loc_95D
01206               * ---------------------------------------------------------------------------
01207               
01208         0917                loc_917         EQU     *
01209 0917 81 07                                  cmpa    #7
01210 0919 26 08                                  bne     loc_923
01211 091B BD 0BD4                                jsr     sub_BD4
01212 091E BD 0BEF                                jsr     sub_BEF
01213 0921 20 3A                                  bra     loc_95D
01214               * ---------------------------------------------------------------------------
01215               
01216         0923                loc_923         EQU     *
01217 0923 81 08                                  cmpa    #8
01218 0925 26 08                                  bne     loc_92F
01219 0927 BD 0C0A                                jsr     sub_C0A
01220 092A BD 0BE0                                jsr     sub_BE0
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 22
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

01221 092D 20 2E                                  bra     loc_95D
01222               * ---------------------------------------------------------------------------
01223               
01224         092F                loc_92F         EQU     *
01225 092F 81 09                                  cmpa    #9
01226 0931 26 08                                  bne     loc_93B
01227 0933 BD 0C0A                                jsr     sub_C0A
01228 0936 BD 0BEF                                jsr     sub_BEF
01229 0939 20 22                                  bra     loc_95D
01230               * ---------------------------------------------------------------------------
01231               
01232         093B                loc_93B         EQU     *
01233 093B 81 0A                                  cmpa    #$A
01234 093D 26 05                                  bne     loc_944
01235 093F BD 0B83                                jsr     sub_B83
01236 0942 20 19                                  bra     loc_95D
01237               * ---------------------------------------------------------------------------
01238               
01239         0944                loc_944         EQU     *
01240 0944 81 0B                                  cmpa    #$B
01241 0946 26 05                                  bne     loc_94D
01242 0948 BD 0B9B                                jsr     sub_B9B
01243 094B 20 10                                  bra     loc_95D
01244               * ---------------------------------------------------------------------------
01245               
01246         094D                loc_94D         EQU     *
01247 094D 81 0E                                  cmpa    #$E
01248 094F 26 05                                  bne     loc_956
01249 0951 BD 0BE0                                jsr     sub_BE0
01250 0954 20 07                                  bra     loc_95D
01251               * ---------------------------------------------------------------------------
01252               
01253         0956                loc_956         EQU     *
01254 0956 81 0F                                  cmpa    #$F
01255 0958 26 05                                  bne     loc_95F
01256 095A BD 0BEF                                jsr     sub_BEF
01257               
01258         095D                loc_95D         EQU     *
01259 095D 96 57                                  ldaa    $57
01260               
01261         095F                loc_95F         EQU     *
01262 095F 44                                     lsra
01263 0960 25 0D                                  bcs     loc_96F
01264 0962 7E 0CC9                                jmp     loc_CC9
01265               * ---------------------------------------------------------------------------
01266 0965 01                                     nop
01267               
01268         0966                loc_966         EQU     *
01269 0966 86 5F                                  ldaa    #$5F             * '_'
01270 0968 97 70                                  staa    $70
01271 096A BD 0C3B                                jsr     sub_C3B
01272 096D 20 04                                  bra     locret_973
01273               * ---------------------------------------------------------------------------
01274               
01275         096F                loc_96F         EQU     *
01276 096F 86 01                                  ldaa    #1
01277 0971 97 4F                                  staa    $4F
01278               
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 23
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

01279         0973                locret_973      EQU     *
01280 0973 39                                     rts
01281               * End of function sub_8D4
01282               
01283               
01284               * =============== S U B R O U TI N E =======================================
01285               
01286               
01287         0974                sub_974         EQU     *
01288 0974 BD 0C94                                jsr     sub_C94
01289               * End of function sub_974
01290               
01291               
01292               * =============== S U B R O U TI N E =======================================
01293               
01294               
01295         0977                sub_977         EQU     *
01296 0977 86 87                                  ldaa    #$87             * '?'
01297 0979 97 4D                                  staa    $4D
01298 097B 86 C7                                  ldaa    #$C7             * '?'
01299 097D 97 4E                                  staa    $4E
01300 097F 96 58                                  ldaa    $58
01301 0981 81 0A                                  cmpa    #$A
01302 0983 26 05                                  bne     loc_98A
01303 0985 BD 0B83                                jsr     sub_B83
01304 0988 20 31                                  bra     locret_9BB
01305               * ---------------------------------------------------------------------------
01306               
01307         098A                loc_98A         EQU     *
01308 098A 81 0B                                  cmpa    #$B
01309 098C 26 05                                  bne     loc_993
01310 098E BD 0B9B                                jsr     sub_B9B
01311 0991 20 28                                  bra     locret_9BB
01312               * ---------------------------------------------------------------------------
01313               
01314         0993                loc_993         EQU     *
01315 0993 81 08                                  cmpa    #8
01316 0995 26 08                                  bne     loc_99F
01317 0997 BD 0C0A                                jsr     sub_C0A
01318 099A BD 0BEB                                jsr     sub_BEB
01319 099D 20 1C                                  bra     locret_9BB
01320               * ---------------------------------------------------------------------------
01321               
01322         099F                loc_99F         EQU     *
01323 099F 81 09                                  cmpa    #9
01324 09A1 26 08                                  bne     loc_9AB
01325 09A3 BD 0C0A                                jsr     sub_C0A
01326 09A6 BD 0C02                                jsr     sub_C02
01327 09A9 20 10                                  bra     locret_9BB
01328               * ---------------------------------------------------------------------------
01329               
01330         09AB                loc_9AB         EQU     *
01331 09AB 81 0E                                  cmpa    #$E
01332 09AD 26 05                                  bne     loc_9B4
01333 09AF BD 0BEB                                jsr     sub_BEB
01334 09B2 20 07                                  bra     locret_9BB
01335               * ---------------------------------------------------------------------------
01336               
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 24
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

01337         09B4                loc_9B4         EQU     *
01338 09B4 81 0F                                  cmpa    #$F
01339 09B6 26 05                                  bne     sub_9BC+1
01340 09B8 BD 0C02                                jsr     sub_C02
01341               
01342         09BB                locret_9BB      EQU     *
01343 09BB 39                                     rts
01344               * End of function sub_977
01345               
01346               
01347               * =============== S U B R O U TI N E =======================================
01348               
01349               
01350         09BC                sub_9BC         EQU     *
01351               
01352               * FUNCTION CHUNK AT 0A34 SIZE 00000021 BYTES
01353               * FUNCTION CHUNK AT 0A5F SIZE 0000000F BYTES
01354               
01355 09BC BD 0632                                jsr     sub_632
01356 09BF 96 45                                  ldaa    $45
01357 09C1 97 57                                  staa    $57
01358 09C3 96 46                                  ldaa    $46
01359 09C5 97 58                                  staa    $58
01360 09C7 96 57                                  ldaa    $57
01361 09C9 CE 048C                                ldx     #unk_48C
01362 09CC BD 0C78                                jsr     AddBAtoX
01363 09CF A6 00                                  ldaa    0,x
01364 09D1 97 51                                  staa    $51
01365 09D3 96 58                                  ldaa    $58
01366 09D5 CE 049C                                ldx     #unk_49C
01367 09D8 BD 0C78                                jsr     AddBAtoX
01368 09DB A6 00                                  ldaa    0,x
01369 09DD 97 52                                  staa    $52
01370 09DF 96 51                                  ldaa    $51
01371 09E1 26 01                                  bne     loc_9E4
01372 09E3 3F                                     swi
01373               
01374         09E4                loc_9E4         EQU     *
01375 09E4 D6 52                                  ldab    $52
01376 09E6 26 01                                  bne     loc_9E9
01377 09E8 3F                                     swi
01378               
01379         09E9                loc_9E9         EQU     *
01380 09E9 C1 02                                  cmpb    #2
01381 09EB 26 24                                  bne     loc_A11
01382 09ED 81 02                                  cmpa    #2
01383 09EF 2C 01                                  bge     loc_9F2
01384 09F1 3F                                     swi
01385               
01386         09F2                loc_9F2         EQU     *
01387 09F2 26 0B                                  bne     loc_9FF
01388 09F4 BD 0BD4                                jsr     sub_BD4
01389 09F7 96 58                                  ldaa    $58
01390 09F9 8B 08                                  adda    #8
01391 09FB 97 58                                  staa    $58
01392 09FD 20 12                                  bra     loc_A11
01393               * ---------------------------------------------------------------------------
01394               
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 25
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

01395         09FF                loc_9FF         EQU     *
01396 09FF BD 0C0A                                jsr     sub_C0A
01397 0A02 96 57                                  ldaa    $57
01398 0A04 8B 06                                  adda    #6
01399 0A06 97 57                                  staa    $57
01400 0A08 BD 0C30                                jsr     sub_C30
01401 0A0B 7C 0058                                inc     $58
01402 0A0E 7C 0058                                inc     $58
01403               
01404         0A11                loc_A11         EQU     *
01405 0A11 96 58                                  ldaa    $58
01406 0A13 81 0B                                  cmpa    #$B
01407 0A15 26 2E                                  bne     loc_A45
01408 0A17 96 57                                  ldaa    $57
01409 0A19 81 0B                                  cmpa    #$B
01410 0A1B 26 17                                  bne     loc_A34
01411 0A1D 86 CE                                  ldaa    #$CE             * '?'
01412 0A1F 97 4D                                  staa    $4D
01413 0A21 DE 47                                  ldx     $47
01414 0A23 DF 4B                                  stx     $4B
01415 0A25 BD 0B83                                jsr     sub_B83
01416               
01417         0A28                loc_A28         EQU     *
01418 0A28 86 CF                                  ldaa    #$CF             * '?'
01419               * End of function sub_9BC
01420               
01421               
01422               * =============== S U B R O U TI N E =======================================
01423               
01424               
01425         0A2A                sub_A2A         EQU     *
01426 0A2A 97 4D                                  staa    $4D
01427 0A2C DE 49                                  ldx     $49
01428               
01429         0A2E                loc_A2E         EQU     *
01430 0A2E DF 4B                                  stx     $4B
01431 0A30 BD 0B83                                jsr     sub_B83
01432 0A33 39                                     rts
01433               * End of function sub_A2A
01434               
01435               * ---------------------------------------------------------------------------
01436               * START OF FUNCTION CHUNK FOR sub_9BC
01437               
01438         0A34                loc_A34         EQU     *
01439 0A34 81 01                                  cmpa    #1
01440 0A36 2E 32                                  bgt     loc_A6A
01441 0A38 86 CE                                  ldaa    #$CE             * '?'
01442 0A3A 97 70                                  staa    $70
01443 0A3C DE 47                                  ldx     $47
01444 0A3E DF 71                                  stx     $71
01445 0A40 BD 0C43                                jsr     sub_C43
01446 0A43 20 E3                                  bra     loc_A28
01447               * ---------------------------------------------------------------------------
01448               
01449         0A45                loc_A45         EQU     *
01450 0A45 96 57                                  ldaa    $57
01451 0A47 26 21                                  bne     loc_A6A
01452 0A49 DE 47                                  ldx     $47
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 26
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

01453 0A4B 26 1D                                  bne     loc_A6A
01454 0A4D 96 58                                  ldaa    $58
01455 0A4F 81 0A                                  cmpa    #$A
01456 0A51 26 0C                                  bne     loc_A5F
01457 0A53 86 7F                                  ldaa    #$7F             * ''
01458               * END OF FUNCTION CHUNK FOR sub_9BC
01459               
01460               * =============== S U B R O U TI N E =======================================
01461               
01462               
01463         0A55                sub_A55         EQU     *
01464 0A55 97 70                                  staa    $70
01465 0A57 DE 49                                  ldx     $49
01466 0A59 DF 71                                  stx     $71
01467 0A5B BD 0C43                                jsr     sub_C43
01468 0A5E 39                                     rts
01469               * End of function sub_A55
01470               
01471               * ---------------------------------------------------------------------------
01472               * START OF FUNCTION CHUNK FOR sub_9BC
01473               
01474         0A5F                loc_A5F         EQU     *
01475 0A5F 86 4F                                  ldaa    #$4F             * 'O'
01476 0A61 97 70                                  staa    $70
01477 0A63 BD 0CA0                                jsr     sub_CA0
01478 0A66 BD 0CB9                                jsr     sub_CB9
01479 0A69 39                                     rts
01480               * ---------------------------------------------------------------------------
01481               
01482         0A6A                loc_A6A         EQU     *
01483 0A6A BD 0974                                jsr     sub_974
01484 0A6D 39                                     rts
01485               * END OF FUNCTION CHUNK FOR sub_9BC
01486               
01487               * =============== S U B R O U TI N E =======================================
01488               
01489               
01490         0A6E                sub_A6E         EQU     *
01491 0A6E 96 43                                  ldaa    $43
01492 0A70 97 44                                  staa    $44
01493 0A72 CE 0400                                ldx     #unk_400
01494 0A75 BD 0C78                                jsr     AddBAtoX
01495 0A78 96 45                                  ldaa    $45
01496 0A7A A7 00                                  staa    0,x
01497 0A7C BD 0E78                                jsr     sub_E78
01498 0A7F 86 01                                  ldaa    #1
01499 0A81 97 50                                  staa    $50
01500 0A83 39                                     rts
01501               * End of function sub_A6E
01502               
01503               
01504               * =============== S U B R O U TI N E =======================================
01505               
01506               
01507         0A84                sub_A84         EQU     *
01508 0A84 96 44                                  ldaa    $44
01509 0A86 CE 0400                                ldx     #unk_400
01510 0A89 BD 0C78                                jsr     AddBAtoX
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 27
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

01511 0A8C A6 00                                  ldaa    0,x
01512 0A8E 8B 02                                  adda    #2
01513 0A90 A7 00                                  staa    0,x
01514 0A92 BD 2768                                jsr     sub_2768
01515 0A95 CE 047C                                ldx     #$47C
01516 0A98 BD 0C78                                jsr     AddBAtoX
01517 0A9B A6 00                                  ldaa    0,x
01518 0A9D 81 01                                  cmpa    #1
01519 0A9F 26 08                                  bne     loc_AA9
01520 0AA1 86 36                                  ldaa    #$36             * '6'
01521 0AA3 97 70                                  staa    $70
01522 0AA5 BD 0C3B                                jsr     sub_C3B
01523 0AA8 39                                     rts
01524               * ---------------------------------------------------------------------------
01525               
01526         0AA9                loc_AA9         EQU     *
01527 0AA9 BD 0C30                                jsr     sub_C30
01528 0AAC 39                                     rts
01529               * End of function sub_A84
01530               
01531               
01532               * =============== S U B R O U TI N E =======================================
01533               
01534               
01535         0AAD                sub_AAD         EQU     *
01536 0AAD BD 0643                                jsr     sub_643
01537 0AB0 96 45                                  ldaa    $45
01538 0AB2 CE 047C                                ldx     #unk_47C
01539 0AB5 BD 0C78                                jsr     AddBAtoX
01540 0AB8 A6 00                                  ldaa    0,x
01541 0ABA 26 07                                  bne     loc_AC3
01542 0ABC 96 50                                  ldaa    $50
01543 0ABE 27 03                                  beq     loc_AC3
01544 0AC0 BD 0A84                                jsr     sub_A84
01545               
01546         0AC3                loc_AC3         EQU     *
01547 0AC3 96 45                                  ldaa    $45
01548 0AC5 97 57                                  staa    $57
01549 0AC7 DE 47                                  ldx     $47
01550 0AC9 DF 4B                                  stx     $4B
01551 0ACB BD 08D4                                jsr     sub_8D4
01552 0ACE 39                                     rts
01553               * End of function sub_AAD
01554               
01555               
01556               * =============== S U B R O U TI N E =======================================
01557               
01558               
01559         0ACF                sub_ACF         EQU     *
01560 0ACF 8D DC                                  bsr     sub_AAD
01561 0AD1 BD 1148                                jsr     sub_1148
01562 0AD4 01                                     nop
01563 0AD5 26 07                                  bne     loc_ADE
01564 0AD7 86 5F                                  ldaa    #$5F             * '_'
01565 0AD9 97 70                                  staa    $70
01566               
01567         0ADB                loc_ADB         EQU     *
01568 0ADB BD 0C3B                                jsr     sub_C3B
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 28
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

01569               
01570         0ADE                loc_ADE         EQU     *
01571 0ADE 96 4F                                  ldaa    $4F
01572 0AE0 84 01                                  anda    #1
01573 0AE2 8B 02                                  adda    #2
01574 0AE4 97 45                                  staa    $45
01575 0AE6 BD 0A6E                                jsr     sub_A6E
01576 0AE9 39                                     rts
01577               * End of function sub_ACF
01578               
01579               
01580               * =============== S U B R O U TI N E =======================================
01581               
01582               
01583         0AEA                sub_AEA         EQU     *
01584 0AEA BD 0AAD                                jsr     sub_AAD
01585 0AED BD 0B02                                jsr     sub_B02
01586 0AF0 01                                     nop
01587 0AF1 86 03                                  ldaa    #3
01588 0AF3 97 45                                  staa    $45
01589 0AF5 BD 0A6E                                jsr     sub_A6E
01590 0AF8 39                                     rts
01591               * End of function sub_AEA
01592               
01593               
01594               * =============== S U B R O U TI N E =======================================
01595               
01596               
01597         0AF9                sub_AF9         EQU     *
01598               
01599               * FUNCTION CHUNK AT 0B13 SIZE 00000009 BYTES
01600               * FUNCTION CHUNK AT 0B1D SIZE 0000000F BYTES
01601               
01602 0AF9 BD 0AAD                                jsr     sub_AAD
01603 0AFC BD 1148                                jsr     sub_1148
01604 0AFF 7E 0B13                                jmp     loc_B13
01605               * End of function sub_AF9
01606               
01607               
01608               * =============== S U B R O U TI N E =======================================
01609               
01610               
01611         0B02                sub_B02         EQU     *
01612 0B02 BD 0E1A                                jsr     sub_E1A
01613 0B05 86 01                                  ldaa    #1
01614 0B07 97 4F                                  staa    $4F
01615 0B09 39                                     rts
01616               * End of function sub_B02
01617               
01618               * ---------------------------------------------------------------------------
01619 0B0A 01                                     nop
01620 0B0B 01                                     nop
01621 0B0C 01                                     nop
01622 0B0D 01                                     nop
01623 0B0E 01                                     nop
01624 0B0F 01                                     nop
01625 0B10 01                                     nop
01626 0B11 01                                     nop
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 29
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

01627 0B12 01                                     nop
01628               * START OF FUNCTION CHUNK FOR sub_AF9
01629               
01630         0B13                loc_B13         EQU     *
01631 0B13 27 08                                  beq     loc_B1D
01632 0B15 86 17                                  ldaa    #$17
01633 0B17 97 70                                  staa    $70
01634 0B19 7E 0ADB                                jmp     loc_ADB
01635               * END OF FUNCTION CHUNK FOR sub_AF9
01636               * ---------------------------------------------------------------------------
01637 0B1C 39                                     rts
01638               * ---------------------------------------------------------------------------
01639               * START OF FUNCTION CHUNK FOR sub_AF9
01640               
01641         0B1D                loc_B1D         EQU     *
01642 0B1D 01                                     nop
01643 0B1E 01                                     nop
01644 0B1F 86 17                                  ldaa    #$17
01645 0B21 BD 11E4                                jsr     sub_11E4
01646 0B24 86 5F                                  ldaa    #$5F             * '_'
01647 0B26 01                                     nop
01648 0B27 BD 11E4                                jsr     sub_11E4
01649 0B2A 20 B2                                  bra     loc_ADE
01650               * END OF FUNCTION CHUNK FOR sub_AF9
01651               
01652               * =============== S U B R O U TI N E =======================================
01653               
01654               
01655         0B2C                sub_B2C         EQU     *
01656               
01657               * FUNCTION CHUNK AT 1190 SIZE 00000007 BYTES
01658               
01659 0B2C 96 80                                  ldaa    $80
01660 0B2E 8B 10                                  adda    #$10
01661 0B30 97 62                                  staa    $62
01662 0B32 86 03                                  ldaa    #3
01663 0B34 97 80                                  staa    $80
01664 0B36 BD 0F48                                jsr     sub_F48
01665 0B39 96 62                                  ldaa    $62
01666 0B3B 97 70                                  staa    $70
01667 0B3D 86 03                                  ldaa    #3
01668 0B3F 97 71                                  staa    $71
01669 0B41 7E 1190                                jmp     loc_1190
01670               * End of function sub_B2C
01671               
01672               * ---------------------------------------------------------------------------
01673 0B44 39                                     rts
01674               
01675               * =============== S U B R O U TI N E =======================================
01676               
01677               
01678         0B45                sub_B45         EQU     *
01679 0B45 96 4D                                  ldaa    $4D
01680               
01681         0B47                loc_B47         EQU     *
01682 0B47 97 70                                  staa    $70
01683 0B49 96 4C                                  ldaa    $4C
01684 0B4B 97 71                                  staa    $71
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 30
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

01685 0B4D BD 0C3F                                jsr     sub_C3F
01686 0B50 39                                     rts
01687               * End of function sub_B45
01688               
01689               
01690               * =============== S U B R O U TI N E =======================================
01691               
01692               
01693         0B51                sub_B51         EQU     *
01694 0B51 8D F2                                  bsr     sub_B45
01695 0B53 96 4E                                  ldaa    $4E
01696 0B55 97 70                                  staa    $70
01697 0B57 96 4B                                  ldaa    $4B
01698 0B59 97 71                                  staa    $71
01699 0B5B BD 0C3F                                jsr     sub_C3F
01700 0B5E 39                                     rts
01701               * End of function sub_B51
01702               
01703               
01704               * =============== S U B R O U TI N E =======================================
01705               
01706               
01707         0B5F                sub_B5F         EQU     *
01708 0B5F 96 4D                                  ldaa    $4D
01709 0B61 8B 20                                  adda    #$20             * ' '
01710 0B63 97 70                                  staa    $70
01711 0B65 7F 0071                                clr     $71
01712 0B68 BD 0C3F                                jsr     sub_C3F
01713 0B6B 39                                     rts
01714               * End of function sub_B5F
01715               
01716               
01717               * =============== S U B R O U TI N E =======================================
01718               
01719               
01720         0B6C                sub_B6C         EQU     *
01721 0B6C 96 4D                                  ldaa    $4D
01722 0B6E 8B 20                                  adda    #$20             * ' '
01723 0B70 97 70                                  staa    $70
01724 0B72 86 01                                  ldaa    #1
01725 0B74 97 71                                  staa    $71
01726 0B76 BD 11BF                                jsr     sub_11BF
01727 0B79 01                                     nop
01728 0B7A 97 70                                  staa    $70
01729 0B7C 7F 0071                                clr     $71
01730 0B7F BD 0C3F                                jsr     sub_C3F
01731 0B82 39                                     rts
01732               * End of function sub_B6C
01733               
01734               
01735               * =============== S U B R O U TI N E =======================================
01736               
01737               
01738         0B83                sub_B83         EQU     *
01739 0B83 96 4B                                  ldaa    $4B
01740 0B85 26 06                                  bne     loc_B8D
01741 0B87 96 4D                                  ldaa    $4D
01742 0B89 8B 10                                  adda    #$10
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 31
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

01743 0B8B 20 BA                                  bra     loc_B47
01744               * ---------------------------------------------------------------------------
01745               
01746         0B8D                loc_B8D         EQU     *
01747 0B8D 96 4D                                  ldaa    $4D
01748 0B8F 8B 30                                  adda    #$30             * '0'
01749 0B91 97 70                                  staa    $70
01750 0B93 DE 4B                                  ldx     $4B
01751 0B95 DF 71                                  stx     $71
01752 0B97 BD 0C43                                jsr     sub_C43
01753 0B9A 39                                     rts
01754               * End of function sub_B83
01755               
01756               
01757               * =============== S U B R O U TI N E =======================================
01758               
01759               
01760         0B9B                sub_B9B         EQU     *
01761               
01762               * FUNCTION CHUNK AT 0CA8 SIZE 00000006 BYTES
01763               
01764 0B9B 96 4B                                  ldaa    $4B
01765 0B9D 26 1A                                  bne     loc_BB9
01766 0B9F 96 4C                                  ldaa    $4C
01767 0BA1 81 FE                                  cmpa    #$FE             * '?'
01768 0BA3 22 14                                  bhi     loc_BB9
01769 0BA5 96 4D                                  ldaa    $4D
01770 0BA7 8B 10                                  adda    #$10
01771 0BA9 97 70                                  staa    $70
01772 0BAB 96 4C                                  ldaa    $4C
01773 0BAD BD 11C7                                jsr     sub_11C7
01774 0BB0 97 71                                  staa    $71
01775 0BB2 96 4E                                  ldaa    $4E
01776 0BB4 8B 10                                  adda    #$10
01777 0BB6 7E 0CA8                                jmp     loc_CA8
01778               * ---------------------------------------------------------------------------
01779               
01780         0BB9                loc_BB9         EQU     *
01781 0BB9 96 4D                                  ldaa    $4D
01782 0BBB 8B 30                                  adda    #$30             * '0'
01783 0BBD 97 70                                  staa    $70
01784 0BBF DE 4B                                  ldx     $4B
01785 0BC1 DF 74                                  stx     $74
01786 0BC3 BD 11D0                                jsr     sub_11D0
01787 0BC6 96 4E                                  ldaa    $4E
01788 0BC8 8B 30                                  adda    #$30             * '0'
01789 0BCA 97 70                                  staa    $70
01790 0BCC 01                                     nop
01791 0BCD 01                                     nop
01792 0BCE 01                                     nop
01793 0BCF 01                                     nop
01794 0BD0 BD 0C43                                jsr     sub_C43
01795 0BD3 39                                     rts
01796               * End of function sub_B9B
01797               
01798               
01799               * =============== S U B R O U TI N E =======================================
01800               
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 32
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

01801               
01802         0BD4                sub_BD4         EQU     *
01803 0BD4 BD 27C5                                jsr     sub_27C5
01804 0BD7 01                                     nop
01805 0BD8 DE 65                                  ldx     $65
01806 0BDA DF 71                                  stx     $71
01807 0BDC BD 0C43                                jsr     sub_C43
01808 0BDF 39                                     rts
01809               * End of function sub_BD4
01810               
01811               
01812               * =============== S U B R O U TI N E =======================================
01813               
01814               
01815         0BE0                sub_BE0         EQU     *
01816 0BE0 86 A6                                  ldaa    #$A6             * '?'
01817               
01818         0BE2                loc_BE2         EQU     *
01819 0BE2 97 70                                  staa    $70
01820 0BE4 7F 0071                                clr     $71
01821 0BE7 BD 0C3F                                jsr     sub_C3F
01822 0BEA 39                                     rts
01823               * End of function sub_BE0
01824               
01825               
01826               * =============== S U B R O U TI N E =======================================
01827               
01828               
01829         0BEB                sub_BEB         EQU     *
01830 0BEB 86 A7                                  ldaa    #$A7             * '?'
01831 0BED 20 F3                                  bra     loc_BE2
01832               * End of function sub_BEB
01833               
01834               
01835               * =============== S U B R O U TI N E =======================================
01836               
01837               
01838         0BEF                sub_BEF         EQU     *
01839 0BEF 86 E6                                  ldaa    #$E6             * '?'
01840 0BF1 97 70                                  staa    $70
01841 0BF3 86 A6                                  ldaa    #$A6             * '?'
01842               
01843         0BF5                loc_BF5         EQU     *
01844 0BF5 BD 11DB                                jsr     sub_11DB
01845 0BF8 97 70                                  staa    $70
01846 0BFA 86 01                                  ldaa    #1
01847 0BFC 97 71                                  staa    $71
01848 0BFE BD 0C3F                                jsr     sub_C3F
01849 0C01 39                                     rts
01850               * End of function sub_BEF
01851               
01852               
01853               * =============== S U B R O U TI N E =======================================
01854               
01855               
01856         0C02                sub_C02         EQU     *
01857 0C02 86 E7                                  ldaa    #$E7             * '?'
01858 0C04 97 70                                  staa    $70
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 33
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

01859 0C06 86 A7                                  ldaa    #$A7             * '?'
01860 0C08 20 EB                                  bra     loc_BF5
01861               * End of function sub_C02
01862               
01863               
01864               * =============== S U B R O U TI N E =======================================
01865               
01866               
01867         0C0A                sub_C0A         EQU     *
01868 0C0A BD 275D                                jsr     sub_275D
01869 0C0D 01                                     nop
01870 0C0E 86 EE                                  ldaa    #$EE             * '?'
01871 0C10 97 70                                  staa    $70
01872 0C12 7F 0071                                clr     $71
01873 0C15 BD 0C3F                                jsr     sub_C3F
01874               * End of function sub_C0A
01875               
01876               
01877               * =============== S U B R O U TI N E =======================================
01878               
01879               
01880         0C18                sub_C18         EQU     *
01881 0C18 86 31                                  ldaa    #$31             * '1'
01882 0C1A BD 11E4                                jsr     sub_11E4
01883               * End of function sub_C18
01884               
01885               
01886               * =============== S U B R O U TI N E =======================================
01887               
01888               
01889         0C1D                sub_C1D         EQU     *
01890 0C1D 86 31                                  ldaa    #$31             * '1'
01891 0C1F BD 11E4                                jsr     sub_11E4
01892 0C22 39                                     rts
01893               * End of function sub_C1D
01894               
01895               * ---------------------------------------------------------------------------
01896 0C23 3F                                     swi
01897 0C24 01                                     nop
01898 0C25 01                                     nop
01899 0C26 01                                     nop
01900 0C27 01                                     nop
01901 0C28 01                                     nop
01902 0C29 01                                     nop
01903 0C2A 01                                     nop
01904 0C2B 01                                     nop
01905 0C2C 01                                     nop
01906 0C2D 01                                     nop
01907 0C2E 01                                     nop
01908 0C2F 01                                     nop
01909               
01910               * =============== S U B R O U TI N E =======================================
01911               
01912               
01913         0C30                sub_C30         EQU     *
01914 0C30 86 36                                  ldaa    #$36             * '6'
01915 0C32 BD 11E4                                jsr     sub_11E4
01916 0C35 86 37                                  ldaa    #$37             * '7'
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 34
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

01917 0C37 BD 11E4                                jsr     sub_11E4
01918 0C3A 39                                     rts
01919               * End of function sub_C30
01920               
01921               
01922               * =============== S U B R O U TI N E =======================================
01923               
01924               
01925         0C3B                sub_C3B         EQU     *
01926 0C3B 86 01                                  ldaa    #1
01927 0C3D 20 0A                                  bra     loc_C49
01928               * End of function sub_C3B
01929               
01930               
01931               * =============== S U B R O U TI N E =======================================
01932               
01933               
01934         0C3F                sub_C3F         EQU     *
01935 0C3F 86 02                                  ldaa    #2
01936 0C41 20 06                                  bra     loc_C49
01937               * End of function sub_C3F
01938               
01939               
01940               * =============== S U B R O U TI N E =======================================
01941               
01942               
01943         0C43                sub_C43         EQU     *
01944 0C43 86 03                                  ldaa    #3
01945 0C45 20 02                                  bra     loc_C49
01946               * ---------------------------------------------------------------------------
01947 0C47 86 04                                  ldaa    #4
01948               
01949         0C49                loc_C49         EQU     *
01950 0C49 97 53                                  staa    $53
01951 0C4B BD 119E                                jsr     sub_119E
01952 0C4E 96 53                                  ldaa    $53
01953 0C50 26 01                                  bne     loc_C53
01954 0C52 39                                     rts
01955               * ---------------------------------------------------------------------------
01956               
01957         0C53                loc_C53         EQU     *
01958 0C53 20 07                                  bra     loc_C5C
01959               * ---------------------------------------------------------------------------
01960 0C55    00 00 00 00 00 00                   fcb     0,0,0,0,0,0,0
01961               * ---------------------------------------------------------------------------
01962               
01963         0C5C                loc_C5C         EQU     *
01964 0C5C 96 60                                  ldaa    $60
01965 0C5E 91 53                                  cmpa    $53
01966 0C60 2C 12                                  bge     loc_C74
01967 0C62 CE 0070                                ldx     #$70             * 'p'
01968 0C65 BD 0C78                                jsr     AddBAtoX
01969 0C68 A6 00                                  ldaa    0,x
01970 0C6A 97 56                                  staa    $56
01971 0C6C BD 1B81                                jsr     sub_1B81
01972 0C6F 7C 0060                                inc     $60
01973 0C72 20 E8                                  bra     loc_C5C
01974               * ---------------------------------------------------------------------------
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 35
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

01975               
01976         0C74                loc_C74         EQU     *
01977 0C74 7F 0053                                clr     $53
01978 0C77 39                                     rts
01979               * End of function sub_C43
01980               
01981               
01982               * =============== S U B R O U TI N E =======================================
01983               
01984               
01985         0C78                AddBAtoX        EQU     *
01986 0C78 20 0B                                  bra     xsave
01987               * ---------------------------------------------------------------------------
01988               
01989         0C7A                loc_C7A         EQU     *
01990 0C7A 9B 64                                  adda    $64
01991 0C7C D9 63                                  adcb    $63
01992 0C7E D7 63                                  stab    $63
01993 0C80 97 64                                  staa    $64
01994 0C82 DE 63                                  ldx     $63
01995 0C84 39                                     rts
01996               * ---------------------------------------------------------------------------
01997               
01998         0C85                xsave           EQU     *
01999 0C85 DF 63                                  stx     $63
02000 0C87 5F                                     clrb
02001 0C88 7E 0C7A                                jmp     loc_C7A
02002               * End of function AddBAtoX
02003               
02004               
02005               * =============== S U B R O U TI N E =======================================
02006               
02007               
02008         0C8B                sub_C8B         EQU     *
02009               
02010               * FUNCTION CHUNK AT 1AEC SIZE 00000004 BYTES
02011               
02012 0C8B BD 1C15                                jsr     sub_1C15
02013 0C8E BD 1C0E                                jsr     sub_1C0E
02014 0C91 7E 1AEC                                jmp     loc_1AEC
02015               * End of function sub_C8B
02016               
02017               
02018               * =============== S U B R O U TI N E =======================================
02019               
02020               
02021         0C94                sub_C94         EQU     *
02022 0C94 DE 47                                  ldx     $47
02023 0C96 DF 4B                                  stx     $4B
02024 0C98 BD 08D4                                jsr     sub_8D4
02025 0C9B DE 49                                  ldx     $49
02026 0C9D DF 4B                                  stx     $4B
02027 0C9F 39                                     rts
02028               * End of function sub_C94
02029               
02030               
02031               * =============== S U B R O U TI N E =======================================
02032               
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 36
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

02033               
02034         0CA0                sub_CA0         EQU     *
02035 0CA0 BD 0C3B                                jsr     sub_C3B
02036 0CA3 DE 49                                  ldx     $49
02037 0CA5 DF 4B                                  stx     $4B
02038 0CA7 39                                     rts
02039               * End of function sub_CA0
02040               
02041               * ---------------------------------------------------------------------------
02042               * START OF FUNCTION CHUNK FOR sub_B9B
02043               
02044         0CA8                loc_CA8         EQU     *
02045 0CA8 97 70                                  staa    $70
02046 0CAA BD 0C3F                                jsr     sub_C3F
02047 0CAD 39                                     rts
02048               * END OF FUNCTION CHUNK FOR sub_B9B
02049               * ---------------------------------------------------------------------------
02050               * START OF FUNCTION CHUNK FOR sub_82D
02051               
02052         0CAE                loc_CAE         EQU     *
02053 0CAE 97 43                                  staa    $43
02054 0CB0 20 03                                  bra     loc_CB5
02055               * ---------------------------------------------------------------------------
02056               
02057         0CB2                loc_CB2         EQU     *
02058 0CB2 BD 0A6E                                jsr     sub_A6E
02059               
02060         0CB5                loc_CB5         EQU     *
02061 0CB5 BD 0E1A                                jsr     sub_E1A
02062 0CB8 39                                     rts
02063               * END OF FUNCTION CHUNK FOR sub_82D
02064               
02065               * =============== S U B R O U TI N E =======================================
02066               
02067               
02068         0CB9                sub_CB9         EQU     *
02069 0CB9 96 58                                  ldaa    $58
02070 0CBB 44                                     lsra
02071 0CBC 24 07                                  bcc     loc_CC5
02072 0CBE 86 5F                                  ldaa    #$5F             * '_'
02073 0CC0 97 70                                  staa    $70
02074 0CC2 BD 0C3B                                jsr     sub_C3B
02075               
02076         0CC5                loc_CC5         EQU     *
02077 0CC5 BD 0977                                jsr     sub_977
02078 0CC8 39                                     rts
02079               * End of function sub_CB9
02080               
02081               * ---------------------------------------------------------------------------
02082               * START OF FUNCTION CHUNK FOR sub_8D4
02083               
02084         0CC9                loc_CC9         EQU     *
02085 0CC9 96 4F                                  ldaa    $4F
02086 0CCB 81 01                                  cmpa    #1
02087 0CCD 27 01                                  beq     loc_CD0
02088 0CCF 39                                     rts
02089               * ---------------------------------------------------------------------------
02090               
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 37
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

02091         0CD0                loc_CD0         EQU     *
02092 0CD0 7E 0966                                jmp     loc_966
02093               * END OF FUNCTION CHUNK FOR sub_8D4
02094               
02095               * =============== S U B R O U TI N E =======================================
02096               
02097               
02098         0CD3                sub_CD3         EQU     *
02099 0CD3 BD 0EC6                                jsr     sub_EC6
02100 0CD6 BD 2238                                jsr     sub_2238
02101 0CD9 39                                     rts
02102               * End of function sub_CD3
02103               
02104               * ---------------------------------------------------------------------------
02105               * START OF FUNCTION CHUNK FOR sub_D00
02106               
02107         0CDA                loc_CDA         EQU     *
02108 0CDA BD 0D7F                                jsr     sub_D7F
02109 0CDD 96 5B                                  ldaa    $5B
02110 0CDF 27 01                                  beq     loc_CE2
02111 0CE1 39                                     rts
02112               * ---------------------------------------------------------------------------
02113               
02114         0CE2                loc_CE2         EQU     *
02115 0CE2 7E 0D0A                                jmp     loc_D0A
02116               * END OF FUNCTION CHUNK FOR sub_D00
02117               * ---------------------------------------------------------------------------
02118               * START OF FUNCTION CHUNK FOR sub_24F9
02119               
02120         0CE5                loc_CE5         EQU     *
02121 0CE5 96 5B                                  ldaa    $5B
02122 0CE7 27 01                                  beq     loc_CEA
02123 0CE9 39                                     rts
02124               * ---------------------------------------------------------------------------
02125               
02126         0CEA                loc_CEA         EQU     *
02127 0CEA 5F                                     clrb
02128 0CEB 96 5A                                  ldaa    $5A
02129 0CED 7E 0D36                                jmp     loc_D36
02130               * END OF FUNCTION CHUNK FOR sub_24F9
02131               * ---------------------------------------------------------------------------
02132               * START OF FUNCTION CHUNK FOR sub_1A10
02133               
02134         0CF0                loc_CF0         EQU     *
02135 0CF0 97 5B                                  staa    $5B
02136               * END OF FUNCTION CHUNK FOR sub_1A10
02137               
02138               * =============== S U B R O U TI N E =======================================
02139               
02140               
02141         0CF2                sub_CF2         EQU     *
02142 0CF2 4F                                     clra
02143 0CF3 97 5E                                  staa    $5E
02144 0CF5 97 43                                  staa    $43
02145 0CF7 97 50                                  staa    $50
02146 0CF9 B7 0428                                staa    unk_428
02147 0CFC 4C                                     inca
02148 0CFD 97 42                                  staa    $42
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 38
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

02149 0CFF 39                                     rts
02150               * End of function sub_CF2
02151               
02152               
02153               * =============== S U B R O U TI N E =======================================
02154               
02155               
02156         0D00                sub_D00         EQU     *
02157               
02158               * FUNCTION CHUNK AT 0CDA SIZE 0000000B BYTES
02159               * FUNCTION CHUNK AT 1197 SIZE 00000007 BYTES
02160               
02161 0D00 BD 0E0A                                jsr     sub_E0A
02162 0D03 96 59                                  ldaa    $59
02163 0D05 97 4F                                  staa    $4F
02164 0D07 7E 0CDA                                jmp     loc_CDA
02165               * ---------------------------------------------------------------------------
02166               
02167         0D0A                loc_D0A         EQU     *
02168 0D0A 96 5A                                  ldaa    $5A
02169 0D0C 81 3D                                  cmpa    #$3D             * '='
02170 0D0E 27 04                                  beq     loc_D14
02171 0D10 BD 0EC1                                jsr     sub_EC1
02172 0D13 39                                     rts
02173               * ---------------------------------------------------------------------------
02174               
02175         0D14                loc_D14         EQU     *
02176 0D14 86 0B                                  ldaa    #$B
02177 0D16 97 81                                  staa    $81
02178 0D18 BD 059C                                jsr     sub_59C
02179 0D1B BD 0EC6                                jsr     sub_EC6
02180 0D1E BD 2238                                jsr     sub_2238
02181 0D21 96 5B                                  ldaa    $5B
02182 0D23 27 01                                  beq     loc_D26
02183 0D25 39                                     rts
02184               * ---------------------------------------------------------------------------
02185               
02186         0D26                loc_D26         EQU     *
02187 0D26 86 01                                  ldaa    #1
02188 0D28 97 81                                  staa    $81
02189 0D2A BD 059C                                jsr     sub_59C
02190 0D2D 7E 1197                                jmp     loc_1197
02191               * End of function sub_D00
02192               
02193               * ---------------------------------------------------------------------------
02194 0D30 39                                     rts
02195               * ---------------------------------------------------------------------------
02196 0D31    8D                                  fcb     $8D              * ?
02197 0D32    1C                                  fcb     $1C
02198 0D33    7E                                  fcb     $7E              * ~
02199 0D34    0C                                  fcb     $C
02200 0D35    E5                                  fcb     $E5              * ?
02201               * ---------------------------------------------------------------------------
02202               * START OF FUNCTION CHUNK FOR sub_24F9
02203               
02204         0D36                loc_D36         EQU     *
02205 0D36 81 2B                                  cmpa    #$2B             * '+'
02206 0D38 26 02                                  bne     loc_D3C
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 39
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

02207 0D3A C6 02                                  ldab    #2
02208               
02209         0D3C                loc_D3C         EQU     *
02210 0D3C 81 2D                                  cmpa    #$2D             * '-'
02211 0D3E 26 02                                  bne     loc_D42
02212 0D40 C6 03                                  ldab    #3
02213               
02214         0D42                loc_D42         EQU     *
02215 0D42 D7 81                                  stab    $81
02216 0D44 26 01                                  bne     loc_D47
02217 0D46 39                                     rts
02218               * ---------------------------------------------------------------------------
02219               
02220         0D47                loc_D47         EQU     *
02221 0D47 BD 059C                                jsr     sub_59C
02222 0D4A BD 0EC6                                jsr     sub_EC6
02223               
02224         0D4D                loc_D4D         EQU     *
02225 0D4D 7E 24F9                                jmp     sub_24F9
02226               * END OF FUNCTION CHUNK FOR sub_24F9
02227               * ---------------------------------------------------------------------------
02228 0D50    00                                  fcb     0
02229               * ---------------------------------------------------------------------------
02230               * START OF FUNCTION CHUNK FOR sub_2317
02231               
02232         0D51                loc_D51         EQU     *
02233 0D51 96 5A                                  ldaa    $5A
02234 0D53 81 F2                                  cmpa    #$F2             * '?'
02235 0D55 26 04                                  bne     loc_D5B
02236 0D57 BD 0D7F                                jsr     sub_D7F
02237 0D5A 39                                     rts
02238               * ---------------------------------------------------------------------------
02239               
02240         0D5B                loc_D5B         EQU     *
02241 0D5B 81 F0                                  cmpa    #$F0             * '?'
02242 0D5D 26 04                                  bne     loc_D63
02243 0D5F BD 0DBD                                jsr     sub_DBD
02244 0D62 39                                     rts
02245               * ---------------------------------------------------------------------------
02246               
02247         0D63                loc_D63         EQU     *
02248 0D63 81 8D                                  cmpa    #$8D             * '?'
02249 0D65 26 04                                  bne     loc_D6B
02250 0D67 BD 0E2A                                jsr     sub_E2A
02251 0D6A 39                                     rts
02252               * ---------------------------------------------------------------------------
02253               
02254         0D6B                loc_D6B         EQU     *
02255 0D6B 81 8E                                  cmpa    #$8E             * '?'
02256 0D6D 26 04                                  bne     loc_D73
02257 0D6F BD 0E2A                                jsr     sub_E2A
02258 0D72 39                                     rts
02259               * ---------------------------------------------------------------------------
02260               
02261         0D73                loc_D73         EQU     *
02262 0D73 81 8F                                  cmpa    #$8F             * '?'
02263 0D75 26 04                                  bne     loc_D7B
02264 0D77 BD 0E2A                                jsr     sub_E2A
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 40
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

02265 0D7A 39                                     rts
02266               * ---------------------------------------------------------------------------
02267               
02268         0D7B                loc_D7B         EQU     *
02269 0D7B 7E 21A5                                jmp     loc_21A5
02270               * END OF FUNCTION CHUNK FOR sub_2317
02271               * ---------------------------------------------------------------------------
02272 0D7E 39                                     rts
02273               
02274               * =============== S U B R O U TI N E =======================================
02275               
02276               
02277         0D7F                sub_D7F         EQU     *
02278 0D7F BD 0DED                                jsr     sub_DED
02279 0D82 BD 0EC6                                jsr     sub_EC6
02280 0D85 96 5A                                  ldaa    $5A
02281 0D87 81 28                                  cmpa    #$28             * '('
02282 0D89 27 01                                  beq     loc_D8C
02283 0D8B 39                                     rts
02284               * ---------------------------------------------------------------------------
02285               
02286         0D8C                loc_D8C         EQU     *
02287 0D8C 86 09                                  ldaa    #9
02288 0D8E 97 81                                  staa    $81
02289 0D90 BD 059C                                jsr     sub_59C
02290 0D93 BD 0EC6                                jsr     sub_EC6
02291 0D96 BD 0E0A                                jsr     sub_E0A
02292 0D99 86 01                                  ldaa    #1
02293 0D9B 97 4F                                  staa    $4F
02294 0D9D BD 2238                                jsr     sub_2238
02295 0DA0 96 5B                                  ldaa    $5B
02296 0DA2 27 01                                  beq     loc_DA5
02297 0DA4 39                                     rts
02298               * ---------------------------------------------------------------------------
02299               
02300         0DA5                loc_DA5         EQU     *
02301 0DA5 96 5A                                  ldaa    $5A
02302 0DA7 81 29                                  cmpa    #$29             * ')'
02303 0DA9 27 04                                  beq     loc_DAF
02304 0DAB BD 0EC1                                jsr     sub_EC1
02305 0DAE 39                                     rts
02306               * ---------------------------------------------------------------------------
02307               
02308         0DAF                loc_DAF         EQU     *
02309 0DAF 86 0A                                  ldaa    #$A
02310 0DB1 97 81                                  staa    $81
02311               
02312         0DB3                loc_DB3         EQU     *
02313 0DB3 BD 059C                                jsr     sub_59C
02314 0DB6 01                                     nop
02315 0DB7 01                                     nop
02316 0DB8 01                                     nop
02317 0DB9 BD 0EC6                                jsr     sub_EC6
02318 0DBC 39                                     rts
02319               * End of function sub_D7F
02320               
02321               
02322               * =============== S U B R O U TI N E =======================================
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 41
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

02323               
02324               
02325         0DBD                sub_DBD         EQU     *
02326 0DBD 8D 04                                  bsr     sub_DC3
02327 0DBF BD 0EC6                                jsr     sub_EC6
02328 0DC2 39                                     rts
02329               * End of function sub_DBD
02330               
02331               
02332               * =============== S U B R O U TI N E =======================================
02333               
02334               
02335         0DC3                sub_DC3         EQU     *
02336 0DC3 96 43                                  ldaa    $43
02337 0DC5 CE 0400                                ldx     #unk_400
02338 0DC8 BD 0C78                                jsr     AddBAtoX
02339 0DCB D6 59                                  ldab    $59
02340 0DCD 26 0D                                  bne     loc_DDC
02341 0DCF 96 5D                                  ldaa    $5D
02342 0DD1 A7 00                                  staa    0,x
02343 0DD3 6F 01                                  clr     1,x
02344               
02345         0DD5                loc_DD5         EQU     *
02346 0DD5 BD 0E78                                jsr     sub_E78
02347 0DD8 BD 0E78                                jsr     sub_E78
02348 0DDB 39                                     rts
02349               * ---------------------------------------------------------------------------
02350               
02351         0DDC                loc_DDC         EQU     *
02352 0DDC 96 5C                                  ldaa    $5C
02353 0DDE A7 00                                  staa    0,x
02354 0DE0 96 5D                                  ldaa    $5D
02355 0DE2 A7 01                                  staa    1,x
02356 0DE4 86 01                                  ldaa    #1
02357 0DE6 A7 02                                  staa    2,x
02358 0DE8 BD 0E78                                jsr     sub_E78
02359 0DEB 20 E8                                  bra     loc_DD5
02360               * End of function sub_DC3
02361               
02362               
02363               * =============== S U B R O U TI N E =======================================
02364               
02365               
02366         0DED                sub_DED         EQU     *
02367               
02368               * FUNCTION CHUNK AT 117F SIZE 00000002 BYTES
02369               * FUNCTION CHUNK AT 203A SIZE 00000006 BYTES
02370               
02371 0DED 96 43                                  ldaa    $43
02372 0DEF CE 0400                                ldx     #unk_400
02373 0DF2 BD 0C78                                jsr     AddBAtoX
02374 0DF5 96 5C                                  ldaa    $5C
02375 0DF7 A7 00                                  staa    0,x
02376 0DF9 96 5D                                  ldaa    $5D
02377 0DFB A7 01                                  staa    1,x
02378 0DFD 86 0A                                  ldaa    #$A
02379 0DFF 9B 59                                  adda    $59
02380 0E01 A7 02                                  staa    2,x
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 42
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

02381 0E03 96 43                                  ldaa    $43
02382 0E05 8B 03                                  adda    #3
02383 0E07 7E 203A                                jmp     loc_203A
02384               * End of function sub_DED
02385               
02386               
02387               * =============== S U B R O U TI N E =======================================
02388               
02389               
02390         0E0A                sub_E0A         EQU     *
02391 0E0A 96 5E                                  ldaa    $5E
02392 0E0C CE 04CC                                ldx     #unk_4CC
02393 0E0F BD 0C78                                jsr     AddBAtoX
02394 0E12 96 4F                                  ldaa    $4F
02395 0E14 A7 00                                  staa    0,x
02396 0E16 BD 0E83                                jsr     sub_E83
02397 0E19 39                                     rts
02398               * End of function sub_E0A
02399               
02400               
02401               * =============== S U B R O U TI N E =======================================
02402               
02403               
02404         0E1A                sub_E1A         EQU     *
02405 0E1A 7A 005E                                dec     $5E
02406 0E1D 96 5E                                  ldaa    $5E
02407 0E1F CE 04CC                                ldx     #unk_4CC
02408 0E22 BD 0C78                                jsr     AddBAtoX
02409 0E25 A6 00                                  ldaa    0,x
02410 0E27 97 4F                                  staa    $4F
02411 0E29 39                                     rts
02412               * End of function sub_E1A
02413               
02414               
02415               * =============== S U B R O U TI N E =======================================
02416               
02417               
02418         0E2A                sub_E2A         EQU     *
02419 0E2A 96 5A                                  ldaa    $5A
02420 0E2C 81 8D                                  cmpa    #$8D             * '?'
02421 0E2E 26 02                                  bne     loc_E32
02422 0E30 C6 0C                                  ldab    #$C
02423               
02424         0E32                loc_E32         EQU     *
02425 0E32 81 8E                                  cmpa    #$8E             * '?'
02426 0E34 26 02                                  bne     loc_E38
02427 0E36 C6 0D                                  ldab    #$D
02428               
02429         0E38                loc_E38         EQU     *
02430 0E38 81 8F                                  cmpa    #$8F             * '?'
02431 0E3A 26 02                                  bne     loc_E3E
02432 0E3C C6 0E                                  ldab    #$E
02433               
02434         0E3E                loc_E3E         EQU     *
02435 0E3E D7 81                                  stab    $81
02436 0E40 BD 1137                                jsr     sub_1137
02437 0E43 BD 0EC6                                jsr     sub_EC6
02438 0E46 96 5A                                  ldaa    $5A
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 43
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

02439 0E48 81 28                                  cmpa    #$28             * '('
02440 0E4A 27 04                                  beq     loc_E50
02441 0E4C BD 0EC1                                jsr     sub_EC1
02442 0E4F 39                                     rts
02443               * ---------------------------------------------------------------------------
02444               
02445         0E50                loc_E50         EQU     *
02446 0E50 BD 0CD3                                jsr     sub_CD3
02447 0E53 96 5B                                  ldaa    $5B
02448 0E55 27 01                                  beq     loc_E58
02449 0E57 39                                     rts
02450               * ---------------------------------------------------------------------------
02451               
02452         0E58                loc_E58         EQU     *
02453 0E58 96 5A                                  ldaa    $5A
02454 0E5A 81 29                                  cmpa    #$29             * ')'
02455 0E5C 27 04                                  beq     loc_E62
02456 0E5E BD 0EC1                                jsr     sub_EC1
02457 0E61 39                                     rts
02458               * ---------------------------------------------------------------------------
02459               
02460         0E62                loc_E62         EQU     *
02461 0E62 86 08                                  ldaa    #8
02462 0E64 97 81                                  staa    $81
02463 0E66 7E 0DB3                                jmp     loc_DB3
02464               * End of function sub_E2A
02465               
02466               * ---------------------------------------------------------------------------
02467 0E69 39                                     rts
02468               
02469               * =============== S U B R O U TI N E =======================================
02470               
02471               * Attributes: thunk
02472               
02473         0E6A                sub_E6A         EQU     *
02474 0E6A 7E 225B                                jmp     sub_225B
02475               * End of function sub_E6A
02476               
02477               
02478               * =============== S U B R O U TI N E =======================================
02479               
02480               
02481         0E6D                sub_E6D         EQU     *
02482 0E6D 96 42                                  ldaa    $42
02483 0E6F 81 12                                  cmpa    #$12
02484 0E71 25 01                                  bcs     loc_E74
02485 0E73 3F                                     swi
02486               
02487         0E74                loc_E74         EQU     *
02488 0E74 7C 0042                                inc     $42
02489 0E77 39                                     rts
02490               * End of function sub_E6D
02491               
02492               
02493               * =============== S U B R O U TI N E =======================================
02494               
02495               
02496         0E78                sub_E78         EQU     *
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 44
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

02497 0E78 96 43                                  ldaa    $43
02498 0E7A 4C                                     inca
02499               * End of function sub_E78
02500               
02501               
02502               * =============== S U B R O U TI N E =======================================
02503               
02504               
02505         0E7B                sub_E7B         EQU     *
02506 0E7B 81 26                                  cmpa    #$26             * '&'
02507 0E7D 23 01                                  bls     loc_E80
02508 0E7F 3F                                     swi
02509               
02510         0E80                loc_E80         EQU     *
02511 0E80 97 43                                  staa    $43
02512 0E82 39                                     rts
02513               * End of function sub_E7B
02514               
02515               
02516               * =============== S U B R O U TI N E =======================================
02517               
02518               
02519         0E83                sub_E83         EQU     *
02520 0E83 96 5E                                  ldaa    $5E
02521 0E85 81 06                                  cmpa    #6
02522 0E87 25 01                                  bcs     loc_E8A
02523 0E89 3F                                     swi
02524               
02525         0E8A                loc_E8A         EQU     *
02526 0E8A 7C 005E                                inc     $5E
02527 0E8D 39                                     rts
02528               * End of function sub_E83
02529               
02530               * ---------------------------------------------------------------------------
02531 0E8E    00                                  fcb     0
02532               
02533               * =============== S U B R O U TI N E =======================================
02534               
02535               
02536         0E8F                sub_E8F         EQU     *
02537 0E8F 96 5A                                  ldaa    $5A
02538 0E91 C6 27                                  ldab    #$27             * '''
02539 0E93 81 3D                                  cmpa    #$3D             * '='
02540 0E95 27 22                                  beq     locret_EB9
02541 0E97 C6 26                                  ldab    #$26             * '&'
02542 0E99 81 33                                  cmpa    #$33             * '3'
02543 0E9B 27 1C                                  beq     locret_EB9
02544 0E9D C6 25                                  ldab    #$25             * '%'
02545 0E9F 81 3C                                  cmpa    #$3C             * '<'
02546 0EA1 27 16                                  beq     locret_EB9
02547 0EA3 C6 22                                  ldab    #$22             * '"'
02548 0EA5 81 3E                                  cmpa    #$3E             * '>'
02549 0EA7 27 10                                  beq     locret_EB9
02550 0EA9 C6 23                                  ldab    #$23             * '#'
02551 0EAB 81 34                                  cmpa    #$34             * '4'
02552 0EAD 27 0A                                  beq     locret_EB9
02553 0EAF C6 24                                  ldab    #$24             * '$'
02554 0EB1 81 35                                  cmpa    #$35             * '5'
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 45
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

02555 0EB3 27 04                                  beq     locret_EB9
02556 0EB5 5F                                     clrb
02557 0EB6 39                                     rts
02558               * ---------------------------------------------------------------------------
02559 0EB7 01                                     nop
02560 0EB8 01                                     nop
02561               
02562         0EB9                locret_EB9      EQU     *
02563 0EB9 39                                     rts
02564               * End of function sub_E8F
02565               
02566               * ---------------------------------------------------------------------------
02567 0EBA    00 00 00 00 00 00                   fcb     0,0,0,0,0,0,0
02568               
02569               * =============== S U B R O U TI N E =======================================
02570               
02571               
02572         0EC1                sub_EC1         EQU     *
02573               
02574               * FUNCTION CHUNK AT 1625 SIZE 00000011 BYTES
02575               
02576 0EC1 86 01                                  ldaa    #1
02577 0EC3 7E 1625                                jmp     loc_1625
02578               * End of function sub_EC1
02579               
02580               
02581               * =============== S U B R O U TI N E =======================================
02582               
02583               * Attributes: thunk
02584               
02585         0EC6                sub_EC6         EQU     *
02586 0EC6 7E 1200                                jmp     sub_1200
02587               * End of function sub_EC6
02588               
02589               
02590               * =============== S U B R O U TI N E =======================================
02591               
02592               
02593         0EC9                sub_EC9         EQU     *
02594 0EC9 CE 0042                                ldx     #$42             * 'B'
02595 0ECC 4F                                     clra
02596               
02597         0ECD                loc_ECD         EQU     *
02598 0ECD A7 00                                  staa    0,x
02599 0ECF 08                                     inx
02600 0ED0 8C 00F0                                cpx     #$F0             * '?'
02601 0ED3 26 F8                                  bne     loc_ECD
02602 0ED5 BD 1FFB                                jsr     sub_1FFB
02603 0ED8 BD 0CF2                                jsr     sub_CF2
02604 0EDB BD 2336                                jsr     sub_2336
02605 0EDE 01                                     nop
02606 0EDF CE 0000                                ldx     #0
02607 0EE2 DF 94                                  stx     $94
02608 0EE4 CE 0147                                ldx     #$147
02609 0EE7 DF 90                                  stx     $90
02610 0EE9 CE 0100                                ldx     #$100
02611 0EEC DF 54                                  stx     $54
02612 0EEE CE 0010                                ldx     #$10
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 46
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

02613 0EF1 DF A0                                  stx     $A0
02614 0EF3 FE 0388                                ldx     byte_388
02615 0EF6 DF 65                                  stx     $65
02616 0EF8 BD 1636                                jsr     sub_1636
02617 0EFB 7F 0082                                clr     $82
02618 0EFE 86 0D                                  ldaa    #$D
02619 0F00 B7 0500                                staa    unk_500
02620 0F03 BD 1B00                                jsr     sub_1B00
02621 0F06 BD 1BE1                                jsr     sub_1BE1
02622 0F09 BD 2520                                jsr     sub_2520
02623 0F0C 39                                     rts
02624               * End of function sub_EC9
02625               
02626               * ---------------------------------------------------------------------------
02627 0F0D 01                                     nop
02628 0F0E 01                                     nop
02629 0F0F 01                                     nop
02630               * START OF FUNCTION CHUNK FOR sub_17D3
02631               
02632         0F10                loc_F10         EQU     *
02633 0F10 BD 126A                                jsr     sub_126A
02634 0F13 96 85                                  ldaa    $85
02635               
02636         0F15                loc_F15         EQU     *
02637 0F15 81 2A                                  cmpa    #$2A             * '*'
02638 0F17 26 F7                                  bne     loc_F10
02639 0F19 BD 124F                                jsr     sub_124F
02640 0F1C 96 85                                  ldaa    $85
02641 0F1E 81 2F                                  cmpa    #$2F             * '/'
02642 0F20 26 F3                                  bne     loc_F15
02643 0F22 7E 17D3                                jmp     sub_17D3
02644               * END OF FUNCTION CHUNK FOR sub_17D3
02645               * ---------------------------------------------------------------------------
02646               * START OF FUNCTION CHUNK FOR sub_1650
02647               
02648         0F25                loc_F25         EQU     *
02649 0F25 BD 1C07                                jsr     sub_1C07
02650 0F28 7E 2424                                jmp     loc_2424
02651               * END OF FUNCTION CHUNK FOR sub_1650
02652               * ---------------------------------------------------------------------------
02653 0F2B 26 01                                  bne     loc_F2E
02654 0F2D 39                                     rts
02655               * ---------------------------------------------------------------------------
02656               
02657         0F2E                loc_F2E         EQU     *
02658 0F2E B6 0571                                ldaa    byte_571
02659 0F31 27 01                                  beq     loc_F34
02660 0F33 39                                     rts
02661               * ---------------------------------------------------------------------------
02662               
02663         0F34                loc_F34         EQU     *
02664 0F34 7E 2424                                jmp     loc_2424
02665               * ---------------------------------------------------------------------------
02666 0F37    01                                  fcb     1
02667 0F38    01                                  fcb     1
02668 0F39    01                                  fcb     1
02669 0F3A    BD                                  fcb     $BD              * ?
02670 0F3B    05                                  fcb     5
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 47
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

02671 0F3C    9C                                  fcb     $9C              * ?
02672 0F3D    BD                                  fcb     $BD              * ?
02673 0F3E    0D                                  fcb     $D
02674 0F3F    31                                  fcb     $31              * 1
02675 0F40    96                                  fcb     $96              * ?
02676 0F41    5B                                  fcb     $5B              * [
02677 0F42    27                                  fcb     $27              * '
02678 0F43    01                                  fcb     1
02679 0F44    39                                  fcb     $39              * 9
02680 0F45    7E                                  fcb     $7E              * ~
02681 0F46    0E                                  fcb     $E
02682 0F47    84                                  fcb     $84              * ?
02683               
02684               * =============== S U B R O U TI N E =======================================
02685               
02686               
02687         0F48                sub_F48         EQU     *
02688 0F48 7E 0F5B                                jmp     loc_F5B
02689               * ---------------------------------------------------------------------------
02690               
02691         0F4B                loc_F4B         EQU     *
02692 0F4B BD 0643                                jsr     sub_643
02693 0F4E 96 45                                  ldaa    $45
02694 0F50 81 02                                  cmpa    #2
02695 0F52 26 01                                  bne     loc_F55
02696 0F54 39                                     rts
02697               * ---------------------------------------------------------------------------
02698               
02699         0F55                loc_F55         EQU     *
02700 0F55 81 03                                  cmpa    #3
02701 0F57 26 01                                  bne     loc_F5A
02702 0F59 39                                     rts
02703               * ---------------------------------------------------------------------------
02704               
02705         0F5A                loc_F5A         EQU     *
02706 0F5A 3F                                     swi
02707               
02708         0F5B                loc_F5B         EQU     *
02709 0F5B BD 112A                                jsr     sub_112A
02710 0F5E BD 074F                                jsr     sub_74F
02711 0F61 86 80                                  ldaa    #$80             * '?'
02712 0F63 97 4D                                  staa    $4D
02713 0F65 86 C2                                  ldaa    #$C2             * '?'
02714 0F67 97 4E                                  staa    $4E
02715 0F69 96 80                                  ldaa    $80
02716 0F6B 81 04                                  cmpa    #4
02717 0F6D 26 06                                  bne     loc_F75
02718 0F6F 7E 0F94                                jmp     loc_F94
02719               * ---------------------------------------------------------------------------
02720 0F72 01                                     nop
02721 0F73 01                                     nop
02722 0F74 01                                     nop
02723               
02724         0F75                loc_F75         EQU     *
02725 0F75 96 62                                  ldaa    $62
02726 0F77 81 26                                  cmpa    #$26             * '&'
02727 0F79 27 04                                  beq     loc_F7F
02728 0F7B 81 27                                  cmpa    #$27             * '''
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 48
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

02729 0F7D 26 15                                  bne     loc_F94
02730               
02731         0F7F                loc_F7F         EQU     *
02732 0F7F 96 4F                                  ldaa    $4F
02733 0F81 81 01                                  cmpa    #1
02734 0F83 27 09                                  beq     loc_F8E
02735 0F85 96 57                                  ldaa    $57
02736 0F87 26 05                                  bne     loc_F8E
02737 0F89 DE 4B                                  ldx     $4B
02738 0F8B 26 01                                  bne     loc_F8E
02739 0F8D 39                                     rts
02740               * ---------------------------------------------------------------------------
02741               
02742         0F8E                loc_F8E         EQU     *
02743 0F8E BD 0793                                jsr     sub_793
02744 0F91 7E 0FAF                                jmp     loc_FAF
02745               * ---------------------------------------------------------------------------
02746               
02747         0F94                loc_F94         EQU     *
02748 0F94 96 57                                  ldaa    $57
02749 0F96 26 05                                  bne     loc_F9D
02750 0F98 BD 07B5                                jsr     sub_7B5
02751 0F9B 20 03                                  bra     loc_FA0
02752               * ---------------------------------------------------------------------------
02753               
02754         0F9D                loc_F9D         EQU     *
02755 0F9D BD 07BA                                jsr     sub_7BA
02756               
02757         0FA0                loc_FA0         EQU     *
02758 0FA0 96 80                                  ldaa    $80
02759 0FA2 81 04                                  cmpa    #4
02760 0FA4 01                                     nop
02761 0FA5 01                                     nop
02762 0FA6 7E 0FCD                                jmp     loc_FCD
02763               * ---------------------------------------------------------------------------
02764               
02765         0FA9                loc_FA9         EQU     *
02766 0FA9 86 47                                  ldaa    #$47             * 'G'
02767 0FAB 90 62                                  suba    $62
02768 0FAD 97 62                                  staa    $62
02769               
02770         0FAF                loc_FAF         EQU     *
02771 0FAF 96 4F                                  ldaa    $4F
02772 0FB1 81 01                                  cmpa    #1
02773 0FB3 27 03                                  beq     loc_FB8
02774 0FB5 7E 0F4B                                jmp     loc_F4B
02775               * ---------------------------------------------------------------------------
02776               
02777         0FB8                loc_FB8         EQU     *
02778 0FB8 86 26                                  ldaa    #$26             * '&'
02779 0FBA 97 70                                  staa    $70
02780 0FBC 86 01                                  ldaa    #1
02781 0FBE 97 71                                  staa    $71
02782 0FC0 BD 0C3F                                jsr     sub_C3F
02783 0FC3 86 4D                                  ldaa    #$4D             * 'M'
02784 0FC5 01                                     nop
02785 0FC6 01                                     nop
02786 0FC7 BD 11E4                                jsr     sub_11E4
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 49
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

02787 0FCA 7E 0F4B                                jmp     loc_F4B
02788               * ---------------------------------------------------------------------------
02789               
02790         0FCD                loc_FCD         EQU     *
02791 0FCD 27 03                                  beq     loc_FD2
02792 0FCF 7E 0FAF                                jmp     loc_FAF
02793               * ---------------------------------------------------------------------------
02794               
02795         0FD2                loc_FD2         EQU     *
02796 0FD2 96 62                                  ldaa    $62
02797 0FD4 81 26                                  cmpa    #$26             * '&'
02798 0FD6 27 07                                  beq     loc_FDF
02799 0FD8 81 27                                  cmpa    #$27             * '''
02800 0FDA 27 03                                  beq     loc_FDF
02801 0FDC 7E 0FA9                                jmp     loc_FA9
02802               * ---------------------------------------------------------------------------
02803               
02804         0FDF                loc_FDF         EQU     *
02805 0FDF 7E 0FAF                                jmp     loc_FAF
02806               * End of function sub_F48
02807               
02808               
02809               * =============== S U B R O U TI N E =======================================
02810               
02811               
02812         0FE2                sub_FE2         EQU     *
02813               
02814               * FUNCTION CHUNK AT 07BE SIZE 00000048 BYTES
02815               
02816 0FE2 BD 0FF1                                jsr     sub_FF1
02817 0FE5 96 57                                  ldaa    $57
02818 0FE7 81 01                                  cmpa    #1
02819 0FE9 26 03                                  bne     loc_FEE
02820 0FEB 7E 07BE                                jmp     loc_7BE
02821               * ---------------------------------------------------------------------------
02822               
02823         0FEE                loc_FEE         EQU     *
02824 0FEE 7E 07C3                                jmp     loc_7C3
02825               * End of function sub_FE2
02826               
02827               
02828               * =============== S U B R O U TI N E =======================================
02829               
02830               
02831         0FF1                sub_FF1         EQU     *
02832 0FF1 96 4F                                  ldaa    $4F
02833 0FF3 81 02                                  cmpa    #2
02834 0FF5 27 01                                  beq     loc_FF8
02835 0FF7 39                                     rts
02836               * ---------------------------------------------------------------------------
02837               
02838         0FF8                loc_FF8         EQU     *
02839 0FF8 96 57                                  ldaa    $57
02840 0FFA 44                                     lsra
02841 0FFB 25 01                                  bcs     loc_FFE
02842 0FFD 39                                     rts
02843               * ---------------------------------------------------------------------------
02844               
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 50
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

02845         0FFE                loc_FFE         EQU     *
02846 0FFE 7A 004F                                dec     $4F
02847 1001 86 5F                                  ldaa    #$5F             * '_'
02848 1003 97 70                                  staa    $70
02849 1005 BD 0C3B                                jsr     sub_C3B
02850 1008 39                                     rts
02851               * End of function sub_FF1
02852               
02853               
02854               * =============== S U B R O U TI N E =======================================
02855               
02856               
02857         1009                sub_1009        EQU     *
02858 1009 BD 0632                                jsr     sub_632
02859 100C 96 45                                  ldaa    $45
02860 100E 27 01                                  beq     loc_1011
02861 1010 39                                     rts
02862               * ---------------------------------------------------------------------------
02863               
02864         1011                loc_1011        EQU     *
02865 1011 96 81                                  ldaa    $81
02866 1013 81 01                                  cmpa    #1
02867 1015 27 01                                  beq     loc_1018
02868 1017 39                                     rts
02869               * ---------------------------------------------------------------------------
02870               
02871         1018                loc_1018        EQU     *
02872 1018 96 42                                  ldaa    $42
02873 101A 81 02                                  cmpa    #2
02874 101C 27 01                                  beq     loc_101F
02875 101E 39                                     rts
02876               * ---------------------------------------------------------------------------
02877               
02878         101F                loc_101F        EQU     *
02879 101F 96 43                                  ldaa    $43
02880 1021 81 03                                  cmpa    #3
02881 1023 27 01                                  beq     loc_1026
02882 1025 39                                     rts
02883               * ---------------------------------------------------------------------------
02884               
02885         1026                loc_1026        EQU     *
02886 1026 B6 0429                                ldaa    unk_429
02887 1029 81 0B                                  cmpa    #$B
02888 102B 27 01                                  beq     loc_102E
02889 102D 39                                     rts
02890               * ---------------------------------------------------------------------------
02891               
02892         102E                loc_102E        EQU     *
02893 102E 96 50                                  ldaa    $50
02894 1030 27 01                                  beq     loc_1033
02895 1032 39                                     rts
02896               * ---------------------------------------------------------------------------
02897               
02898         1033                loc_1033        EQU     *
02899 1033 96 46                                  ldaa    $46
02900 1035 B1 0402                                cmpa    unk_402
02901 1038 27 01                                  beq     loc_103B
02902 103A 39                                     rts
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 51
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

02903               * ---------------------------------------------------------------------------
02904               
02905         103B                loc_103B        EQU     *
02906 103B 80 0A                                  suba    #$A
02907 103D 91 4F                                  cmpa    $4F
02908 103F 27 01                                  beq     loc_1042
02909 1041 39                                     rts
02910               * ---------------------------------------------------------------------------
02911               
02912         1042                loc_1042        EQU     *
02913 1042 4D                                     tsta
02914 1043 26 1F                                  bne     loc_1064
02915 1045 96 48                                  ldaa    $48
02916 1047 81 02                                  cmpa    #2
02917 1049 23 01                                  bls     loc_104C
02918 104B 39                                     rts
02919               * ---------------------------------------------------------------------------
02920               
02921         104C                loc_104C        EQU     *
02922 104C 7E 109C                                jmp     loc_109C
02923               * ---------------------------------------------------------------------------
02924               
02925         104F                loc_104F        EQU     *
02926 104F 9C 49                                  cpx     $49
02927 1051 27 01                                  beq     loc_1054
02928 1053 39                                     rts
02929               * ---------------------------------------------------------------------------
02930               
02931         1054                loc_1054        EQU     *
02932 1054 D6 80                                  ldab    $80
02933 1056 86 7C                                  ldaa    #$7C             * '|'
02934 1058 C1 02                                  cmpb    #2
02935 105A 27 02                                  beq     loc_105E
02936 105C 86 7A                                  ldaa    #$7A             * 'z'
02937               
02938         105E                loc_105E        EQU     *
02939 105E BD 0A55                                jsr     sub_A55
02940 1061 7E 10A6                                jmp     loc_10A6
02941               * ---------------------------------------------------------------------------
02942               
02943         1064                loc_1064        EQU     *
02944 1064 96 48                                  ldaa    $48
02945 1066 26 01                                  bne     loc_1069
02946 1068 39                                     rts
02947               * ---------------------------------------------------------------------------
02948               
02949         1069                loc_1069        EQU     *
02950 1069 81 08                                  cmpa    #8
02951 106B 23 01                                  bls     loc_106E
02952 106D 39                                     rts
02953               * ---------------------------------------------------------------------------
02954               
02955         106E                loc_106E        EQU     *
02956 106E 86 CE                                  ldaa    #$CE             * '?'
02957 1070 BD 0A2A                                jsr     sub_A2A
02958 1073 D6 48                                  ldab    $48
02959 1075 D7 53                                  stab    $53
02960 1077 96 80                                  ldaa    $80
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 52
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

02961 1079 8B 06                                  adda    #6
02962 107B 97 70                                  staa    $70
02963               
02964         107D                loc_107D        EQU     *
02965 107D 37                                     pshb
02966 107E BD 0C3B                                jsr     sub_C3B
02967 1081 33                                     pulb
02968 1082 5A                                     decb
02969 1083 26 F8                                  bne     loc_107D
02970 1085 01                                     nop
02971 1086 01                                     nop
02972 1087 86 CF                                  ldaa    #$CF             * '?'
02973 1089 97 4D                                  staa    $4D
02974 108B FE 0400                                ldx     unk_400
02975 108E DF 4B                                  stx     $4B
02976 1090 BD 0B83                                jsr     sub_B83
02977               
02978         1093                loc_1093        EQU     *
02979 1093 7A 0042                                dec     $42
02980 1096 7F 0043                                clr     $43
02981 1099 31                                     ins
02982 109A 31                                     ins
02983 109B 39                                     rts
02984               * ---------------------------------------------------------------------------
02985               
02986         109C                loc_109C        EQU     *
02987 109C 4D                                     tsta
02988 109D 26 01                                  bne     loc_10A0
02989 109F 39                                     rts
02990               * ---------------------------------------------------------------------------
02991               
02992         10A0                loc_10A0        EQU     *
02993 10A0 FE 0400                                ldx     unk_400
02994 10A3 7E 104F                                jmp     loc_104F
02995               * ---------------------------------------------------------------------------
02996               
02997         10A6                loc_10A6        EQU     *
02998 10A6 96 48                                  ldaa    $48
02999 10A8 81 02                                  cmpa    #2
03000 10AA 27 03                                  beq     loc_10AF
03001 10AC 7E 1093                                jmp     loc_1093
03002               * ---------------------------------------------------------------------------
03003               
03004         10AF                loc_10AF        EQU     *
03005 10AF D6 80                                  ldab    $80
03006 10B1 86 7C                                  ldaa    #$7C             * '|'
03007 10B3 C1 02                                  cmpb    #2
03008 10B5 27 02                                  beq     loc_10B9
03009 10B7 86 7A                                  ldaa    #$7A             * 'z'
03010               
03011         10B9                loc_10B9        EQU     *
03012 10B9 BD 0A55                                jsr     sub_A55
03013 10BC 7E 1093                                jmp     loc_1093
03014               * End of function sub_1009
03015               
03016               * ---------------------------------------------------------------------------
03017               * START OF FUNCTION CHUNK FOR sub_112A
03018               
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 53
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

03019         10BF                loc_10BF        EQU     *
03020 10BF 96 43                                  ldaa    $43
03021 10C1 01                                     nop
03022 10C2 01                                     nop
03023 10C3 01                                     nop
03024 10C4 27 01                                  beq     loc_10C7
03025 10C6 39                                     rts
03026               * ---------------------------------------------------------------------------
03027               
03028         10C7                loc_10C7        EQU     *
03029 10C7 96 46                                  ldaa    $46
03030 10C9 81 0B                                  cmpa    #$B
03031 10CB 27 01                                  beq     loc_10CE
03032 10CD 39                                     rts
03033               * ---------------------------------------------------------------------------
03034               
03035         10CE                loc_10CE        EQU     *
03036 10CE 96 81                                  ldaa    $81
03037 10D0 4A                                     deca
03038 10D1 27 01                                  beq     loc_10D4
03039 10D3 39                                     rts
03040               * ---------------------------------------------------------------------------
03041               
03042         10D4                loc_10D4        EQU     *
03043 10D4 96 80                                  ldaa    $80
03044 10D6 81 03                                  cmpa    #3
03045 10D8 27 01                                  beq     loc_10DB
03046 10DA 39                                     rts
03047               * ---------------------------------------------------------------------------
03048               
03049         10DB                loc_10DB        EQU     *
03050 10DB 96 62                                  ldaa    $62
03051 10DD 81 26                                  cmpa    #$26             * '&'
03052 10DF 27 05                                  beq     loc_10E6
03053 10E1 81 27                                  cmpa    #$27             * '''
03054 10E3 27 01                                  beq     loc_10E6
03055 10E5 39                                     rts
03056               * ---------------------------------------------------------------------------
03057               
03058         10E6                loc_10E6        EQU     *
03059 10E6 96 45                                  ldaa    $45
03060 10E8 81 01                                  cmpa    #1
03061 10EA 2F 05                                  ble     loc_10F1
03062 10EC 81 0B                                  cmpa    #$B
03063 10EE 27 01                                  beq     loc_10F1
03064 10F0 39                                     rts
03065               * ---------------------------------------------------------------------------
03066               
03067         10F1                loc_10F1        EQU     *
03068 10F1 86 CE                                  ldaa    #$CE             * '?'
03069 10F3 BD 0A2A                                jsr     sub_A2A
03070 10F6 96 45                                  ldaa    $45
03071 10F8 81 0B                                  cmpa    #$B
03072 10FA 26 08                                  bne     loc_1104
03073 10FC 86 8C                                  ldaa    #$8C             * '?'
03074 10FE BD 1130                                jsr     sub_1130
03075 1101 31                                     ins
03076 1102 31                                     ins
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 54
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

03077 1103 39                                     rts
03078               * ---------------------------------------------------------------------------
03079               
03080         1104                loc_1104        EQU     *
03081 1104 96 47                                  ldaa    $47
03082 1106 26 14                                  bne     loc_111C
03083 1108 D6 48                                  ldab    $48
03084 110A 27 0D                                  beq     loc_1119
03085 110C 86 09                                  ldaa    #9
03086 110E 97 70                                  staa    $70
03087 1110 97 71                                  staa    $71
03088 1112 C1 03                                  cmpb    #3
03089 1114 2C 06                                  bge     loc_111C
03090 1116 BD 278A                                jsr     sub_278A
03091               
03092         1119                loc_1119        EQU     *
03093 1119 31                                     ins
03094 111A 31                                     ins
03095 111B 39                                     rts
03096               * ---------------------------------------------------------------------------
03097               
03098         111C                loc_111C        EQU     *
03099 111C 86 8C                                  ldaa    #$8C             * '?'
03100 111E 97 70                                  staa    $70
03101 1120 DE 47                                  ldx     $47
03102 1122 DF 71                                  stx     $71
03103 1124 BD 0C43                                jsr     sub_C43
03104 1127 31                                     ins
03105 1128 31                                     ins
03106 1129 39                                     rts
03107               * END OF FUNCTION CHUNK FOR sub_112A
03108               
03109               * =============== S U B R O U TI N E =======================================
03110               
03111               
03112         112A                sub_112A        EQU     *
03113               
03114               * FUNCTION CHUNK AT 10BF SIZE 0000006B BYTES
03115               * FUNCTION CHUNK AT 1C9D SIZE 0000000A BYTES
03116               
03117 112A BD 0632                                jsr     sub_632
03118 112D 7E 1C9D                                jmp     loc_1C9D
03119               * End of function sub_112A
03120               
03121               
03122               * =============== S U B R O U TI N E =======================================
03123               
03124               
03125         1130                sub_1130        EQU     *
03126 1130 97 4D                                  staa    $4D
03127 1132 DE 47                                  ldx     $47
03128 1134 7E 0A2E                                jmp     loc_A2E
03129               * End of function sub_1130
03130               
03131               
03132               * =============== S U B R O U TI N E =======================================
03133               
03134               
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 55
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

03135         1137                sub_1137        EQU     *
03136 1137 BD 0E0A                                jsr     sub_E0A
03137 113A 4F                                     clra
03138 113B D6 81                                  ldab    $81
03139 113D C1 0C                                  cmpb    #$C
03140 113F 27 01                                  beq     loc_1142
03141 1141 4C                                     inca
03142               
03143         1142                loc_1142        EQU     *
03144 1142 97 4F                                  staa    $4F
03145 1144 BD 059C                                jsr     sub_59C
03146 1147 39                                     rts
03147               * End of function sub_1137
03148               
03149               
03150               * =============== S U B R O U TI N E =======================================
03151               
03152               
03153         1148                sub_1148        EQU     *
03154 1148 BD 0E1A                                jsr     sub_E1A
03155 114B 96 4F                                  ldaa    $4F
03156 114D 81 01                                  cmpa    #1
03157 114F 39                                     rts
03158               * End of function sub_1148
03159               
03160               * ---------------------------------------------------------------------------
03161 1150 26 06                                  bne     loc_1158
03162 1152 BD 0AEA                                jsr     sub_AEA
03163 1155 7E 05AC                                jmp     loc_5AC
03164               * ---------------------------------------------------------------------------
03165               
03166         1158                loc_1158        EQU     *
03167 1158 81 08                                  cmpa    #8
03168 115A 27 03                                  beq     loc_115F
03169 115C 7E 05AC                                jmp     loc_5AC
03170               * ---------------------------------------------------------------------------
03171               * START OF FUNCTION CHUNK FOR sub_59C
03172               
03173         115F                loc_115F        EQU     *
03174 115F CE 0428                                ldx     #$428
03175 1162 96 42                                  ldaa    $42
03176 1164 4A                                     deca
03177 1165 BD 0C78                                jsr     AddBAtoX
03178 1168 A6 00                                  ldaa    0,x
03179 116A 97 80                                  staa    $80
03180 116C 7E 059F                                jmp     loc_59F
03181               * END OF FUNCTION CHUNK FOR sub_59C
03182               
03183               * =============== S U B R O U TI N E =======================================
03184               
03185               
03186         116F                sub_116F        EQU     *
03187 116F DE 4B                                  ldx     $4B
03188 1171 26 08                                  bne     loc_117B
03189 1173 86 4F                                  ldaa    #$4F             * 'O'
03190 1175 97 70                                  staa    $70
03191 1177 BD 0C3B                                jsr     sub_C3B
03192 117A 39                                     rts
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 56
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

03193               * ---------------------------------------------------------------------------
03194               
03195         117B                loc_117B        EQU     *
03196 117B BD 0B45                                jsr     sub_B45
03197 117E 39                                     rts
03198               * End of function sub_116F
03199               
03200               * ---------------------------------------------------------------------------
03201               * START OF FUNCTION CHUNK FOR sub_DED
03202               
03203         117F                loc_117F        EQU     *
03204 117F 97 43                                  staa    $43
03205               * END OF FUNCTION CHUNK FOR sub_DED
03206               
03207               * =============== S U B R O U TI N E =======================================
03208               
03209               
03210         1181                sub_1181        EQU     *
03211 1181 96 4F                                  ldaa    $4F
03212 1183 81 02                                  cmpa    #2
03213 1185 26 08                                  bne     locret_118F
03214 1187 96 59                                  ldaa    $59
03215 1189 81 01                                  cmpa    #1
03216 118B 26 02                                  bne     locret_118F
03217 118D 97 4F                                  staa    $4F
03218               
03219         118F                locret_118F     EQU     *
03220 118F 39                                     rts
03221               * End of function sub_1181
03222               
03223               * ---------------------------------------------------------------------------
03224               * START OF FUNCTION CHUNK FOR sub_B2C
03225               
03226         1190                loc_1190        EQU     *
03227 1190 BD 0C3F                                jsr     sub_C3F
03228 1193 7F 0050                                clr     $50
03229 1196 39                                     rts
03230               * END OF FUNCTION CHUNK FOR sub_B2C
03231               * ---------------------------------------------------------------------------
03232               * START OF FUNCTION CHUNK FOR sub_D00
03233               
03234         1197                loc_1197        EQU     *
03235 1197 BD 0E1A                                jsr     sub_E1A
03236 119A 7F 0050                                clr     $50
03237 119D 39                                     rts
03238               * END OF FUNCTION CHUNK FOR sub_D00
03239               
03240               * =============== S U B R O U TI N E =======================================
03241               
03242               
03243         119E                sub_119E        EQU     *
03244 119E 7F 0060                                clr     $60
03245 11A1 96 53                                  ldaa    $53
03246 11A3 26 01                                  bne     loc_11A6
03247 11A5 39                                     rts
03248               * ---------------------------------------------------------------------------
03249               
03250         11A6                loc_11A6        EQU     *
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 57
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

03251 11A6 01                                     nop
03252 11A7 01                                     nop
03253 11A8 01                                     nop
03254 11A9 BD 1C07                                jsr     sub_1C07
03255 11AC BD 1C15                                jsr     sub_1C15
03256 11AF 96 54                                  ldaa    $54
03257 11B1 BD 1C0E                                jsr     sub_1C0E
03258 11B4 96 55                                  ldaa    $55
03259               * End of function sub_119E
03260               
03261               
03262               * =============== S U B R O U TI N E =======================================
03263               
03264               
03265         11B6                sub_11B6        EQU     *
03266 11B6 BD 1C0E                                jsr     sub_1C0E
03267 11B9 86 3A                                  ldaa    #$3A             * ':'
03268 11BB BD 1C00                                jsr     sub_1C00
03269 11BE 39                                     rts
03270               * End of function sub_11B6
03271               
03272               
03273               * =============== S U B R O U TI N E =======================================
03274               
03275               
03276         11BF                sub_11BF        EQU     *
03277 11BF BD 0C3F                                jsr     sub_C3F
03278 11C2 96 4E                                  ldaa    $4E
03279 11C4 8B 20                                  adda    #$20             * ' '
03280 11C6 39                                     rts
03281               * End of function sub_11BF
03282               
03283               
03284               * =============== S U B R O U TI N E =======================================
03285               
03286               
03287         11C7                sub_11C7        EQU     *
03288 11C7 36                                     psha
03289 11C8 4C                                     inca
03290 11C9 97 71                                  staa    $71
03291 11CB BD 0C3F                                jsr     sub_C3F
03292 11CE 32                                     pula
03293 11CF 39                                     rts
03294               * End of function sub_11C7
03295               
03296               
03297               * =============== S U B R O U TI N E =======================================
03298               
03299               
03300         11D0                sub_11D0        EQU     *
03301 11D0 08                                     inx
03302 11D1 DF 71                                  stx     $71
03303 11D3 BD 0C43                                jsr     sub_C43
03304 11D6 DE 74                                  ldx     $74
03305 11D8 DF 71                                  stx     $71
03306 11DA 39                                     rts
03307               * End of function sub_11D0
03308               
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 58
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

03309               
03310               * =============== S U B R O U TI N E =======================================
03311               
03312               
03313         11DB                sub_11DB        EQU     *
03314 11DB 36                                     psha
03315 11DC 7F 0071                                clr     $71
03316 11DF BD 0C3F                                jsr     sub_C3F
03317 11E2 32                                     pula
03318 11E3 39                                     rts
03319               * End of function sub_11DB
03320               
03321               
03322               * =============== S U B R O U TI N E =======================================
03323               
03324               
03325         11E4                sub_11E4        EQU     *
03326 11E4 97 70                                  staa    $70
03327 11E6 BD 0C3B                                jsr     sub_C3B
03328 11E9 39                                     rts
03329               * End of function sub_11E4
03330               
03331               * ---------------------------------------------------------------------------
03332 11EA 50                                     negb
03333 11EB 20 45                                  bra     loc_1232
03334               * ---------------------------------------------------------------------------
03335 11ED    51 55 20 24 39 32                   fcb     $51,$55,$20,$24,$39,$32,$60,$53,$59,$4D,
03336 11F8    2B 31 20 45 51 55                   fcb     $2B,$31,$20,$45,$51,$55,$20,$24
03337               
03338               * =============== S U B R O U TI N E =======================================
03339               
03340               * Attributes: thunk
03341               
03342         1200                sub_1200        EQU     *
03343 1200 7E 2191                                jmp     loc_2191
03344               * End of function sub_1200
03345               
03346               * ---------------------------------------------------------------------------
03347 1203 01                                     nop
03348               * START OF FUNCTION CHUNK FOR sub_218B
03349               
03350         1204                loc_1204        EQU     *
03351 1204 26 01                                  bne     loc_1207
03352 1206 39                                     rts
03353               * ---------------------------------------------------------------------------
03354               
03355         1207                loc_1207        EQU     *
03356 1207 36                                     psha
03357 1208 BD 1222                                jsr     sub_1222
03358 120B 32                                     pula
03359 120C 81 FF                                  cmpa    #$FF
03360 120E 27 01                                  beq     loc_1211
03361 1210 39                                     rts
03362               * ---------------------------------------------------------------------------
03363               
03364         1211                loc_1211        EQU     *
03365 1211 96 5A                                  ldaa    $5A
03366               
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 59
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

03367         1213                loc_1213        EQU     *
03368 1213 81 3B                                  cmpa    #$3B             * ';'
03369 1215 26 01                                  bne     loc_1218
03370 1217 39                                     rts
03371               * ---------------------------------------------------------------------------
03372               
03373         1218                loc_1218        EQU     *
03374 1218 BD 1222                                jsr     sub_1222
03375 121B 96 5A                                  ldaa    $5A
03376 121D 81 80                                  cmpa    #$80             * '?'
03377 121F 26 F2                                  bne     loc_1213
03378 1221 39                                     rts
03379               * END OF FUNCTION CHUNK FOR sub_218B
03380               
03381               * =============== S U B R O U TI N E =======================================
03382               
03383               
03384         1222                sub_1222        EQU     *
03385               
03386               * FUNCTION CHUNK AT 1D7F SIZE 00000016 BYTES
03387               * FUNCTION CHUNK AT 219B SIZE 0000000A BYTES
03388               
03389 1222 BD 17D3                                jsr     sub_17D3
03390 1225 96 82                                  ldaa    $82
03391 1227 97 83                                  staa    $83
03392 1229 7F 0084                                clr     $84
03393 122C 7F 0059                                clr     $59
03394 122F BD 1285                                jsr     sub_1285
03395               
03396         1232                loc_1232        EQU     *
03397 1232 96 84                                  ldaa    $84
03398 1234 27 01                                  beq     loc_1237
03399 1236 39                                     rts
03400               * ---------------------------------------------------------------------------
03401               
03402         1237                loc_1237        EQU     *
03403 1237 BD 132E                                jsr     sub_132E
03404 123A 96 84                                  ldaa    $84
03405 123C 27 01                                  beq     loc_123F
03406 123E 39                                     rts
03407               * ---------------------------------------------------------------------------
03408               
03409         123F                loc_123F        EQU     *
03410 123F BD 1D37                                jsr     sub_1D37
03411 1242 96 84                                  ldaa    $84
03412 1244 27 01                                  beq     loc_1247
03413 1246 39                                     rts
03414               * ---------------------------------------------------------------------------
03415               
03416         1247                loc_1247        EQU     *
03417 1247 7E 219B                                jmp     loc_219B
03418               * ---------------------------------------------------------------------------
03419               
03420         124A                loc_124A        EQU     *
03421 124A 96 82                                  ldaa    $82
03422 124C 97 83                                  staa    $83
03423 124E 39                                     rts
03424               * End of function sub_1222
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 60
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

03425               
03426               
03427               * =============== S U B R O U TI N E =======================================
03428               
03429               
03430         124F                sub_124F        EQU     *
03431 124F CE 04FF                                ldx     #$4FF
03432 1252 96 82                                  ldaa    $82
03433 1254 81 FF                                  cmpa    #$FF
03434 1256 27 0A                                  beq     loc_1262
03435 1258 08                                     inx
03436 1259 BD 0C78                                jsr     AddBAtoX
03437 125C A6 00                                  ldaa    0,x
03438 125E 81 0D                                  cmpa    #$D
03439 1260 27 05                                  beq     loc_1267
03440               
03441         1262                loc_1262        EQU     *
03442 1262 7C 0082                                inc     $82
03443 1265 A6 01                                  ldaa    1,x
03444               
03445         1267                loc_1267        EQU     *
03446 1267 97 85                                  staa    $85
03447 1269 39                                     rts
03448               * End of function sub_124F
03449               
03450               
03451               * =============== S U B R O U TI N E =======================================
03452               
03453               
03454         126A                sub_126A        EQU     *
03455 126A BD 124F                                jsr     sub_124F
03456 126D 96 85                                  ldaa    $85
03457 126F 81 0D                                  cmpa    #$D
03458 1271 27 01                                  beq     loc_1274
03459 1273 39                                     rts
03460               * ---------------------------------------------------------------------------
03461               
03462         1274                loc_1274        EQU     *
03463 1274 01                                     nop
03464 1275 01                                     nop
03465 1276 01                                     nop
03466 1277 01                                     nop
03467 1278 01                                     nop
03468 1279 01                                     nop
03469 127A BD 1644                                jsr     sub_1644
03470 127D 86 FF                                  ldaa    #$FF
03471 127F 97 82                                  staa    $82
03472 1281 7E 126A                                jmp     sub_126A
03473               * End of function sub_126A
03474               
03475               * ---------------------------------------------------------------------------
03476 1284 01                                     nop
03477               
03478               * =============== S U B R O U TI N E =======================================
03479               
03480               
03481         1285                sub_1285        EQU     *
03482               
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 61
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

03483               * FUNCTION CHUNK AT 201A SIZE 0000000D BYTES
03484               
03485 1285 96 83                                  ldaa    $83
03486 1287 4A                                     deca
03487 1288 97 82                                  staa    $82
03488 128A BD 124F                                jsr     sub_124F
03489 128D BD 1384                                jsr     sub_1384
03490 1290 96 87                                  ldaa    $87
03491 1292 81 02                                  cmpa    #2
03492 1294 27 01                                  beq     loc_1297
03493 1296 39                                     rts
03494               * ---------------------------------------------------------------------------
03495               
03496         1297                loc_1297        EQU     *
03497 1297 96 85                                  ldaa    $85
03498 1299 80 41                                  suba    #$41             * 'A'
03499 129B 97 88                                  staa    $88
03500 129D 86 01                                  ldaa    #1
03501 129F 97 67                                  staa    $67
03502               
03503         12A1                loc_12A1        EQU     *
03504 12A1 BD 124F                                jsr     sub_124F
03505 12A4 BD 1384                                jsr     sub_1384
03506 12A7 96 87                                  ldaa    $87
03507 12A9 27 05                                  beq     loc_12B0
03508 12AB 7C 0067                                inc     $67
03509 12AE 20 F1                                  bra     loc_12A1
03510               * ---------------------------------------------------------------------------
03511               
03512         12B0                loc_12B0        EQU     *
03513 12B0 BD 15F9                                jsr     sub_15F9
03514 12B3 BD 1450                                jsr     sub_1450
03515 12B6 7C 0084                                inc     $84
03516 12B9 96 86                                  ldaa    $86
03517 12BB 26 0A                                  bne     loc_12C7
03518 12BD BD 16B3                                jsr     sub_16B3
03519 12C0 01                                     nop
03520 12C1 CE 0000                                ldx     #0
03521 12C4 DF 5C                                  stx     $5C
03522 12C6 39                                     rts
03523               * ---------------------------------------------------------------------------
03524               
03525         12C7                loc_12C7        EQU     *
03526 12C7 D6 8A                                  ldab    $8A
03527 12C9 96 8B                                  ldaa    $8B
03528 12CB CE 4000                                ldx     #$4000
03529 12CE BD 1403                                jsr     sub_1403
03530 12D1 A6 00                                  ldaa    0,x
03531 12D3 97 5A                                  staa    $5A
03532 12D5 81 7F                                  cmpa    #$7F             * ''
03533 12D7 22 01                                  bhi     loc_12DA
03534 12D9 3F                                     swi
03535               
03536         12DA                loc_12DA        EQU     *
03537 12DA 81 9E                                  cmpa    #$9E             * '?'
03538 12DC 22 01                                  bhi     loc_12DF
03539 12DE 39                                     rts
03540               * ---------------------------------------------------------------------------
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 62
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

03541               
03542         12DF                loc_12DF        EQU     *
03543 12DF EE 01                                  ldx     1,x
03544 12E1 DF 5C                                  stx     $5C
03545 12E3 81 F8                                  cmpa    #$F8             * '?'
03546 12E5 7E 201A                                jmp     loc_201A
03547               * ---------------------------------------------------------------------------
03548               
03549         12E8                loc_12E8        EQU     *
03550 12E8 81 F2                                  cmpa    #$F2             * '?'
03551 12EA 26 01                                  bne     loc_12ED
03552 12EC 39                                     rts
03553               * ---------------------------------------------------------------------------
03554               
03555         12ED                loc_12ED        EQU     *
03556 12ED 81 F3                                  cmpa    #$F3             * '?'
03557 12EF 27 01                                  beq     loc_12F2
03558 12F1 3F                                     swi
03559               
03560         12F2                loc_12F2        EQU     *
03561 12F2 4A                                     deca
03562 12F3 97 5A                                  staa    $5A
03563 12F5 7C 0059                                inc     $59
03564 12F8 39                                     rts
03565               * End of function sub_1285
03566               
03567               
03568               * =============== S U B R O U TI N E =======================================
03569               
03570               
03571         12F9                sub_12F9        EQU     *
03572 12F9 7F 0067                                clr     $67
03573 12FC 96 83                                  ldaa    $83
03574 12FE 97 68                                  staa    $68
03575 1300 96 82                                  ldaa    $82
03576 1302 4C                                     inca
03577 1303 97 69                                  staa    $69
03578               
03579         1305                loc_1305        EQU     *
03580 1305 96 68                                  ldaa    $68
03581 1307 91 69                                  cmpa    $69
03582 1309 2D 01                                  blt     loc_130C
03583 130B 39                                     rts
03584               * ---------------------------------------------------------------------------
03585               
03586         130C                loc_130C        EQU     *
03587 130C 96 68                                  ldaa    $68
03588 130E CE 0500                                ldx     #$500
03589 1311 BD 0C78                                jsr     AddBAtoX
03590 1314 A6 00                                  ldaa    0,x
03591 1316 7C 0068                                inc     $68
03592 1319 81 24                                  cmpa    #$24             * '$'
03593 131B 27 E8                                  beq     loc_1305
03594 131D 36                                     psha
03595 131E CE 04D8                                ldx     #$4D8
03596 1321 96 67                                  ldaa    $67
03597 1323 BD 0C78                                jsr     AddBAtoX
03598 1326 32                                     pula
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 63
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

03599 1327 A7 00                                  staa    0,x
03600 1329 BD 29F4                                jsr     sub_29F4
03601 132C 20 D7                                  bra     loc_1305
03602               * End of function sub_12F9
03603               
03604               
03605               * =============== S U B R O U TI N E =======================================
03606               
03607               
03608         132E                sub_132E        EQU     *
03609 132E 96 83                                  ldaa    $83
03610 1330 4A                                     deca
03611 1331 97 82                                  staa    $82
03612 1333 7F 005C                                clr     $5C
03613 1336 7F 005D                                clr     $5D
03614 1339 BD 124F                                jsr     sub_124F
03615 133C BD 1384                                jsr     sub_1384
03616 133F 96 87                                  ldaa    $87
03617 1341 81 01                                  cmpa    #1
03618 1343 27 01                                  beq     loc_1346
03619 1345 39                                     rts
03620               * ---------------------------------------------------------------------------
03621               
03622         1346                loc_1346        EQU     *
03623 1346 86 01                                  ldaa    #1
03624 1348 97 6A                                  staa    $6A
03625               
03626         134A                loc_134A        EQU     *
03627 134A BD 13A5                                jsr     sub_13A5
03628 134D BD 124F                                jsr     sub_124F
03629 1350 BD 1384                                jsr     sub_1384
03630 1353 96 85                                  ldaa    $85
03631 1355 81 46                                  cmpa    #$46             * 'F'
03632 1357 2F 03                                  ble     loc_135C
03633 1359 7F 0087                                clr     $87
03634               
03635         135C                loc_135C        EQU     *
03636 135C 96 87                                  ldaa    $87
03637 135E 27 05                                  beq     loc_1365
03638 1360 7C 006A                                inc     $6A
03639 1363 20 E5                                  bra     loc_134A
03640               * ---------------------------------------------------------------------------
03641               
03642         1365                loc_1365        EQU     *
03643 1365 96 85                                  ldaa    $85
03644 1367 81 48                                  cmpa    #$48             * 'H'
03645 1369 27 0A                                  beq     loc_1375
03646 136B 96 6A                                  ldaa    $6A
03647 136D 81 01                                  cmpa    #1
03648 136F 27 01                                  beq     loc_1372
03649 1371 39                                     rts
03650               * ---------------------------------------------------------------------------
03651               
03652         1372                loc_1372        EQU     *
03653 1372 7A 0082                                dec     $82
03654               
03655         1375                loc_1375        EQU     *
03656 1375 7C 0084                                inc     $84
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 64
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

03657               
03658         1378                loc_1378        EQU     *
03659 1378 96 5C                                  ldaa    $5C
03660 137A 27 03                                  beq     loc_137F
03661 137C 7C 0059                                inc     $59
03662               
03663         137F                loc_137F        EQU     *
03664 137F 86 F0                                  ldaa    #$F0             * '?'
03665 1381 97 5A                                  staa    $5A
03666 1383 39                                     rts
03667               * End of function sub_132E
03668               
03669               
03670               * =============== S U B R O U TI N E =======================================
03671               
03672               * Attributes: thunk
03673               
03674         1384                sub_1384        EQU     *
03675 1384 7E 17B5                                jmp     sub_17B5
03676               * End of function sub_1384
03677               
03678               * ---------------------------------------------------------------------------
03679 1387 96 85                                  ldaa    $85
03680               * START OF FUNCTION CHUNK FOR sub_17B5
03681               
03682         1389                loc_1389        EQU     *
03683 1389 81 5A                                  cmpa    #$5A             * 'Z'
03684 138B 2F 01                                  ble     loc_138E
03685 138D 39                                     rts
03686               * ---------------------------------------------------------------------------
03687               
03688         138E                loc_138E        EQU     *
03689 138E 81 41                                  cmpa    #$41             * 'A'
03690 1390 2C 0E                                  bge     loc_13A0
03691 1392 81 30                                  cmpa    #$30             * '0'
03692 1394 2C 01                                  bge     loc_1397
03693 1396 39                                     rts
03694               * ---------------------------------------------------------------------------
03695               
03696         1397                loc_1397        EQU     *
03697 1397 81 39                                  cmpa    #$39             * '9'
03698 1399 2F 01                                  ble     loc_139C
03699 139B 39                                     rts
03700               * ---------------------------------------------------------------------------
03701               
03702         139C                loc_139C        EQU     *
03703 139C 7C 0087                                inc     $87
03704 139F 39                                     rts
03705               * ---------------------------------------------------------------------------
03706               
03707         13A0                loc_13A0        EQU     *
03708 13A0 86 02                                  ldaa    #2
03709 13A2 97 87                                  staa    $87
03710 13A4 39                                     rts
03711               * END OF FUNCTION CHUNK FOR sub_17B5
03712               
03713               * =============== S U B R O U TI N E =======================================
03714               
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 65
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

03715               
03716         13A5                sub_13A5        EQU     *
03717 13A5 D6 85                                  ldab    $85
03718 13A7 C0 30                                  subb    #$30             * '0'
03719 13A9 96 87                                  ldaa    $87
03720 13AB 81 01                                  cmpa    #1
03721 13AD 27 02                                  beq     loc_13B1
03722 13AF C0 07                                  subb    #7
03723               
03724         13B1                loc_13B1        EQU     *
03725 13B1 D7 6B                                  stab    $6B
03726 13B3 D6 5C                                  ldab    $5C
03727 13B5 96 5D                                  ldaa    $5D
03728 13B7 48                                     asla
03729 13B8 59                                     rolb
03730 13B9 48                                     asla
03731 13BA 59                                     rolb
03732 13BB 48                                     asla
03733 13BC 59                                     rolb
03734 13BD 48                                     asla
03735 13BE 59                                     rolb
03736 13BF 9B 6B                                  adda    $6B
03737 13C1 C9 00                                  adcb    #0
03738 13C3 D7 5C                                  stab    $5C
03739 13C5 97 5D                                  staa    $5D
03740 13C7 39                                     rts
03741               * End of function sub_13A5
03742               
03743               
03744               * =============== S U B R O U TI N E =======================================
03745               
03746               
03747         13C8                sub_13C8        EQU     *
03748               
03749               * FUNCTION CHUNK AT 13F6 SIZE 0000000D BYTES
03750               * FUNCTION CHUNK AT 279C SIZE 00000029 BYTES
03751               
03752 13C8 96 83                                  ldaa    $83
03753 13CA 4A                                     deca
03754 13CB 97 82                                  staa    $82
03755 13CD BD 124F                                jsr     sub_124F
03756 13D0 96 85                                  ldaa    $85
03757 13D2 81 3E                                  cmpa    #$3E             * '>'
03758 13D4 2F 01                                  ble     loc_13D7
03759 13D6 39                                     rts
03760               * ---------------------------------------------------------------------------
03761               
03762         13D7                loc_13D7        EQU     *
03763 13D7 81 3B                                  cmpa    #$3B             * ';'
03764 13D9 2C 0A                                  bge     loc_13E5
03765 13DB 81 27                                  cmpa    #$27             * '''
03766 13DD 2C 01                                  bge     loc_13E0
03767 13DF 39                                     rts
03768               * ---------------------------------------------------------------------------
03769               
03770         13E0                loc_13E0        EQU     *
03771 13E0 81 2F                                  cmpa    #$2F             * '/'
03772 13E2 2F 01                                  ble     loc_13E5
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 66
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

03773 13E4 39                                     rts
03774               * ---------------------------------------------------------------------------
03775               
03776         13E5                loc_13E5        EQU     *
03777 13E5 7C 0084                                inc     $84
03778 13E8 96 85                                  ldaa    $85
03779 13EA 97 5A                                  staa    $5A
03780 13EC 81 3C                                  cmpa    #$3C             * '<'
03781 13EE 7E 279C                                jmp     loc_279C
03782               * End of function sub_13C8
03783               
03784               * ---------------------------------------------------------------------------
03785 13F1 01                                     nop
03786 13F2 01                                     nop
03787 13F3 01                                     nop
03788 13F4 01                                     nop
03789 13F5 01                                     nop
03790               * START OF FUNCTION CHUNK FOR sub_13C8
03791               
03792         13F6                loc_13F6        EQU     *
03793 13F6 81 3E                                  cmpa    #$3E             * '>'
03794 13F8 26 05                                  bne     loc_13FF
03795 13FA 86 33                                  ldaa    #$33             * '3'
03796               
03797         13FC                loc_13FC        EQU     *
03798 13FC 97 5A                                  staa    $5A
03799 13FE 39                                     rts
03800               * ---------------------------------------------------------------------------
03801               
03802         13FF                loc_13FF        EQU     *
03803 13FF 7A 0082                                dec     $82
03804 1402 39                                     rts
03805               * END OF FUNCTION CHUNK FOR sub_13C8
03806               
03807               * =============== S U B R O U TI N E =======================================
03808               
03809               
03810         1403                sub_1403        EQU     *
03811 1403 DF 63                                  stx     $63
03812 1405 7E 0C7A                                jmp     loc_C7A
03813               * End of function sub_1403
03814               
03815               * ---------------------------------------------------------------------------
03816 1408 81 0D                                  cmpa    #$D
03817 140A 27 03                                  beq     locret_140F
03818 140C BD 1C00                                jsr     sub_1C00
03819               
03820         140F                locret_140F     EQU     *
03821 140F 39                                     rts
03822               * ---------------------------------------------------------------------------
03823 1410 01                                     nop
03824 1411 01                                     nop
03825 1412 01                                     nop
03826 1413 01                                     nop
03827 1414 01                                     nop
03828               * START OF FUNCTION CHUNK FOR sub_1644
03829               
03830         1415                loc_1415        EQU     *
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 67
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

03831 1415 BD 03A4                                jsr     sub_3A4
03832 1418 5F                                     clrb
03833 1419 FE 039A                                ldx     word_39A
03834 141C FF 1441                                stx     byte_1441
03835 141F CE 0500                                ldx     #$500
03836               
03837         1422                loc_1422        EQU     *
03838 1422 FF 1443                                stx     byte_1443
03839 1425 FE 1441                                ldx     byte_1441
03840 1428 A6 00                                  ldaa    0,x
03841 142A 08                                     inx
03842 142B FF 1441                                stx     byte_1441
03843 142E FE 1443                                ldx     byte_1443
03844 1431 A7 00                                  staa    0,x
03845 1433 81 0D                                  cmpa    #$D
03846 1435 26 01                                  bne     loc_1438
03847 1437 39                                     rts
03848               * ---------------------------------------------------------------------------
03849               
03850         1438                loc_1438        EQU     *
03851 1438 08                                     inx
03852 1439 5C                                     incb
03853 143A C1 4F                                  cmpb    #$4F             * 'O'
03854 143C 26 E4                                  bne     loc_1422
03855 143E 7E 1B94                                jmp     loc_1B94
03856               * END OF FUNCTION CHUNK FOR sub_1644
03857               * ---------------------------------------------------------------------------
03858 1441    00                  byte_1441       fcb     0
03859 1442    00                                  fcb     0
03860 1443    00                  byte_1443       fcb     0
03861 1444    00 00 BD 0C 78 32                   fcb     0,0,$BD,$C,$78,$32,$A7,0,$33,$7E,$16,0
03862               
03863               * =============== S U B R O U TI N E =======================================
03864               
03865               
03866         1450                sub_1450        EQU     *
03867 1450 BD 1457                                jsr     sub_1457
03868 1453 7F 0096                                clr     $96
03869 1456 39                                     rts
03870               * End of function sub_1450
03871               
03872               
03873               * =============== S U B R O U TI N E =======================================
03874               
03875               
03876         1457                sub_1457        EQU     *
03877 1457 7F 0086                                clr     $86
03878 145A CE 0000                                ldx     #0
03879 145D DF 92                                  stx     $92
03880 145F BD 1489                                jsr     sub_1489
03881 1462 96 86                                  ldaa    $86
03882 1464 27 01                                  beq     loc_1467
03883 1466 39                                     rts
03884               * ---------------------------------------------------------------------------
03885               
03886         1467                loc_1467        EQU     *
03887 1467 DE 94                                  ldx     $94
03888               
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 68
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

03889         1469                loc_1469        EQU     *
03890 1469 DF 92                                  stx     $92
03891 146B 26 01                                  bne     loc_146E
03892 146D 39                                     rts
03893               * ---------------------------------------------------------------------------
03894               
03895         146E                loc_146E        EQU     *
03896 146E BD 1489                                jsr     sub_1489
03897 1471 96 86                                  ldaa    $86
03898 1473 27 01                                  beq     loc_1476
03899 1475 39                                     rts
03900               * ---------------------------------------------------------------------------
03901               
03902         1476                loc_1476        EQU     *
03903 1476 96 96                                  ldaa    $96
03904 1478 27 01                                  beq     loc_147B
03905 147A 39                                     rts
03906               * ---------------------------------------------------------------------------
03907               
03908         147B                loc_147B        EQU     *
03909 147B CE 4000                                ldx     #$4000
03910 147E D6 92                                  ldab    $92
03911 1480 96 93                                  ldaa    $93
03912 1482 BD 1403                                jsr     sub_1403
03913 1485 EE 00                                  ldx     0,x
03914 1487 20 E0                                  bra     loc_1469
03915               * End of function sub_1457
03916               
03917               
03918               * =============== S U B R O U TI N E =======================================
03919               
03920               
03921         1489                sub_1489        EQU     *
03922 1489 96 88                                  ldaa    $88
03923 148B 5F                                     clrb
03924 148C 48                                     asla
03925 148D 59                                     rolb
03926 148E 9B 93                                  adda    $93
03927 1490 D9 92                                  adcb    $92
03928 1492 BD 1609                                jsr     sub_1609
03929 1495 BD 1403                                jsr     sub_1403
03930               
03931         1498                loc_1498        EQU     *
03932 1498 EE 00                                  ldx     0,x
03933 149A DF 8C                                  stx     $8C
03934 149C 26 01                                  bne     loc_149F
03935 149E 39                                     rts
03936               * ---------------------------------------------------------------------------
03937               
03938         149F                loc_149F        EQU     *
03939 149F BD 14B7                                jsr     sub_14B7
03940 14A2 96 86                                  ldaa    $86
03941 14A4 27 01                                  beq     loc_14A7
03942 14A6 39                                     rts
03943               * ---------------------------------------------------------------------------
03944               
03945         14A7                loc_14A7        EQU     *
03946 14A7 DE 8C                                  ldx     $8C
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 69
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

03947 14A9 DF 8E                                  stx     $8E
03948 14AB CE 4000                                ldx     #$4000
03949 14AE D6 8C                                  ldab    $8C
03950 14B0 96 8D                                  ldaa    $8D
03951 14B2 BD 1403                                jsr     sub_1403
03952 14B5 20 E1                                  bra     loc_1498
03953               * End of function sub_1489
03954               
03955               
03956               * =============== S U B R O U TI N E =======================================
03957               
03958               
03959         14B7                sub_14B7        EQU     *
03960 14B7 CE 4000                                ldx     #$4000
03961 14BA D6 8C                                  ldab    $8C
03962 14BC 96 8D                                  ldaa    $8D
03963 14BE BD 1403                                jsr     sub_1403
03964 14C1 A6 02                                  ldaa    2,x
03965 14C3 91 67                                  cmpa    $67
03966 14C5 27 01                                  beq     loc_14C8
03967 14C7 39                                     rts
03968               * ---------------------------------------------------------------------------
03969               
03970         14C8                loc_14C8        EQU     *
03971 14C8 86 01                                  ldaa    #1
03972 14CA 97 89                                  staa    $89
03973 14CC DE 8C                                  ldx     $8C
03974 14CE 08                                     inx
03975 14CF 08                                     inx
03976               
03977         14D0                loc_14D0        EQU     *
03978 14D0 08                                     inx
03979 14D1 DF 8A                                  stx     $8A
03980 14D3 96 89                                  ldaa    $89
03981 14D5 91 67                                  cmpa    $67
03982 14D7 2C 23                                  bge     loc_14FC
03983 14D9 CE 4000                                ldx     #$4000
03984 14DC D6 8A                                  ldab    $8A
03985 14DE 96 8B                                  ldaa    $8B
03986 14E0 BD 1403                                jsr     sub_1403
03987 14E3 A6 00                                  ldaa    0,x
03988 14E5 36                                     psha
03989 14E6 CE 04D8                                ldx     #$4D8
03990 14E9 96 89                                  ldaa    $89
03991 14EB BD 0C78                                jsr     AddBAtoX
03992 14EE E6 00                                  ldab    0,x
03993 14F0 32                                     pula
03994 14F1 11                                     cba
03995 14F2 27 01                                  beq     loc_14F5
03996 14F4 39                                     rts
03997               * ---------------------------------------------------------------------------
03998               
03999         14F5                loc_14F5        EQU     *
04000 14F5 7C 0089                                inc     $89
04001 14F8 DE 8A                                  ldx     $8A
04002 14FA 20 D4                                  bra     loc_14D0
04003               * ---------------------------------------------------------------------------
04004               
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 70
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

04005         14FC                loc_14FC        EQU     *
04006 14FC 7C 0086                                inc     $86
04007 14FF 39                                     rts
04008               * End of function sub_14B7
04009               
04010               
04011               * =============== S U B R O U TI N E =======================================
04012               
04013               
04014         1500                sub_1500        EQU     *
04015               
04016               * FUNCTION CHUNK AT 2F0D SIZE 00000025 BYTES
04017               * FUNCTION CHUNK AT 2F77 SIZE 00000016 BYTES
04018               
04019 1500 CE 4000                                ldx     #$4000
04020 1503 D6 8E                                  ldab    $8E
04021 1505 96 8F                                  ldaa    $8F
04022 1507 BD 1403                                jsr     sub_1403
04023 150A D6 90                                  ldab    $90
04024 150C 96 91                                  ldaa    $91
04025 150E E7 00                                  stab    0,x
04026 1510 A7 01                                  staa    1,x
04027 1512 D7 8C                                  stab    $8C
04028 1514 97 8D                                  staa    $8D
04029 1516 CE 4000                                ldx     #$4000
04030 1519 BD 1403                                jsr     sub_1403
04031 151C 6F 00                                  clr     0,x
04032 151E 6F 01                                  clr     1,x
04033 1520 96 67                                  ldaa    $67
04034 1522 A7 02                                  staa    2,x
04035 1524 86 01                                  ldaa    #1
04036 1526 97 89                                  staa    $89
04037 1528 DE 8C                                  ldx     $8C
04038 152A 08                                     inx
04039 152B 08                                     inx
04040               
04041         152C                loc_152C        EQU     *
04042 152C 08                                     inx
04043 152D DF 8A                                  stx     $8A
04044 152F 96 89                                  ldaa    $89
04045 1531 91 67                                  cmpa    $67
04046 1533 2C 1D                                  bge     loc_1552
04047 1535 CE 04D8                                ldx     #$4D8
04048 1538 96 89                                  ldaa    $89
04049 153A BD 0C78                                jsr     AddBAtoX
04050 153D A6 00                                  ldaa    0,x
04051 153F 36                                     psha
04052 1540 CE 4000                                ldx     #$4000
04053 1543 D6 8A                                  ldab    $8A
04054 1545 96 8B                                  ldaa    $8B
04055 1547 BD 1403                                jsr     sub_1403
04056 154A 32                                     pula
04057 154B A7 00                                  staa    0,x
04058 154D 7E 2F0D                                jmp     loc_2F0D
04059               * ---------------------------------------------------------------------------
04060 1550 DE 8A                                  ldx     $8A
04061               
04062         1552                loc_1552        EQU     *
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 71
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

04063 1552 7E 2F15                                jmp     loc_2F15
04064               * End of function sub_1500
04065               
04066               
04067               * =============== S U B R O U TI N E =======================================
04068               
04069               
04070         1555                sub_1555        EQU     *
04071 1555 CE 4002                                ldx     #$4002
04072 1558 D6 94                                  ldab    $94
04073 155A 96 95                                  ldaa    $95
04074 155C BD 1403                                jsr     sub_1403
04075 155F A6 00                                  ldaa    0,x
04076 1561 91 97                                  cmpa    $97
04077 1563 26 01                                  bne     loc_1566
04078 1565 39                                     rts
04079               * ---------------------------------------------------------------------------
04080               
04081         1566                loc_1566        EQU     *
04082 1566 CE 4000                                ldx     #$4000
04083 1569 D6 90                                  ldab    $90
04084 156B 96 91                                  ldaa    $91
04085 156D BD 1403                                jsr     sub_1403
04086 1570 D6 94                                  ldab    $94
04087 1572 96 95                                  ldaa    $95
04088 1574 E7 00                                  stab    0,x
04089 1576 A7 01                                  staa    1,x
04090 1578 D6 90                                  ldab    $90
04091 157A 96 91                                  ldaa    $91
04092 157C D7 94                                  stab    $94
04093 157E 97 95                                  staa    $95
04094 1580 8B 37                                  adda    #$37             * '7'
04095 1582 C9 00                                  adcb    #0
04096 1584 D7 90                                  stab    $90
04097 1586 BD 1615                                jsr     sub_1615
04098               
04099         1589                loc_1589        EQU     *
04100 1589 81 34                                  cmpa    #$34             * '4'
04101 158B 2D 01                                  blt     loc_158E
04102 158D 39                                     rts
04103               * ---------------------------------------------------------------------------
04104               
04105         158E                loc_158E        EQU     *
04106 158E 36                                     psha
04107 158F 5F                                     clrb
04108 1590 9B 95                                  adda    $95
04109 1592 D9 94                                  adcb    $94
04110 1594 CE 4003                                ldx     #$4003
04111 1597 BD 1403                                jsr     sub_1403
04112 159A 6F 00                                  clr     0,x
04113 159C 01                                     nop
04114 159D 32                                     pula
04115 159E 01                                     nop
04116 159F 4C                                     inca
04117 15A0 20 E7                                  bra     loc_1589
04118               * End of function sub_1555
04119               
04120               
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 72
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

04121               * =============== S U B R O U TI N E =======================================
04122               
04123               
04124         15A2                sub_15A2        EQU     *
04125 15A2 7C 0097                                inc     $97
04126 15A5 96 97                                  ldaa    $97
04127 15A7 81 08                                  cmpa    #8
04128 15A9 23 01                                  bls     locret_15AC
04129 15AB 3F                                     swi
04130               
04131         15AC                locret_15AC     EQU     *
04132 15AC 39                                     rts
04133               * End of function sub_15A2
04134               
04135               
04136               * =============== S U B R O U TI N E =======================================
04137               
04138               
04139         15AD                sub_15AD        EQU     *
04140 15AD CE 4002                                ldx     #$4002
04141 15B0 D6 94                                  ldab    $94
04142 15B2 96 95                                  ldaa    $95
04143 15B4 BD 1403                                jsr     sub_1403
04144 15B7 A6 00                                  ldaa    0,x
04145 15B9 91 97                                  cmpa    $97
04146 15BB 26 12                                  bne     loc_15CF
04147 15BD DE 94                                  ldx     $94
04148 15BF DF 90                                  stx     $90
04149 15C1 BD 1E04                                jsr     sub_1E04
04150 15C4 D6 94                                  ldab    $94
04151 15C6 96 95                                  ldaa    $95
04152 15C8 BD 1403                                jsr     sub_1403
04153 15CB EE 00                                  ldx     0,x
04154 15CD DF 94                                  stx     $94
04155               
04156         15CF                loc_15CF        EQU     *
04157 15CF 7A 0097                                dec     $97
04158 15D2 96 97                                  ldaa    $97
04159 15D4 2C 01                                  bge     locret_15D7
04160 15D6 3F                                     swi
04161               
04162         15D7                locret_15D7     EQU     *
04163 15D7 39                                     rts
04164               * End of function sub_15AD
04165               
04166               * ---------------------------------------------------------------------------
04167 15D8    33 5D 27 04 5A 7E                   fcb     $33,$5D,$27,4,$5A,$7E,$14,$16,$8D,3,$7E
04168 15E3    14 3E                               fcb     $14,$3E
04169               
04170               * =============== S U B R O U TI N E =======================================
04171               
04172               
04173         15E5                sub_15E5        EQU     *
04174 15E5 DE 1C                                  ldx     $1C
04175 15E7 BD 2A08                                jsr     sub_2A08
04176 15EA 39                                     rts
04177               * End of function sub_15E5
04178               
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 73
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

04179               * ---------------------------------------------------------------------------
04180 15EB    81 18 26 04 33 7E                   fcb     $81,$18,$26,4,$33,$7E,$14,$3B,$BD,$14,8
04181 15F6    7E 14 2F                            fcb     $7E,$14,$2F
04182               
04183               * =============== S U B R O U TI N E =======================================
04184               
04185               
04186         15F9                sub_15F9        EQU     *
04187 15F9 7A 0082                                dec     $82
04188 15FC BD 12F9                                jsr     sub_12F9
04189 15FF 39                                     rts
04190               * End of function sub_15F9
04191               
04192               * ---------------------------------------------------------------------------
04193 1600    81 0D 26 01 39 5C                   fcb     $81,$D,$26,1,$39,$5C,$7E,$14,$16
04194               
04195               * =============== S U B R O U TI N E =======================================
04196               
04197               
04198         1609                sub_1609        EQU     *
04199 1609 8B 03                                  adda    #3
04200 160B C9 00                                  adcb    #0
04201 160D D7 8E                                  stab    $8E
04202 160F 97 8F                                  staa    $8F
04203 1611 CE 4000                                ldx     #$4000
04204 1614 39                                     rts
04205               * End of function sub_1609
04206               
04207               
04208               * =============== S U B R O U TI N E =======================================
04209               
04210               
04211         1615                sub_1615        EQU     *
04212 1615 97 91                                  staa    $91
04213 1617 96 97                                  ldaa    $97
04214 1619 A7 02                                  staa    2,x
04215 161B 4F                                     clra
04216 161C 39                                     rts
04217               * End of function sub_1615
04218               
04219               
04220               * =============== S U B R O U TI N E =======================================
04221               
04222               
04223         161D                sub_161D        EQU     *
04224 161D DE 8A                                  ldx     $8A
04225 161F DF A8                                  stx     $A8
04226 1621 CE 0001                                ldx     #1
04227 1624 39                                     rts
04228               * End of function sub_161D
04229               
04230               * ---------------------------------------------------------------------------
04231               * START OF FUNCTION CHUNK FOR sub_EC1
04232               
04233         1625                loc_1625        EQU     *
04234 1625 97 5B                                  staa    $5B
04235 1627 96 83                                  ldaa    $83
04236 1629 CE 3E00                                ldx     #$3E00
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 74
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

04237 162C BD 0C78                                jsr     AddBAtoX
04238 162F 86 53                                  ldaa    #$53             * 'S'
04239 1631 A7 00                                  staa    0,x
04240 1633 7E 0CF2                                jmp     sub_CF2
04241               * END OF FUNCTION CHUNK FOR sub_EC1
04242               
04243               * =============== S U B R O U TI N E =======================================
04244               
04245               
04246         1636                sub_1636        EQU     *
04247 1636 C6 50                                  ldab    #$50             * 'P'
04248 1638 86 20                                  ldaa    #$20             * ' '
04249 163A CE 3E00                                ldx     #$3E00
04250               
04251         163D                loc_163D        EQU     *
04252 163D A7 00                                  staa    0,x
04253 163F 08                                     inx
04254 1640 5A                                     decb
04255 1641 26 FA                                  bne     loc_163D
04256 1643 39                                     rts
04257               * End of function sub_1636
04258               
04259               
04260               * =============== S U B R O U TI N E =======================================
04261               
04262               
04263         1644                sub_1644        EQU     *
04264               
04265               * FUNCTION CHUNK AT 1415 SIZE 0000002C BYTES
04266               * FUNCTION CHUNK AT 1B33 SIZE 0000003E BYTES
04267               * FUNCTION CHUNK AT 1BF2 SIZE 00000009 BYTES
04268               * FUNCTION CHUNK AT 2CB8 SIZE 00000048 BYTES
04269               * FUNCTION CHUNK AT 2EA7 SIZE 0000000B BYTES
04270               
04271 1644 BD 164D                                jsr     sub_164D
04272 1647 BD 1636                                jsr     sub_1636
04273 164A 7E 1BF2                                jmp     loc_1BF2
04274               * End of function sub_1644
04275               
04276               
04277               * =============== S U B R O U TI N E =======================================
04278               
04279               * Attributes: thunk
04280               
04281         164D                sub_164D        EQU     *
04282 164D 7E 1C3C                                jmp     sub_1C3C
04283               * End of function sub_164D
04284               
04285               
04286               * =============== S U B R O U TI N E =======================================
04287               
04288               
04289         1650                sub_1650        EQU     *
04290               
04291               * FUNCTION CHUNK AT 0F25 SIZE 00000006 BYTES
04292               * FUNCTION CHUNK AT 1DB8 SIZE 00000017 BYTES
04293               
04294 1650 C6 50                                  ldab    #$50             * 'P'
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 75
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

04295 1652 86 20                                  ldaa    #$20             * ' '
04296 1654 CE 3E4F                                ldx     #$3E4F
04297               
04298         1657                loc_1657        EQU     *
04299 1657 A1 00                                  cmpa    0,x
04300 1659 26 05                                  bne     loc_1660
04301 165B 09                                     dex
04302 165C 5A                                     decb
04303 165D 26 F8                                  bne     loc_1657
04304 165F 39                                     rts
04305               * ---------------------------------------------------------------------------
04306               
04307         1660                loc_1660        EQU     *
04308 1660 01                                     nop
04309 1661 7E 1DB8                                jmp     loc_1DB8
04310               * ---------------------------------------------------------------------------
04311               
04312         1664                loc_1664        EQU     *
04313 1664 DF 63                                  stx     $63
04314               
04315         1666                loc_1666        EQU     *
04316 1666 DE 63                                  ldx     $63
04317 1668 A6 00                                  ldaa    0,x
04318 166A 08                                     inx
04319 166B DF 63                                  stx     $63
04320 166D BD 1C00                                jsr     sub_1C00
04321 1670 33                                     pulb
04322 1671 5A                                     decb
04323 1672 37                                     pshb
04324 1673 26 F1                                  bne     loc_1666
04325 1675 33                                     pulb
04326 1676 7E 1DC8                                jmp     loc_1DC8
04327               * End of function sub_1650
04328               
04329               * ---------------------------------------------------------------------------
04330 1679 01                                     nop
04331               * START OF FUNCTION CHUNK FOR sub_18FA
04332               
04333         167A                loc_167A        EQU     *
04334 167A 26 04                                  bne     loc_1680
04335 167C BD 1200                                jsr     sub_1200
04336 167F 39                                     rts
04337               * ---------------------------------------------------------------------------
04338               
04339         1680                loc_1680        EQU     *
04340 1680 7E 190C                                jmp     loc_190C
04341               * END OF FUNCTION CHUNK FOR sub_18FA
04342               * ---------------------------------------------------------------------------
04343               * START OF FUNCTION CHUNK FOR sub_1846
04344               
04345         1683                loc_1683        EQU     *
04346 1683 81 89                                  cmpa    #$89             * '?'
04347 1685 26 06                                  bne     loc_168D
04348 1687 BD 19EC                                jsr     sub_19EC
04349 168A 7E 187C                                jmp     loc_187C
04350               * ---------------------------------------------------------------------------
04351               
04352         168D                loc_168D        EQU     *
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 76
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

04353 168D 7E 1737                                jmp     loc_1737
04354               * END OF FUNCTION CHUNK FOR sub_1846
04355               * ---------------------------------------------------------------------------
04356 1690 BD 0EC9                                jsr     sub_EC9
04357 1693 7E 1789                                jmp     loc_1789
04358               * ---------------------------------------------------------------------------
04359               * START OF FUNCTION CHUNK FOR sub_192C
04360               
04361         1696                loc_1696        EQU     *
04362 1696 BD 15AD                                jsr     sub_15AD
04363 1699 BD 1200                                jsr     sub_1200
04364 169C 39                                     rts
04365               * END OF FUNCTION CHUNK FOR sub_192C
04366               
04367               * =============== S U B R O U TI N E =======================================
04368               
04369               
04370         169D                sub_169D        EQU     *
04371 169D BD 1200                                jsr     sub_1200
04372 16A0 BD 0E6A                                jsr     sub_E6A
04373 16A3 39                                     rts
04374               * End of function sub_169D
04375               
04376               * ---------------------------------------------------------------------------
04377               * START OF FUNCTION CHUNK FOR sub_26D7
04378               
04379         16A4                loc_16A4        EQU     *
04380 16A4 7F 005B                                clr     $5B
04381 16A7 96 5A                                  ldaa    $5A
04382 16A9 81 3B                                  cmpa    #$3B             * ';'
04383 16AB 26 03                                  bne     loc_16B0
04384 16AD 7E 1842                                jmp     loc_1842
04385               * ---------------------------------------------------------------------------
04386               
04387         16B0                loc_16B0        EQU     *
04388 16B0 7E 178F                                jmp     loc_178F
04389               * END OF FUNCTION CHUNK FOR sub_26D7
04390               
04391               * =============== S U B R O U TI N E =======================================
04392               
04393               
04394         16B3                sub_16B3        EQU     *
04395 16B3 BD 124F                                jsr     sub_124F
04396 16B6 96 85                                  ldaa    $85
04397 16B8 81 3A                                  cmpa    #$3A             * ':'
04398 16BA 26 05                                  bne     loc_16C1
04399 16BC 86 F6                                  ldaa    #$F6             * '?'
04400 16BE 97 5A                                  staa    $5A
04401 16C0 39                                     rts
04402               * ---------------------------------------------------------------------------
04403               
04404         16C1                loc_16C1        EQU     *
04405 16C1 7A 0082                                dec     $82
04406 16C4 86 F2                                  ldaa    #$F2             * '?'
04407 16C6 97 5A                                  staa    $5A
04408 16C8 BD 16D3                                jsr     sub_16D3
04409 16CB 7C 00A6                                inc     $A6
04410 16CE 86 55                                  ldaa    #$55             * 'U'
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 77
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

04411 16D0 A7 00                                  staa    0,x
04412 16D2 39                                     rts
04413               * End of function sub_16B3
04414               
04415               
04416               * =============== S U B R O U TI N E =======================================
04417               
04418               
04419         16D3                sub_16D3        EQU     *
04420 16D3 96 83                                  ldaa    $83
04421 16D5 CE 3E00                                ldx     #$3E00
04422 16D8 BD 0C78                                jsr     AddBAtoX
04423 16DB 39                                     rts
04424               * End of function sub_16D3
04425               
04426               * ---------------------------------------------------------------------------
04427               * START OF FUNCTION CHUNK FOR sub_1A10
04428               
04429         16DC                loc_16DC        EQU     *
04430 16DC 27 03                                  beq     loc_16E1
04431 16DE 7E 0EC1                                jmp     sub_EC1
04432               * ---------------------------------------------------------------------------
04433               
04434         16E1                loc_16E1        EQU     *
04435 16E1 BD 16D3                                jsr     sub_16D3
04436 16E4 86 55                                  ldaa    #$55             * 'U'
04437 16E6 A1 00                                  cmpa    0,x
04438 16E8 27 09                                  beq     loc_16F3
04439 16EA 86 44                                  ldaa    #$44             * 'D'
04440 16EC A7 00                                  staa    0,x
04441 16EE 86 01                                  ldaa    #1
04442 16F0 7E 0CF0                                jmp     loc_CF0
04443               * ---------------------------------------------------------------------------
04444               
04445         16F3                loc_16F3        EQU     *
04446 16F3 86 20                                  ldaa    #$20             * ' '
04447 16F5 A7 00                                  staa    0,x
04448 16F7 7A 00A6                                dec     $A6
04449 16FA 7E 1A24                                jmp     loc_1A24
04450               * END OF FUNCTION CHUNK FOR sub_1A10
04451               * ---------------------------------------------------------------------------
04452               * START OF FUNCTION CHUNK FOR sub_2903
04453               
04454         16FD                loc_16FD        EQU     *
04455 16FD BD 1555                                jsr     sub_1555
04456 1700 86 01                                  ldaa    #1
04457 1702 97 96                                  staa    $96
04458 1704 BD 1450                                jsr     sub_1450
04459 1707 96 86                                  ldaa    $86
04460 1709 27 13                                  beq     loc_171E
04461 170B 96 5A                                  ldaa    $5A
04462 170D 81 F8                                  cmpa    #$F8             * '?'
04463 170F 27 03                                  beq     loc_1714
04464 1711 7E 19DE                                jmp     loc_19DE
04465               * ---------------------------------------------------------------------------
04466               
04467         1714                loc_1714        EQU     *
04468 1714 BD 16D3                                jsr     sub_16D3
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 78
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

04469 1717 86 44                                  ldaa    #$44             * 'D'
04470 1719 A7 00                                  staa    0,x
04471 171B 7E 19D5                                jmp     loc_19D5
04472               * ---------------------------------------------------------------------------
04473               
04474         171E                loc_171E        EQU     *
04475 171E BD 1500                                jsr     sub_1500
04476 1721 CE 4000                                ldx     #$4000
04477 1724 7E 19BB                                jmp     loc_19BB
04478               * END OF FUNCTION CHUNK FOR sub_2903
04479               * ---------------------------------------------------------------------------
04480               
04481         1727                loc_1727        EQU     *
04482 1727 26 04                                  bne     loc_172D
04483 1729 BD 1200                                jsr     sub_1200
04484 172C 39                                     rts
04485               * ---------------------------------------------------------------------------
04486               
04487         172D                loc_172D        EQU     *
04488 172D 7E 19DE                                jmp     loc_19DE
04489               * ---------------------------------------------------------------------------
04490               * START OF FUNCTION CHUNK FOR sub_19EC
04491               
04492         1730                loc_1730        EQU     *
04493 1730 BD 0C43                                jsr     sub_C43
04494 1733 BD 1200                                jsr     sub_1200
04495 1736 39                                     rts
04496               * END OF FUNCTION CHUNK FOR sub_19EC
04497               * ---------------------------------------------------------------------------
04498               * START OF FUNCTION CHUNK FOR sub_1846
04499               
04500         1737                loc_1737        EQU     *
04501 1737 81 F8                                  cmpa    #$F8             * '?'
04502 1739 26 06                                  bne     loc_1741
04503 173B BD 174E                                jsr     sub_174E
04504 173E 7E 187C                                jmp     loc_187C
04505               * ---------------------------------------------------------------------------
04506               
04507         1741                loc_1741        EQU     *
04508 1741 81 F0                                  cmpa    #$F0             * '?'
04509 1743 26 06                                  bne     loc_174B
04510 1745 BD 1760                                jsr     sub_1760
04511 1748 7E 1889                                jmp     locret_1889
04512               * ---------------------------------------------------------------------------
04513               
04514         174B                loc_174B        EQU     *
04515 174B 7E 1CBB                                jmp     loc_1CBB
04516               * END OF FUNCTION CHUNK FOR sub_1846
04517               
04518               * =============== S U B R O U TI N E =======================================
04519               
04520               
04521         174E                sub_174E        EQU     *
04522 174E BD 124F                                jsr     sub_124F
04523 1751 96 85                                  ldaa    $85
04524 1753 81 3A                                  cmpa    #$3A             * ':'
04525 1755 26 03                                  bne     loc_175A
04526 1757 7E 199C                                jmp     sub_199C
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 79
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

04527               * ---------------------------------------------------------------------------
04528               
04529         175A                loc_175A        EQU     *
04530 175A 7A 0082                                dec     $82
04531 175D 7E 0EC1                                jmp     sub_EC1
04532               * End of function sub_174E
04533               
04534               
04535               * =============== S U B R O U TI N E =======================================
04536               
04537               
04538         1760                sub_1760        EQU     *
04539               
04540               * FUNCTION CHUNK AT 2909 SIZE 00000005 BYTES
04541               
04542 1760 BD 124F                                jsr     sub_124F
04543 1763 96 85                                  ldaa    $85
04544 1765 81 3A                                  cmpa    #$3A             * ':'
04545 1767 27 06                                  beq     loc_176F
04546 1769 7A 0082                                dec     $82
04547 176C 7E 0EC1                                jmp     sub_EC1
04548               * ---------------------------------------------------------------------------
04549               
04550         176F                loc_176F        EQU     *
04551 176F D6 5C                                  ldab    $5C
04552 1771 96 5D                                  ldaa    $5D
04553 1773 36                                     psha
04554 1774 37                                     pshb
04555 1775 BD 1200                                jsr     sub_1200
04556               
04557         1778                loc_1778        EQU     *
04558 1778 30                                     tsx
04559 1779 EE 00                                  ldx     0,x
04560 177B 31                                     ins
04561 177C 31                                     ins
04562 177D 96 5A                                  ldaa    $5A
04563 177F 81 8A                                  cmpa    #$8A             * '?'
04564 1781 27 03                                  beq     loc_1786
04565 1783 7E 2909                                jmp     loc_2909
04566               * ---------------------------------------------------------------------------
04567               
04568         1786                loc_1786        EQU     *
04569 1786 DF A0                                  stx     $A0
04570 1788 39                                     rts
04571               * End of function sub_1760
04572               
04573               * ---------------------------------------------------------------------------
04574               
04575         1789                loc_1789        EQU     *
04576 1789 8E 01FF                                lds     #$1FF
04577 178C 7E 1800                                jmp     loc_1800
04578               * ---------------------------------------------------------------------------
04579               * START OF FUNCTION CHUNK FOR sub_26D7
04580               
04581         178F                loc_178F        EQU     *
04582 178F 96 5A                                  ldaa    $5A
04583 1791 81 80                                  cmpa    #$80             * '?'
04584 1793 27 03                                  beq     loc_1798
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 80
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

04585 1795 7E 1834                                jmp     loc_1834
04586               * ---------------------------------------------------------------------------
04587               
04588         1798                loc_1798        EQU     *
04589 1798 7E 4460                                jmp     byte_4460
04590               * END OF FUNCTION CHUNK FOR sub_26D7
04591               * ---------------------------------------------------------------------------
04592               * START OF FUNCTION CHUNK FOR sub_19EC
04593               
04594         179B                loc_179B        EQU     *
04595 179B 96 5A                                  ldaa    $5A
04596 179D 81 F8                                  cmpa    #$F8             * '?'
04597 179F 26 03                                  bne     loc_17A4
04598 17A1 7E 19F9                                jmp     loc_19F9
04599               * ---------------------------------------------------------------------------
04600               
04601         17A4                loc_17A4        EQU     *
04602 17A4 81 F2                                  cmpa    #$F2             * '?'
04603 17A6 26 03                                  bne     loc_17AB
04604 17A8 7E 17F1                                jmp     loc_17F1
04605               * ---------------------------------------------------------------------------
04606               
04607         17AB                loc_17AB        EQU     *
04608 17AB 81 F0                                  cmpa    #$F0             * '?'
04609 17AD 26 03                                  bne     loc_17B2
04610 17AF 7E 19F9                                jmp     loc_19F9
04611               * ---------------------------------------------------------------------------
04612               
04613         17B2                loc_17B2        EQU     *
04614 17B2 7E 19F5                                jmp     loc_19F5
04615               * END OF FUNCTION CHUNK FOR sub_19EC
04616               
04617               * =============== S U B R O U TI N E =======================================
04618               
04619               
04620         17B5                sub_17B5        EQU     *
04621               
04622               * FUNCTION CHUNK AT 1389 SIZE 0000001C BYTES
04623               
04624 17B5 7F 0087                                clr     $87
04625 17B8 96 85                                  ldaa    $85
04626 17BA 81 24                                  cmpa    #$24             * '$'
04627 17BC 27 03                                  beq     loc_17C1
04628 17BE 7E 1389                                jmp     loc_1389
04629               * ---------------------------------------------------------------------------
04630               
04631         17C1                loc_17C1        EQU     *
04632 17C1 BD 124F                                jsr     sub_124F
04633 17C4 7E 17B5                                jmp     sub_17B5
04634               * End of function sub_17B5
04635               
04636               * ---------------------------------------------------------------------------
04637               * START OF FUNCTION CHUNK FOR sub_1A10
04638               
04639         17C7                loc_17C7        EQU     *
04640 17C7 97 A1                                  staa    $A1
04641               
04642         17C9                loc_17C9        EQU     *
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 81
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

04643 17C9 96 5A                                  ldaa    $5A
04644 17CB 81 2C                                  cmpa    #$2C             * ','
04645 17CD 27 01                                  beq     loc_17D0
04646 17CF 39                                     rts
04647               * ---------------------------------------------------------------------------
04648               
04649         17D0                loc_17D0        EQU     *
04650 17D0 7E 1A10                                jmp     sub_1A10
04651               * END OF FUNCTION CHUNK FOR sub_1A10
04652               
04653               * =============== S U B R O U TI N E =======================================
04654               
04655               
04656         17D3                sub_17D3        EQU     *
04657               
04658               * FUNCTION CHUNK AT 0F10 SIZE 00000015 BYTES
04659               
04660 17D3 BD 126A                                jsr     sub_126A
04661 17D6 96 85                                  ldaa    $85
04662 17D8 81 20                                  cmpa    #$20             * ' '
04663 17DA 27 F7                                  beq     sub_17D3
04664 17DC 81 2F                                  cmpa    #$2F             * '/'
04665 17DE 27 01                                  beq     loc_17E1
04666 17E0 39                                     rts
04667               * ---------------------------------------------------------------------------
04668               
04669         17E1                loc_17E1        EQU     *
04670 17E1 BD 124F                                jsr     sub_124F
04671 17E4 96 85                                  ldaa    $85
04672 17E6 81 2A                                  cmpa    #$2A             * '*'
04673 17E8 27 04                                  beq     loc_17EE
04674 17EA 7A 0082                                dec     $82
04675 17ED 39                                     rts
04676               * ---------------------------------------------------------------------------
04677               
04678         17EE                loc_17EE        EQU     *
04679 17EE 7E 0F10                                jmp     loc_F10
04680               * End of function sub_17D3
04681               
04682               * ---------------------------------------------------------------------------
04683               * START OF FUNCTION CHUNK FOR sub_19EC
04684               
04685         17F1                loc_17F1        EQU     *
04686 17F1 BD 16D3                                jsr     sub_16D3
04687 17F4 86 55                                  ldaa    #$55             * 'U'
04688 17F6 A1 00                                  cmpa    0,x
04689 17F8 27 03                                  beq     loc_17FD
04690 17FA 7E 0EC1                                jmp     sub_EC1
04691               * ---------------------------------------------------------------------------
04692               
04693         17FD                loc_17FD        EQU     *
04694 17FD 7E 19F9                                jmp     loc_19F9
04695               * END OF FUNCTION CHUNK FOR sub_19EC
04696               * ---------------------------------------------------------------------------
04697               
04698         1800                loc_1800        EQU     *
04699 1800 BD 1200                                jsr     sub_1200
04700               * START OF FUNCTION CHUNK FOR start_0
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 82
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

04701               
04702         1803                loc_1803        EQU     *
04703 1803 96 5A                                  ldaa    $5A
04704 1805 81 80                                  cmpa    #$80             * '?'
04705 1807 27 04                                  beq     loc_180D
04706 1809 8D 11                                  bsr     sub_181C
04707 180B 20 F6                                  bra     loc_1803
04708               * END OF FUNCTION CHUNK FOR start_0
04709               * ---------------------------------------------------------------------------
04710               * START OF FUNCTION CHUNK FOR sub_26D7
04711               
04712         180D                loc_180D        EQU     *
04713 180D BD 2EDE                                jsr     sub_2EDE
04714 1810 8E 01FF                                lds     #$1FF
04715 1813 01                                     nop
04716 1814 01                                     nop
04717 1815 BD 1F94                                jsr     sub_1F94
04718 1818 7E 26B0                                jmp     loc_26B0
04719               * END OF FUNCTION CHUNK FOR sub_26D7
04720               * ---------------------------------------------------------------------------
04721 181B 01                                     nop
04722               
04723               * =============== S U B R O U TI N E =======================================
04724               
04725               * Attributes: thunk
04726               
04727         181C                sub_181C        EQU     *
04728 181C 7E 26D7                                jmp     sub_26D7
04729               * End of function sub_181C
04730               
04731               * ---------------------------------------------------------------------------
04732 181F 01                                     nop
04733               * START OF FUNCTION CHUNK FOR sub_26D7
04734               
04735         1820                loc_1820        EQU     *
04736 1820 26 05                                  bne     loc_1827
04737 1822 BD 188A                                jsr     sub_188A
04738 1825 20 03                                  bra     loc_182A
04739               * ---------------------------------------------------------------------------
04740               
04741         1827                loc_1827        EQU     *
04742 1827 BD 1846                                jsr     sub_1846
04743               
04744         182A                loc_182A        EQU     *
04745 182A 7E 21E5                                jmp     loc_21E5
04746               * END OF FUNCTION CHUNK FOR sub_26D7
04747               * ---------------------------------------------------------------------------
04748 182D 17                                     tba
04749               * START OF FUNCTION CHUNK FOR sub_26D7
04750               
04751         182E                loc_182E        EQU     *
04752 182E 7C 00A6                                inc     $A6
04753 1831 7E 16A4                                jmp     loc_16A4
04754               * ---------------------------------------------------------------------------
04755               
04756         1834                loc_1834        EQU     *
04757 1834 86 FF                                  ldaa    #$FF
04758 1836 97 5A                                  staa    $5A
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 83
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

04759 1838 BD 1200                                jsr     sub_1200
04760 183B 96 5A                                  ldaa    $5A
04761 183D 81 80                                  cmpa    #$80             * '?'
04762 183F 26 01                                  bne     loc_1842
04763 1841 39                                     rts
04764               * ---------------------------------------------------------------------------
04765               
04766         1842                loc_1842        EQU     *
04767 1842 BD 1200                                jsr     sub_1200
04768 1845 39                                     rts
04769               * END OF FUNCTION CHUNK FOR sub_26D7
04770               
04771               * =============== S U B R O U TI N E =======================================
04772               
04773               
04774         1846                sub_1846        EQU     *
04775               
04776               * FUNCTION CHUNK AT 1683 SIZE 0000000D BYTES
04777               * FUNCTION CHUNK AT 1737 SIZE 00000017 BYTES
04778               * FUNCTION CHUNK AT 1CBB SIZE 0000000D BYTES
04779               * FUNCTION CHUNK AT 1D95 SIZE 0000000C BYTES
04780               * FUNCTION CHUNK AT 2FBA SIZE 0000000D BYTES
04781               
04782 1846 96 5A                                  ldaa    $5A
04783 1848 81 F2                                  cmpa    #$F2             * '?'
04784 184A 26 05                                  bne     loc_1851
04785 184C BD 0D00                                jsr     sub_D00
04786 184F 20 2B                                  bra     loc_187C
04787               * ---------------------------------------------------------------------------
04788               
04789         1851                loc_1851        EQU     *
04790 1851 81 84                                  cmpa    #$84             * '?'
04791 1853 26 05                                  bne     loc_185A
04792 1855 BD 192C                                jsr     sub_192C
04793 1858 20 22                                  bra     loc_187C
04794               * ---------------------------------------------------------------------------
04795               
04796         185A                loc_185A        EQU     *
04797 185A 81 F6                                  cmpa    #$F6             * '?'
04798 185C 26 05                                  bne     loc_1863
04799 185E BD 199C                                jsr     sub_199C
04800 1861 20 19                                  bra     loc_187C
04801               * ---------------------------------------------------------------------------
04802               
04803         1863                loc_1863        EQU     *
04804 1863 81 88                                  cmpa    #$88             * '?'
04805 1865 26 05                                  bne     loc_186C
04806 1867 BD 1A05                                jsr     sub_1A05
04807 186A 20 10                                  bra     loc_187C
04808               * ---------------------------------------------------------------------------
04809               
04810         186C                loc_186C        EQU     *
04811 186C 81 8A                                  cmpa    #$8A             * '?'
04812 186E 26 05                                  bne     loc_1875
04813 1870 BD 1A10                                jsr     sub_1A10
04814 1873 20 07                                  bra     loc_187C
04815               * ---------------------------------------------------------------------------
04816               
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 84
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

04817         1875                loc_1875        EQU     *
04818 1875 7E 1683                                jmp     loc_1683
04819               * ---------------------------------------------------------------------------
04820               
04821         1878                loc_1878        EQU     *
04822 1878 BD 0EC1                                jsr     sub_EC1
04823 187B 39                                     rts
04824               * ---------------------------------------------------------------------------
04825               
04826         187C                loc_187C        EQU     *
04827 187C 96 5B                                  ldaa    $5B
04828 187E 26 09                                  bne     locret_1889
04829 1880 96 5A                                  ldaa    $5A
04830 1882 81 3B                                  cmpa    #$3B             * ';'
04831 1884 26 F2                                  bne     loc_1878
04832               
04833         1886                loc_1886        EQU     *
04834 1886 BD 1200                                jsr     sub_1200
04835               
04836         1889                locret_1889     EQU     *
04837 1889 39                                     rts
04838               * End of function sub_1846
04839               
04840               
04841               * =============== S U B R O U TI N E =======================================
04842               
04843               
04844         188A                sub_188A        EQU     *
04845               
04846               * FUNCTION CHUNK AT 18E0 SIZE 0000001A BYTES
04847               * FUNCTION CHUNK AT 221F SIZE 00000019 BYTES
04848               
04849 188A BD 1200                                jsr     sub_1200
04850 188D BD 0E6A                                jsr     sub_E6A
04851 1890 96 5B                                  ldaa    $5B
04852 1892 27 01                                  beq     loc_1895
04853 1894 39                                     rts
04854               * ---------------------------------------------------------------------------
04855               
04856         1895                loc_1895        EQU     *
04857 1895 96 5A                                  ldaa    $5A
04858 1897 81 82                                  cmpa    #$82             * '?'
04859 1899 27 04                                  beq     loc_189F
04860 189B BD 0EC1                                jsr     sub_EC1
04861 189E 39                                     rts
04862               * ---------------------------------------------------------------------------
04863               
04864         189F                loc_189F        EQU     *
04865 189F BD 1200                                jsr     sub_1200
04866 18A2 CE 3F00                                ldx     #$3F00
04867 18A5 96 A2                                  ldaa    $A2
04868 18A7 BD 0C78                                jsr     AddBAtoX
04869 18AA D6 98                                  ldab    $98
04870 18AC 96 99                                  ldaa    $99
04871 18AE E7 00                                  stab    0,x
04872 18B0 A7 01                                  staa    1,x
04873 18B2 BD 29E9                                jsr     sub_29E9
04874 18B5 BD 29E9                                jsr     sub_29E9
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 85
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

04875 18B8 DE 54                                  ldx     $54
04876 18BA DF 98                                  stx     $98
04877 18BC BD 1AAD                                jsr     sub_1AAD
04878 18BF 7E 221F                                jmp     loc_221F
04879               * ---------------------------------------------------------------------------
04880               
04881         18C2                loc_18C2        EQU     *
04882 18C2 96 5B                                  ldaa    $5B
04883 18C4 26 21                                  bne     loc_18E7
04884 18C6 96 5A                                  ldaa    $5A
04885 18C8 81 83                                  cmpa    #$83             * '?'
04886 18CA 26 14                                  bne     loc_18E0
04887 18CC DE 98                                  ldx     $98
04888 18CE DF 9A                                  stx     $9A
04889 18D0 DE 54                                  ldx     $54
04890 18D2 DF 98                                  stx     $98
04891 18D4 BD 1AAD                                jsr     sub_1AAD
04892 18D7 BD 1ABB                                jsr     sub_1ABB
04893 18DA BD 1200                                jsr     sub_1200
04894 18DD BD 181C                                jsr     sub_181C
04895               * End of function sub_188A
04896               
04897               * START OF FUNCTION CHUNK FOR sub_188A
04898               
04899         18E0                loc_18E0        EQU     *
04900 18E0 DE 98                                  ldx     $98
04901 18E2 DF 9A                                  stx     $9A
04902 18E4 BD 1ABB                                jsr     sub_1ABB
04903               
04904         18E7                loc_18E7        EQU     *
04905 18E7 7A 00A2                                dec     $A2
04906 18EA 7A 00A2                                dec     $A2
04907 18ED CE 3F00                                ldx     #$3F00
04908 18F0 96 A2                                  ldaa    $A2
04909 18F2 BD 0C78                                jsr     AddBAtoX
04910 18F5 EE 00                                  ldx     0,x
04911 18F7 DF 98                                  stx     $98
04912 18F9 39                                     rts
04913               * END OF FUNCTION CHUNK FOR sub_188A
04914               
04915               * =============== S U B R O U TI N E =======================================
04916               
04917               
04918         18FA                sub_18FA        EQU     *
04919               
04920               * FUNCTION CHUNK AT 167A SIZE 00000009 BYTES
04921               
04922 18FA BD 15A2                                jsr     sub_15A2
04923 18FD CE 0000                                ldx     #0
04924 1900 DF 9C                                  stx     $9C
04925 1902 BD 1200                                jsr     sub_1200
04926 1905 96 5A                                  ldaa    $5A
04927 1907 81 3B                                  cmpa    #$3B             * ';'
04928 1909 7E 167A                                jmp     loc_167A
04929               * ---------------------------------------------------------------------------
04930               
04931         190C                loc_190C        EQU     *
04932 190C 81 85                                  cmpa    #$85             * '?'
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 86
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

04933 190E 27 04                                  beq     loc_1914
04934               
04935         1910                loc_1910        EQU     *
04936 1910 BD 0EC1                                jsr     sub_EC1
04937 1913 39                                     rts
04938               * ---------------------------------------------------------------------------
04939               
04940         1914                loc_1914        EQU     *
04941 1914 DE 54                                  ldx     $54
04942 1916 DF 9C                                  stx     $9C
04943 1918 BD 169D                                jsr     sub_169D
04944 191B 96 5A                                  ldaa    $5A
04945 191D 81 3B                                  cmpa    #$3B             * ';'
04946 191F 26 EF                                  bne     loc_1910
04947 1921 BD 1200                                jsr     sub_1200
04948 1924 DE 54                                  ldx     $54
04949 1926 DF 9E                                  stx     $9E
04950 1928 BD 1AAD                                jsr     sub_1AAD
04951 192B 39                                     rts
04952               * End of function sub_18FA
04953               
04954               
04955               * =============== S U B R O U TI N E =======================================
04956               
04957               
04958         192C                sub_192C        EQU     *
04959               
04960               * FUNCTION CHUNK AT 1696 SIZE 00000007 BYTES
04961               
04962 192C CE 3F80                                ldx     #$3F80
04963 192F 96 A3                                  ldaa    $A3
04964 1931 BD 0C78                                jsr     AddBAtoX
04965 1934 D6 9E                                  ldab    $9E
04966 1936 96 9F                                  ldaa    $9F
04967 1938 E7 00                                  stab    0,x
04968 193A A7 01                                  staa    1,x
04969 193C CE 3FC0                                ldx     #$3FC0
04970 193F 96 A3                                  ldaa    $A3
04971 1941 BD 0C78                                jsr     AddBAtoX
04972 1944 D6 9C                                  ldab    $9C
04973 1946 96 9D                                  ldaa    $9D
04974 1948 E7 00                                  stab    0,x
04975 194A A7 01                                  staa    1,x
04976 194C 7C 00A3                                inc     $A3
04977 194F 7C 00A3                                inc     $A3
04978 1952 BD 18FA                                jsr     sub_18FA
04979 1955 96 5B                                  ldaa    $5B
04980 1957 26 21                                  bne     loc_197A
04981               
04982         1959                loc_1959        EQU     *
04983 1959 96 5A                                  ldaa    $5A
04984 195B 81 86                                  cmpa    #$86             * '?'
04985 195D 27 05                                  beq     loc_1964
04986 195F BD 181C                                jsr     sub_181C
04987 1962 20 F5                                  bra     loc_1959
04988               * ---------------------------------------------------------------------------
04989               
04990         1964                loc_1964        EQU     *
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 87
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

04991 1964 DE 9C                                  ldx     $9C
04992 1966 27 12                                  beq     loc_197A
04993 1968 86 7E                                  ldaa    #$7E             * '~'
04994 196A 97 70                                  staa    $70
04995 196C DE 9C                                  ldx     $9C
04996 196E DF 71                                  stx     $71
04997 1970 BD 0C43                                jsr     sub_C43
04998 1973 DE 9E                                  ldx     $9E
04999 1975 DF 9A                                  stx     $9A
05000 1977 BD 1ABB                                jsr     sub_1ABB
05001               
05002         197A                loc_197A        EQU     *
05003 197A 7A 00A3                                dec     $A3
05004 197D 7A 00A3                                dec     $A3
05005 1980 CE 3F80                                ldx     #$3F80
05006 1983 96 A3                                  ldaa    $A3
05007 1985 BD 0C78                                jsr     AddBAtoX
05008 1988 EE 00                                  ldx     0,x
05009 198A DF 9E                                  stx     $9E
05010 198C CE 3FC0                                ldx     #$3FC0
05011 198F 96 A3                                  ldaa    $A3
05012 1991 BD 0C78                                jsr     AddBAtoX
05013 1994 EE 00                                  ldx     0,x
05014 1996 DF 9C                                  stx     $9C
05015 1998 7E 1696                                jmp     loc_1696
05016               * End of function sub_192C
05017               
05018               * ---------------------------------------------------------------------------
05019 199B 39                                     rts
05020               
05021               * =============== S U B R O U TI N E =======================================
05022               
05023               
05024         199C                sub_199C        EQU     *
05025 199C BD 28CD                                jsr     sub_28CD
05026 199F 01                                     nop
05027 19A0 27 01                                  beq     loc_19A3
05028 19A2 39                                     rts
05029               * ---------------------------------------------------------------------------
05030               
05031         19A3                loc_19A3        EQU     *
05032 19A3 BD 15A2                                jsr     sub_15A2
05033               
05034         19A6                loc_19A6        EQU     *
05035 19A6 96 5A                                  ldaa    $5A
05036 19A8 81 86                                  cmpa    #$86             * '?'
05037 19AA 27 05                                  beq     loc_19B1
05038 19AC BD 181C                                jsr     sub_181C
05039 19AF 20 F5                                  bra     loc_19A6
05040               * ---------------------------------------------------------------------------
05041               
05042         19B1                loc_19B1        EQU     *
05043 19B1 BD 1A05                                jsr     sub_1A05
05044 19B4 BD 28FD                                jsr     sub_28FD
05045 19B7 39                                     rts
05046               * End of function sub_199C
05047               
05048               
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 88
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

05049               * =============== S U B R O U TI N E =======================================
05050               
05051               * Attributes: thunk
05052               
05053         19B8                sub_19B8        EQU     *
05054 19B8 7E 2903                                jmp     sub_2903
05055               * End of function sub_19B8
05056               
05057               * ---------------------------------------------------------------------------
05058               * START OF FUNCTION CHUNK FOR sub_2903
05059               
05060         19BB                loc_19BB        EQU     *
05061 19BB D6 8A                                  ldab    $8A
05062 19BD 96 8B                                  ldaa    $8B
05063 19BF BD 1403                                jsr     sub_1403
05064 19C2 86 F8                                  ldaa    #$F8             * '?'
05065 19C4 A7 00                                  staa    0,x
05066 19C6 D6 54                                  ldab    $54
05067 19C8 96 55                                  ldaa    $55
05068 19CA E7 01                                  stab    1,x
05069 19CC A7 02                                  staa    2,x
05070 19CE DE 8A                                  ldx     $8A
05071 19D0 08                                     inx
05072 19D1 08                                     inx
05073 19D2 08                                     inx
05074 19D3 DF 90                                  stx     $90
05075               
05076         19D5                loc_19D5        EQU     *
05077 19D5 BD 1200                                jsr     sub_1200
05078 19D8 96 5A                                  ldaa    $5A
05079 19DA 81 87                                  cmpa    #$87             * '?'
05080 19DC 27 04                                  beq     loc_19E2
05081               
05082         19DE                loc_19DE        EQU     *
05083 19DE BD 0EC1                                jsr     sub_EC1
05084 19E1 39                                     rts
05085               * ---------------------------------------------------------------------------
05086               
05087         19E2                loc_19E2        EQU     *
05088 19E2 BD 28EF                                jsr     sub_28EF
05089 19E5 96 5A                                  ldaa    $5A
05090 19E7 81 3B                                  cmpa    #$3B             * ';'
05091 19E9 7E 1727                                jmp     loc_1727
05092               * END OF FUNCTION CHUNK FOR sub_2903
05093               
05094               * =============== S U B R O U TI N E =======================================
05095               
05096               
05097         19EC                sub_19EC        EQU     *
05098               
05099               * FUNCTION CHUNK AT 1730 SIZE 00000007 BYTES
05100               * FUNCTION CHUNK AT 179B SIZE 0000001A BYTES
05101               * FUNCTION CHUNK AT 17F1 SIZE 0000000F BYTES
05102               * FUNCTION CHUNK AT 19F5 SIZE 0000000F BYTES
05103               
05104 19EC BD 1200                                jsr     sub_1200
05105 19EF 7E 179B                                jmp     loc_179B
05106               * End of function sub_19EC
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 89
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

05107               
05108               * ---------------------------------------------------------------------------
05109 19F2 F8 2704                                eorb    byte_2704
05110               * START OF FUNCTION CHUNK FOR sub_19EC
05111               
05112         19F5                loc_19F5        EQU     *
05113 19F5 BD 0EC1                                jsr     sub_EC1
05114 19F8 39                                     rts
05115               * ---------------------------------------------------------------------------
05116               
05117         19F9                loc_19F9        EQU     *
05118 19F9 86 BD                                  ldaa    #$BD             * '?'
05119 19FB 97 70                                  staa    $70
05120 19FD DE 5C                                  ldx     $5C
05121 19FF DF 71                                  stx     $71
05122 1A01 7E 1730                                jmp     loc_1730
05123               * END OF FUNCTION CHUNK FOR sub_19EC
05124               * ---------------------------------------------------------------------------
05125 1A04 39                                     rts
05126               
05127               * =============== S U B R O U TI N E =======================================
05128               
05129               
05130         1A05                sub_1A05        EQU     *
05131 1A05 BD 1200                                jsr     sub_1200
05132               * End of function sub_1A05
05133               
05134               
05135               * =============== S U B R O U TI N E =======================================
05136               
05137               
05138         1A08                sub_1A08        EQU     *
05139 1A08 86 39                                  ldaa    #$39             * '9'
05140 1A0A 97 70                                  staa    $70
05141 1A0C BD 0C3B                                jsr     sub_C3B
05142 1A0F 39                                     rts
05143               * End of function sub_1A08
05144               
05145               
05146               * =============== S U B R O U TI N E =======================================
05147               
05148               
05149         1A10                sub_1A10        EQU     *
05150               
05151               * FUNCTION CHUNK AT 0CF0 SIZE 00000002 BYTES
05152               * FUNCTION CHUNK AT 16DC SIZE 00000021 BYTES
05153               * FUNCTION CHUNK AT 17C7 SIZE 0000000C BYTES
05154               * FUNCTION CHUNK AT 1A24 SIZE 00000016 BYTES
05155               * FUNCTION CHUNK AT 1A3C SIZE 00000071 BYTES
05156               * FUNCTION CHUNK AT 2040 SIZE 00000076 BYTES
05157               * FUNCTION CHUNK AT 20B7 SIZE 0000001C BYTES
05158               * FUNCTION CHUNK AT 20D4 SIZE 00000081 BYTES
05159               * FUNCTION CHUNK AT 2162 SIZE 00000010 BYTES
05160               * FUNCTION CHUNK AT 2FAF SIZE 0000000B BYTES
05161               * FUNCTION CHUNK AT 2FCC SIZE 00000025 BYTES
05162               
05163 1A10 86 01                                  ldaa    #1
05164 1A12 97 96                                  staa    $96
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 90
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

05165 1A14 BD 1555                                jsr     sub_1555
05166 1A17 BD 1200                                jsr     sub_1200
05167 1A1A 96 5A                                  ldaa    $5A
05168 1A1C 81 F2                                  cmpa    #$F2             * '?'
05169 1A1E 7E 16DC                                jmp     loc_16DC
05170               * End of function sub_1A10
05171               
05172               * ---------------------------------------------------------------------------
05173 1A21 01                                     nop
05174 1A22 01                                     nop
05175 1A23 01                                     nop
05176               * START OF FUNCTION CHUNK FOR sub_1A10
05177               
05178         1A24                loc_1A24        EQU     *
05179 1A24 BD 1500                                jsr     sub_1500
05180 1A27 86 F2                                  ldaa    #$F2             * '?'
05181 1A29 97 A7                                  staa    $A7
05182 1A2B BD 161D                                jsr     sub_161D
05183 1A2E DF A4                                  stx     $A4
05184 1A30 BD 1200                                jsr     sub_1200
05185 1A33 96 5A                                  ldaa    $5A
05186 1A35 81 28                                  cmpa    #$28             * '('
05187 1A37 7E 2040                                jmp     loc_2040
05188               * END OF FUNCTION CHUNK FOR sub_1A10
05189               * ---------------------------------------------------------------------------
05190 1A3A 01                                     nop
05191 1A3B 01                                     nop
05192               * START OF FUNCTION CHUNK FOR sub_1A10
05193               
05194         1A3C                loc_1A3C        EQU     *
05195 1A3C 96 5A                                  ldaa    $5A
05196 1A3E 81 F0                                  cmpa    #$F0             * '?'
05197 1A40 26 12                                  bne     loc_1A54
05198 1A42 DE 5C                                  ldx     $5C
05199 1A44 DF A4                                  stx     $A4
05200 1A46 BD 1200                                jsr     sub_1200
05201 1A49 96 5A                                  ldaa    $5A
05202 1A4B 81 29                                  cmpa    #$29             * ')'
05203 1A4D 26 05                                  bne     loc_1A54
05204 1A4F BD 1200                                jsr     sub_1200
05205 1A52 20 03                                  bra     loc_1A57
05206               * ---------------------------------------------------------------------------
05207               
05208         1A54                loc_1A54        EQU     *
05209 1A54 BD 0EC1                                jsr     sub_EC1
05210               
05211         1A57                loc_1A57        EQU     *
05212 1A57 96 5B                                  ldaa    $5B
05213 1A59 26 1C                                  bne     loc_1A77
05214 1A5B 96 5A                                  ldaa    $5A
05215 1A5D 81 8B                                  cmpa    #$8B             * '?'
05216 1A5F 26 05                                  bne     loc_1A66
05217 1A61 BD 1200                                jsr     sub_1200
05218 1A64 20 11                                  bra     loc_1A77
05219               * ---------------------------------------------------------------------------
05220               
05221         1A66                loc_1A66        EQU     *
05222 1A66 96 5A                                  ldaa    $5A
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 91
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

05223 1A68 81 8C                                  cmpa    #$8C             * '?'
05224 1A6A 26 08                                  bne     loc_1A74
05225 1A6C 7C 00A7                                inc     $A7
05226 1A6F BD 1200                                jsr     sub_1200
05227 1A72 20 03                                  bra     loc_1A77
05228               * ---------------------------------------------------------------------------
05229               
05230         1A74                loc_1A74        EQU     *
05231 1A74 BD 0EC1                                jsr     sub_EC1
05232               
05233         1A77                loc_1A77        EQU     *
05234 1A77 CE 4000                                ldx     #$4000
05235 1A7A D6 A8                                  ldab    $A8
05236 1A7C 96 A9                                  ldaa    $A9
05237 1A7E BD 1403                                jsr     sub_1403
05238 1A81 96 A7                                  ldaa    $A7
05239 1A83 A7 00                                  staa    0,x
05240 1A85 D6 A0                                  ldab    $A0
05241 1A87 96 A1                                  ldaa    $A1
05242 1A89 E7 01                                  stab    1,x
05243 1A8B A7 02                                  staa    2,x
05244 1A8D DE A8                                  ldx     $A8
05245 1A8F 08                                     inx
05246 1A90 08                                     inx
05247 1A91 08                                     inx
05248 1A92 DF 90                                  stx     $90
05249 1A94 96 A7                                  ldaa    $A7
05250 1A96 81 F3                                  cmpa    #$F3             * '?'
05251 1A98 26 06                                  bne     loc_1AA0
05252 1A9A 78 00A5                                asl     $A5
05253 1A9D 79 00A4                                rol     $A4
05254               
05255         1AA0                loc_1AA0        EQU     *
05256 1AA0 D6 A0                                  ldab    $A0
05257 1AA2 96 A1                                  ldaa    $A1
05258 1AA4 9B A5                                  adda    $A5
05259 1AA6 D9 A4                                  adcb    $A4
05260 1AA8 D7 A0                                  stab    $A0
05261 1AAA 7E 17C7                                jmp     loc_17C7
05262               * END OF FUNCTION CHUNK FOR sub_1A10
05263               
05264               * =============== S U B R O U TI N E =======================================
05265               
05266               
05267         1AAD                sub_1AAD        EQU     *
05268 1AAD 86 7E                                  ldaa    #$7E             * '~'
05269 1AAF 97 70                                  staa    $70
05270 1AB1 7F 0071                                clr     $71
05271 1AB4 7F 0072                                clr     $72
05272 1AB7 BD 0C43                                jsr     sub_C43
05273 1ABA 39                                     rts
05274               * End of function sub_1AAD
05275               
05276               
05277               * =============== S U B R O U TI N E =======================================
05278               
05279               
05280         1ABB                sub_1ABB        EQU     *
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 92
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

05281 1ABB BD 2034                                jsr     sub_2034
05282 1ABE 86 28                                  ldaa    #$28             * '('
05283 1AC0 BD 1ACC                                jsr     sub_1ACC
05284 1AC3 86 29                                  ldaa    #$29             * ')'
05285 1AC5 BD 1C00                                jsr     sub_1C00
05286 1AC8 BD 1C15                                jsr     sub_1C15
05287 1ACB 39                                     rts
05288               * End of function sub_1ABB
05289               
05290               
05291               * =============== S U B R O U TI N E =======================================
05292               
05293               
05294         1ACC                sub_1ACC        EQU     *
05295 1ACC BD 1C00                                jsr     sub_1C00
05296 1ACF 96 9A                                  ldaa    $9A
05297 1AD1 BD 1C0E                                jsr     sub_1C0E
05298 1AD4 96 9B                                  ldaa    $9B
05299 1AD6 BD 11B6                                jsr     sub_11B6
05300 1AD9 BD 1C15                                jsr     sub_1C15
05301 1ADC 86 7E                                  ldaa    #$7E             * '~'
05302 1ADE BD 1C0E                                jsr     sub_1C0E
05303 1AE1 96 54                                  ldaa    $54
05304 1AE3 BD 0C8B                                jsr     sub_C8B
05305 1AE6 96 55                                  ldaa    $55
05306 1AE8 BD 0C8B                                jsr     sub_C8B
05307 1AEB 39                                     rts
05308               * End of function sub_1ACC
05309               
05310               * ---------------------------------------------------------------------------
05311               * START OF FUNCTION CHUNK FOR sub_C8B
05312               
05313         1AEC                loc_1AEC        EQU     *
05314 1AEC 7C 00AA                                inc     $AA
05315 1AEF 39                                     rts
05316               * END OF FUNCTION CHUNK FOR sub_C8B
05317               * ---------------------------------------------------------------------------
05318               * START OF FUNCTION CHUNK FOR sub_2812
05319               
05320         1AF0                loc_1AF0        EQU     *
05321 1AF0 81 9A                                  cmpa    #$9A             * '?'
05322 1AF2 26 03                                  bne     loc_1AF7
05323 1AF4 7E 2FBE                                jmp     loc_2FBE
05324               * ---------------------------------------------------------------------------
05325               
05326         1AF7                loc_1AF7        EQU     *
05327 1AF7 7C 00BF                                inc     $BF
05328 1AFA 7E 2843                                jmp     loc_2843
05329               * END OF FUNCTION CHUNK FOR sub_2812
05330               * ---------------------------------------------------------------------------
05331 1AFD 01                                     nop
05332 1AFE 01                                     nop
05333 1AFF 01                                     nop
05334               
05335               * =============== S U B R O U TI N E =======================================
05336               
05337               * Attributes: thunk
05338               
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 93
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

05339         1B00                sub_1B00        EQU     *
05340 1B00 7E 2E9B                                jmp     sub_2E9B
05341               * End of function sub_1B00
05342               
05343               * ---------------------------------------------------------------------------
05344               * START OF FUNCTION CHUNK FOR sub_2E9B
05345               
05346         1B03                loc_1B03        EQU     *
05347 1B03 DF 38                                  stx     $38
05348 1B05 BD 2EBB                                jsr     sub_2EBB
05349 1B08 CE 3410                                ldx     #$3410
05350 1B0B DF 3C                                  stx     $3C
05351 1B0D DF AC                                  stx     $AC
05352 1B0F 7E 1B22                                jmp     loc_1B22
05353               * END OF FUNCTION CHUNK FOR sub_2E9B
05354               * ---------------------------------------------------------------------------
05355 1B12 01                                     nop
05356 1B13 01                                     nop
05357 1B14 01                                     nop
05358 1B15 01                                     nop
05359 1B16 01                                     nop
05360 1B17 01                                     nop
05361 1B18 01                                     nop
05362 1B19 01                                     nop
05363 1B1A 01                                     nop
05364 1B1B 01                                     nop
05365 1B1C 01                                     nop
05366 1B1D 01                                     nop
05367 1B1E 01                                     nop
05368               
05369               * =============== S U B R O U TI N E =======================================
05370               
05371               
05372         1B1F                sub_1B1F        EQU     *
05373 1B1F 7C 0034                                inc     $34
05374               
05375         1B22                loc_1B22        EQU     *
05376 1B22 BD 1C95                                jsr     sub_1C95
05377 1B25 C6 3E                                  ldab    #$3E             * '>'
05378 1B27 4F                                     clra
05379 1B28 90 3F                                  suba    $3F
05380 1B2A D2 3E                                  sbcb    $3E
05381 1B2C 26 01                                  bne     loc_1B2F
05382 1B2E 4D                                     tsta
05383               
05384         1B2F                loc_1B2F        EQU     *
05385 1B2F 22 01                                  bhi     locret_1B32
05386 1B31 3F                                     swi
05387               
05388         1B32                locret_1B32     EQU     *
05389 1B32 39                                     rts
05390               * End of function sub_1B1F
05391               
05392               * ---------------------------------------------------------------------------
05393               * START OF FUNCTION CHUNK FOR sub_1644
05394               
05395         1B33                loc_1B33        EQU     *
05396 1B33 D6 AC                                  ldab    $AC
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 94
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

05397 1B35 96 AD                                  ldaa    $AD
05398 1B37 90 3F                                  suba    $3F
05399 1B39 D2 3E                                  sbcb    $3E
05400 1B3B 26 01                                  bne     loc_1B3E
05401 1B3D 4D                                     tsta
05402               
05403         1B3E                loc_1B3E        EQU     *
05404 1B3E 23 07                                  bls     loc_1B47
05405 1B40 BD 1B1F                                jsr     sub_1B1F
05406 1B43 DE 3C                                  ldx     $3C
05407 1B45 DF AC                                  stx     $AC
05408               
05409         1B47                loc_1B47        EQU     *
05410 1B47 7E 2CB8                                jmp     loc_2CB8
05411               * ---------------------------------------------------------------------------
05412               
05413         1B4A                loc_1B4A        EQU     *
05414 1B4A DF 63                                  stx     $63
05415               
05416         1B4C                loc_1B4C        EQU     *
05417 1B4C DE AC                                  ldx     $AC
05418 1B4E A6 00                                  ldaa    0,x
05419 1B50 08                                     inx
05420 1B51 DF AC                                  stx     $AC
05421 1B53 81 60                                  cmpa    #$60             * '`'
05422 1B55 26 02                                  bne     loc_1B59
05423 1B57 86 0D                                  ldaa    #$D
05424               
05425         1B59                loc_1B59        EQU     *
05426 1B59 DE 63                                  ldx     $63
05427 1B5B BD 1B8F                                jsr     sub_1B8F
05428 1B5E DF 63                                  stx     $63
05429 1B60 81 0D                                  cmpa    #$D
05430 1B62 27 09                                  beq     loc_1B6D
05431 1B64 BD 1B71                                jsr     loc_1B71
05432 1B67 BD 2A4F                                jsr     sub_2A4F
05433 1B6A 7E 1B4C                                jmp     loc_1B4C
05434               * ---------------------------------------------------------------------------
05435               
05436         1B6D                loc_1B6D        EQU     *
05437 1B6D 01                                     nop
05438 1B6E 01                                     nop
05439 1B6F 01                                     nop
05440 1B70 39                                     rts
05441               * END OF FUNCTION CHUNK FOR sub_1644
05442               * ---------------------------------------------------------------------------
05443               
05444         1B71                loc_1B71        EQU     *
05445 1B71 81 60                                  cmpa    #$60             * '`'
05446 1B73 27 04                                  beq     loc_1B79
05447 1B75 81 0D                                  cmpa    #$D
05448 1B77 26 04                                  bne     byte_1B7D
05449               
05450         1B79                loc_1B79        EQU     *
05451 1B79 7E 1B8A                                jmp     sub_1B8A
05452               * ---------------------------------------------------------------------------
05453 1B7C 39                                     rts
05454               * ---------------------------------------------------------------------------
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 95
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

05455 1B7D    39                  byte_1B7D       fcb     $39
05456               * ---------------------------------------------------------------------------
05457 1B7E 7E 2987                                jmp     loc_2987
05458               
05459               * =============== S U B R O U TI N E =======================================
05460               
05461               
05462         1B81                sub_1B81        EQU     *
05463 1B81 36                                     psha
05464 1B82 BD 252E                                jsr     sub_252E
05465 1B85 32                                     pula
05466 1B86 7E 0C8B                                jmp     sub_C8B
05467               * End of function sub_1B81
05468               
05469               * ---------------------------------------------------------------------------
05470 1B89    00                                  fcb     0
05471               
05472               * =============== S U B R O U TI N E =======================================
05473               
05474               
05475         1B8A                sub_1B8A        EQU     *
05476               
05477               * FUNCTION CHUNK AT 2993 SIZE 00000048 BYTES
05478               
05479 1B8A 86 0D                                  ldaa    #$D
05480 1B8C 7E 2993                                jmp     loc_2993
05481               * End of function sub_1B8A
05482               
05483               
05484               * =============== S U B R O U TI N E =======================================
05485               
05486               
05487         1B8F                sub_1B8F        EQU     *
05488 1B8F 8C 054F                                cpx     #$54F
05489 1B92 26 01                                  bne     loc_1B95
05490               
05491         1B94                loc_1B94        EQU     *
05492 1B94 3F                                     swi
05493               
05494         1B95                loc_1B95        EQU     *
05495 1B95 A7 00                                  staa    0,x
05496 1B97 08                                     inx
05497 1B98 39                                     rts
05498               * End of function sub_1B8F
05499               
05500               * ---------------------------------------------------------------------------
05501 1B99    00 00 00 00                         fcb     0,0,0,0
05502               
05503               * =============== S U B R O U TI N E =======================================
05504               
05505               
05506         1B9D                sub_1B9D        EQU     *
05507 1B9D 5F                                     clrb
05508 1B9E CE 0010                                ldx     #$10
05509 1BA1 DF 04                                  stx     4
05510 1BA3 CE 0035                                ldx     #$35             * '5'
05511 1BA6 D7 36                                  stab    $36
05512 1BA8 BD 2A67                                jsr     sub_2A67
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 96
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

05513 1BAB 96 36                                  ldaa    $36
05514 1BAD 26 08                                  bne     locret_1BB7
05515 1BAF 96 35                                  ldaa    $35
05516 1BB1 97 36                                  staa    $36
05517 1BB3 86 30                                  ldaa    #$30             * '0'
05518 1BB5 97 35                                  staa    $35
05519               
05520         1BB7                locret_1BB7     EQU     *
05521 1BB7 39                                     rts
05522               * End of function sub_1B9D
05523               
05524               * ---------------------------------------------------------------------------
05525 1BB8 01                                     nop
05526               * START OF FUNCTION CHUNK FOR sub_2C9A
05527               
05528         1BB9                loc_1BB9        EQU     *
05529 1BB9 BD 1B71                                jsr     loc_1B71
05530 1BBC 96 36                                  ldaa    $36
05531 1BBE BD 1B71                                jsr     loc_1B71
05532 1BC1 39                                     rts
05533               * END OF FUNCTION CHUNK FOR sub_2C9A
05534               
05535               * =============== S U B R O U TI N E =======================================
05536               
05537               
05538         1BC2                sub_1BC2        EQU     *
05539 1BC2 86 01                                  ldaa    #1
05540               * End of function sub_1BC2
05541               
05542               
05543               * =============== S U B R O U TI N E =======================================
05544               
05545               
05546         1BC4                sub_1BC4        EQU     *
05547 1BC4 9B AF                                  adda    $AF
05548 1BC6 19                                     daa
05549 1BC7 97 AF                                  staa    $AF
05550 1BC9 86 00                                  ldaa    #0
05551 1BCB 99 AE                                  adca    $AE
05552 1BCD 19                                     daa
05553 1BCE 97 AE                                  staa    $AE
05554 1BD0 BD 1C0E                                jsr     sub_1C0E
05555 1BD3 96 AF                                  ldaa    $AF
05556 1BD5 BD 1C0E                                jsr     sub_1C0E
05557 1BD8 86 20                                  ldaa    #$20             * ' '
05558 1BDA BD 1C00                                jsr     sub_1C00
05559 1BDD BD 1C00                                jsr     sub_1C00
05560 1BE0 39                                     rts
05561               * End of function sub_1BC4
05562               
05563               
05564               * =============== S U B R O U TI N E =======================================
05565               
05566               
05567         1BE1                sub_1BE1        EQU     *
05568 1BE1 7F 00AE                                clr     $AE
05569 1BE4 7F 00AF                                clr     $AF
05570 1BE7 01                                     nop
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 97
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

05571 1BE8 01                                     nop
05572 1BE9 01                                     nop
05573 1BEA 01                                     nop
05574 1BEB 01                                     nop
05575 1BEC 01                                     nop
05576 1BED 01                                     nop
05577 1BEE 01                                     nop
05578 1BEF 01                                     nop
05579 1BF0 01                                     nop
05580 1BF1 39                                     rts
05581               * End of function sub_1BE1
05582               
05583               * ---------------------------------------------------------------------------
05584               * START OF FUNCTION CHUNK FOR sub_1644
05585               
05586         1BF2                loc_1BF2        EQU     *
05587 1BF2 01                                     nop
05588 1BF3 01                                     nop
05589 1BF4 01                                     nop
05590 1BF5 B6 0570                                ldaa    unk_570
05591 1BF8 7E 2EA7                                jmp     loc_2EA7
05592               * END OF FUNCTION CHUNK FOR sub_1644
05593               * ---------------------------------------------------------------------------
05594 1BFB 01                                     nop
05595 1BFC 01                                     nop
05596 1BFD 01                                     nop
05597 1BFE 01                                     nop
05598 1BFF 01                                     nop
05599               
05600               * =============== S U B R O U TI N E =======================================
05601               
05602               
05603         1C00                sub_1C00        EQU     *
05604 1C00 BD 1B71                                jsr     loc_1B71
05605 1C03 BD 2A4F                                jsr     sub_2A4F
05606 1C06 39                                     rts
05607               * End of function sub_1C00
05608               
05609               
05610               * =============== S U B R O U TI N E =======================================
05611               
05612               
05613         1C07                sub_1C07        EQU     *
05614 1C07 BD 15E5                                jsr     sub_15E5
05615 1C0A BD 1B8A                                jsr     sub_1B8A
05616 1C0D 39                                     rts
05617               * End of function sub_1C07
05618               
05619               
05620               * =============== S U B R O U TI N E =======================================
05621               
05622               
05623         1C0E                sub_1C0E        EQU     *
05624 1C0E BD 1C1D                                jsr     sub_1C1D
05625 1C11 BD 2C9A                                jsr     sub_2C9A
05626 1C14 39                                     rts
05627               * End of function sub_1C0E
05628               
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 98
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

05629               
05630               * =============== S U B R O U TI N E =======================================
05631               
05632               
05633         1C15                sub_1C15        EQU     *
05634 1C15 36                                     psha
05635 1C16 86 20                                  ldaa    #$20             * ' '
05636 1C18 BD 1C00                                jsr     sub_1C00
05637 1C1B 32                                     pula
05638 1C1C 39                                     rts
05639               * End of function sub_1C15
05640               
05641               
05642               * =============== S U B R O U TI N E =======================================
05643               
05644               
05645         1C1D                sub_1C1D        EQU     *
05646 1C1D 36                                     psha
05647 1C1E BD 2A5F                                jsr     sub_2A5F
05648 1C21 32                                     pula
05649 1C22 39                                     rts
05650               * End of function sub_1C1D
05651               
05652               * ---------------------------------------------------------------------------
05653 1C23    45 60 20 42 45 51                   fcb     $45,$60,$20,$42,$45,$51,$20,$31,$2B,$2A,
05654 1C2E    20 52                               fcb     $20,$52
05655               
05656               * =============== S U B R O U TI N E =======================================
05657               
05658               
05659         1C30                sub_1C30        EQU     *
05660               
05661               * FUNCTION CHUNK AT 2F96 SIZE 0000000E BYTES
05662               
05663 1C30 C6 11                                  ldab    #$11
05664 1C32 BD 2F8D                                jsr     sub_2F8D
05665 1C35 BD 1BC2                                jsr     sub_1BC2
05666 1C38 7E 2F96                                jmp     loc_2F96
05667               * End of function sub_1C30
05668               
05669               * ---------------------------------------------------------------------------
05670 1C3B 01                                     nop
05671               
05672               * =============== S U B R O U TI N E =======================================
05673               
05674               
05675         1C3C                sub_1C3C        EQU     *
05676 1C3C 01                                     nop
05677 1C3D 01                                     nop
05678 1C3E 01                                     nop
05679 1C3F 01                                     nop
05680 1C40 BD 15E5                                jsr     sub_15E5
05681 1C43 BD 1650                                jsr     sub_1650
05682 1C46 BD 2934                                jsr     sub_2934
05683 1C49 39                                     rts
05684               * End of function sub_1C3C
05685               
05686               * ---------------------------------------------------------------------------
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 99
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

05687 1C4A 01                                     nop
05688 1C4B C6 07                                  ldab    #7
05689               * START OF FUNCTION CHUNK FOR sub_2F8D
05690               
05691         1C4D                loc_1C4D        EQU     *
05692 1C4D 86 20                                  ldaa    #$20             * ' '
05693               
05694         1C4F                loc_1C4F        EQU     *
05695 1C4F 37                                     pshb
05696 1C50 BD 1C00                                jsr     sub_1C00
05697 1C53 33                                     pulb
05698 1C54 5A                                     decb
05699 1C55 26 F8                                  bne     loc_1C4F
05700 1C57 39                                     rts
05701               * END OF FUNCTION CHUNK FOR sub_2F8D
05702               
05703               * =============== S U B R O U TI N E =======================================
05704               
05705               
05706         1C58                sub_1C58        EQU     *
05707 1C58 01                                     nop
05708 1C59 01                                     nop
05709 1C5A 01                                     nop
05710 1C5B 01                                     nop
05711 1C5C BD 1B8A                                jsr     sub_1B8A
05712 1C5F BD 1C85                                jsr     sub_1C85
05713 1C62 CE 0500                                ldx     #$500
05714 1C65 DF 63                                  stx     $63
05715               
05716         1C67                loc_1C67        EQU     *
05717 1C67 DE 63                                  ldx     $63
05718 1C69 A6 00                                  ldaa    0,x
05719 1C6B 08                                     inx
05720 1C6C DF 63                                  stx     $63
05721 1C6E BD 1C00                                jsr     sub_1C00
05722 1C71 81 0D                                  cmpa    #$D
05723 1C73 26 F2                                  bne     loc_1C67
05724               
05725         1C75                loc_1C75        EQU     *
05726 1C75 86 2A                                  ldaa    #$2A             * '*'
05727 1C77 C6 04                                  ldab    #4
05728 1C79 BD 1DD2                                jsr     sub_1DD2
05729 1C7C C6 02                                  ldab    #2
05730 1C7E BD 1DD0                                jsr     sub_1DD0
05731 1C81 CE 3E00                                ldx     #$3E00
05732 1C84 39                                     rts
05733               * End of function sub_1C58
05734               
05735               
05736               * =============== S U B R O U TI N E =======================================
05737               
05738               
05739         1C85                sub_1C85        EQU     *
05740 1C85 BD 1C07                                jsr     sub_1C07
05741 1C88 4F                                     clra
05742 1C89 BD 1BC4                                jsr     sub_1BC4
05743 1C8C 39                                     rts
05744               * End of function sub_1C85
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 100
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

05745               
05746               * ---------------------------------------------------------------------------
05747 1C8D 01                                     nop
05748 1C8E 01                                     nop
05749 1C8F 01                                     nop
05750 1C90 01                                     nop
05751 1C91 01                                     nop
05752 1C92 01                                     nop
05753 1C93 01                                     nop
05754 1C94 01                                     nop
05755               
05756               * =============== S U B R O U TI N E =======================================
05757               
05758               
05759         1C95                sub_1C95        EQU     *
05760               
05761               * FUNCTION CHUNK AT 2706 SIZE 00000010 BYTES
05762               
05763 1C95 BD 26E8                                jsr     sub_26E8
05764 1C98 DE 3E                                  ldx     $3E
05765 1C9A 7E 2706                                jmp     loc_2706
05766               * End of function sub_1C95
05767               
05768               * ---------------------------------------------------------------------------
05769               * START OF FUNCTION CHUNK FOR sub_112A
05770               
05771         1C9D                loc_1C9D        EQU     *
05772 1C9D 96 42                                  ldaa    $42
05773 1C9F 81 02                                  cmpa    #2
05774 1CA1 27 01                                  beq     loc_1CA4
05775 1CA3 39                                     rts
05776               * ---------------------------------------------------------------------------
05777               
05778         1CA4                loc_1CA4        EQU     *
05779 1CA4 7E 10BF                                jmp     loc_10BF
05780               * END OF FUNCTION CHUNK FOR sub_112A
05781               
05782               * =============== S U B R O U TI N E =======================================
05783               
05784               
05785         1CA7                sub_1CA7        EQU     *
05786 1CA7 C0 02                                  subb    #2
05787 1CA9 CE 042A                                ldx     #$42A
05788               
05789         1CAC                loc_1CAC        EQU     *
05790 1CAC A6 01                                  ldaa    1,x
05791 1CAE A7 00                                  staa    0,x
05792 1CB0 08                                     inx
05793 1CB1 5A                                     decb
05794 1CB2 26 F8                                  bne     loc_1CAC
05795 1CB4 39                                     rts
05796               * End of function sub_1CA7
05797               
05798               * ---------------------------------------------------------------------------
05799 1CB5    00 00 00 00 00 00                   fcb     0,0,0,0,0,0
05800               * ---------------------------------------------------------------------------
05801               * START OF FUNCTION CHUNK FOR sub_1846
05802               
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 101
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

05803         1CBB                loc_1CBB        EQU     *
05804 1CBB 81 3B                                  cmpa    #$3B             * ';'
05805 1CBD 26 03                                  bne     loc_1CC2
05806 1CBF 7E 1886                                jmp     loc_1886
05807               * ---------------------------------------------------------------------------
05808               
05809         1CC2                loc_1CC2        EQU     *
05810 1CC2 01                                     nop
05811 1CC3 01                                     nop
05812 1CC4 01                                     nop
05813 1CC5 7E 2FBA                                jmp     loc_2FBA
05814               * END OF FUNCTION CHUNK FOR sub_1846
05815               
05816               * =============== S U B R O U TI N E =======================================
05817               
05818               
05819         1CC8                sub_1CC8        EQU     *
05820 1CC8 DE 54                                  ldx     $54
05821 1CCA 08                                     inx
05822 1CCB DF 54                                  stx     $54
05823 1CCD DE B0                                  ldx     $B0
05824 1CCF 4D                                     tsta
05825 1CD0 39                                     rts
05826               * End of function sub_1CC8
05827               
05828               * ---------------------------------------------------------------------------
05829 1CD1    00 00 00 00                         fcb     0,0,0,0
05830               * ---------------------------------------------------------------------------
05831               * START OF FUNCTION CHUNK FOR sub_82D
05832               
05833         1CD5                loc_1CD5        EQU     *
05834 1CD5 DE 49                                  ldx     $49
05835 1CD7 26 03                                  bne     loc_1CDC
05836 1CD9 7E 086A                                jmp     loc_86A
05837               * ---------------------------------------------------------------------------
05838               
05839         1CDC                loc_1CDC        EQU     *
05840 1CDC 96 4C                                  ldaa    $4C
05841 1CDE D6 4B                                  ldab    $4B
05842 1CE0 7E 0862                                jmp     loc_862
05843               * END OF FUNCTION CHUNK FOR sub_82D
05844               
05845               * =============== S U B R O U TI N E =======================================
05846               
05847               
05848         1CE3                sub_1CE3        EQU     *
05849               
05850               * FUNCTION CHUNK AT 2027 SIZE 0000000D BYTES
05851               * FUNCTION CHUNK AT 2179 SIZE 00000012 BYTES
05852               
05853 1CE3 CE 0000                                ldx     #0
05854 1CE6 DF 5C                                  stx     $5C
05855 1CE8 96 83                                  ldaa    $83
05856 1CEA 4A                                     deca
05857 1CEB 97 82                                  staa    $82
05858 1CED BD 124F                                jsr     sub_124F
05859 1CF0 96 85                                  ldaa    $85
05860 1CF2 81 27                                  cmpa    #$27             * '''
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 102
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

05861 1CF4 27 01                                  beq     loc_1CF7
05862 1CF6 39                                     rts
05863               * ---------------------------------------------------------------------------
05864               
05865         1CF7                loc_1CF7        EQU     *
05866 1CF7 BD 124F                                jsr     sub_124F
05867 1CFA 96 85                                  ldaa    $85
05868 1CFC 81 27                                  cmpa    #$27             * '''
05869 1CFE 26 0A                                  bne     loc_1D0A
05870 1D00 BD 124F                                jsr     sub_124F
05871 1D03 96 85                                  ldaa    $85
05872 1D05 81 27                                  cmpa    #$27             * '''
05873 1D07 27 01                                  beq     loc_1D0A
05874 1D09 39                                     rts
05875               * ---------------------------------------------------------------------------
05876               
05877         1D0A                loc_1D0A        EQU     *
05878 1D0A 97 5C                                  staa    $5C
05879 1D0C BD 124F                                jsr     sub_124F
05880 1D0F 96 85                                  ldaa    $85
05881 1D11 81 27                                  cmpa    #$27             * '''
05882 1D13 26 13                                  bne     loc_1D28
05883 1D15 BD 124F                                jsr     sub_124F
05884 1D18 96 85                                  ldaa    $85
05885 1D1A 81 27                                  cmpa    #$27             * '''
05886 1D1C 27 0A                                  beq     loc_1D28
05887 1D1E 96 5C                                  ldaa    $5C
05888 1D20 97 5D                                  staa    $5D
05889 1D22 7F 005C                                clr     $5C
05890 1D25 7E 1372                                jmp     loc_1372
05891               * ---------------------------------------------------------------------------
05892               
05893         1D28                loc_1D28        EQU     *
05894 1D28 97 5D                                  staa    $5D
05895 1D2A BD 124F                                jsr     sub_124F
05896 1D2D 96 85                                  ldaa    $85
05897 1D2F 81 27                                  cmpa    #$27             * '''
05898 1D31 7E 2027                                jmp     loc_2027
05899               * End of function sub_1CE3
05900               
05901               * ---------------------------------------------------------------------------
05902 1D34 7E 1375                                jmp     loc_1375
05903               
05904               * =============== S U B R O U TI N E =======================================
05905               
05906               
05907         1D37                sub_1D37        EQU     *
05908 1D37 96 83                                  ldaa    $83
05909 1D39 4A                                     deca
05910 1D3A 97 82                                  staa    $82
05911 1D3C CE 0000                                ldx     #0
05912 1D3F DF 5C                                  stx     $5C
05913 1D41 BD 124F                                jsr     sub_124F
05914 1D44 BD 1384                                jsr     sub_1384
05915 1D47 96 87                                  ldaa    $87
05916 1D49 4A                                     deca
05917 1D4A 27 01                                  beq     loc_1D4D
05918 1D4C 39                                     rts
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 103
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

05919               * ---------------------------------------------------------------------------
05920               
05921         1D4D                loc_1D4D        EQU     *
05922 1D4D 96 85                                  ldaa    $85
05923 1D4F 80 30                                  suba    #$30             * '0'
05924 1D51 97 6B                                  staa    $6B
05925 1D53 D6 5C                                  ldab    $5C
05926 1D55 96 5D                                  ldaa    $5D
05927 1D57 48                                     asla
05928 1D58 59                                     rolb
05929 1D59 36                                     psha
05930 1D5A 37                                     pshb
05931 1D5B 48                                     asla
05932 1D5C 59                                     rolb
05933 1D5D 48                                     asla
05934 1D5E 59                                     rolb
05935 1D5F 30                                     tsx
05936 1D60 AB 01                                  adda    1,x
05937 1D62 E9 00                                  adcb    0,x
05938 1D64 31                                     ins
05939 1D65 31                                     ins
05940 1D66 9B 6B                                  adda    $6B
05941 1D68 C9 00                                  adcb    #0
05942 1D6A D7 5C                                  stab    $5C
05943 1D6C 97 5D                                  staa    $5D
05944 1D6E BD 124F                                jsr     sub_124F
05945 1D71 BD 1384                                jsr     sub_1384
05946 1D74 96 87                                  ldaa    $87
05947 1D76 4A                                     deca
05948 1D77 26 03                                  bne     loc_1D7C
05949 1D79 7E 1D4D                                jmp     loc_1D4D
05950               * ---------------------------------------------------------------------------
05951               
05952         1D7C                loc_1D7C        EQU     *
05953 1D7C 7E 1372                                jmp     loc_1372
05954               * End of function sub_1D37
05955               
05956               * ---------------------------------------------------------------------------
05957               * START OF FUNCTION CHUNK FOR sub_1222
05958               
05959         1D7F                loc_1D7F        EQU     *
05960 1D7F BD 1CE3                                jsr     sub_1CE3
05961 1D82 96 84                                  ldaa    $84
05962 1D84 27 01                                  beq     loc_1D87
05963 1D86 39                                     rts
05964               * ---------------------------------------------------------------------------
05965               
05966         1D87                loc_1D87        EQU     *
05967 1D87 BD 13C8                                jsr     sub_13C8
05968 1D8A 96 84                                  ldaa    $84
05969 1D8C 27 01                                  beq     loc_1D8F
05970 1D8E 39                                     rts
05971               * ---------------------------------------------------------------------------
05972               
05973         1D8F                loc_1D8F        EQU     *
05974 1D8F 7F 005A                                clr     $5A
05975 1D92 7E 124A                                jmp     loc_124A
05976               * END OF FUNCTION CHUNK FOR sub_1222
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 104
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

05977               * ---------------------------------------------------------------------------
05978               * START OF FUNCTION CHUNK FOR sub_1846
05979               
05980         1D95                loc_1D95        EQU     *
05981 1D95 81 90                                  cmpa    #$90             * '?'
05982 1D97 26 05                                  bne     loc_1D9E
05983 1D99 8D 06                                  bsr     sub_1DA1
05984 1D9B 7E 187C                                jmp     loc_187C
05985               * ---------------------------------------------------------------------------
05986               
05987         1D9E                loc_1D9E        EQU     *
05988 1D9E 7E 1878                                jmp     loc_1878
05989               * END OF FUNCTION CHUNK FOR sub_1846
05990               
05991               * =============== S U B R O U TI N E =======================================
05992               
05993               
05994         1DA1                sub_1DA1        EQU     *
05995 1DA1 96 A3                                  ldaa    $A3
05996 1DA3 26 04                                  bne     loc_1DA9
05997 1DA5 BD 0EC1                                jsr     sub_EC1
05998 1DA8 39                                     rts
05999               * ---------------------------------------------------------------------------
06000               
06001         1DA9                loc_1DA9        EQU     *
06002 1DA9 86 7E                                  ldaa    #$7E             * '~'
06003 1DAB 97 70                                  staa    $70
06004 1DAD DE 9E                                  ldx     $9E
06005 1DAF DF 71                                  stx     $71
06006 1DB1 BD 0C43                                jsr     sub_C43
06007 1DB4 BD 1200                                jsr     sub_1200
06008 1DB7 39                                     rts
06009               * End of function sub_1DA1
06010               
06011               * ---------------------------------------------------------------------------
06012               * START OF FUNCTION CHUNK FOR sub_1650
06013               
06014         1DB8                loc_1DB8        EQU     *
06015 1DB8 B6 1B7D                                ldaa    byte_1B7D
06016 1DBB 36                                     psha
06017 1DBC 86 36                                  ldaa    #$36             * '6'
06018 1DBE B7 1B7D                                staa    byte_1B7D
06019 1DC1 37                                     pshb
06020 1DC2 BD 1C58                                jsr     sub_1C58
06021 1DC5 7E 1664                                jmp     loc_1664
06022               * ---------------------------------------------------------------------------
06023               
06024         1DC8                loc_1DC8        EQU     *
06025 1DC8 32                                     pula
06026 1DC9 B7 1B7D                                staa    byte_1B7D
06027 1DCC 7E 0F25                                jmp     loc_F25
06028               * END OF FUNCTION CHUNK FOR sub_1650
06029               * ---------------------------------------------------------------------------
06030 1DCF 01                                     nop
06031               
06032               * =============== S U B R O U TI N E =======================================
06033               
06034               
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 105
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

06035         1DD0                sub_1DD0        EQU     *
06036 1DD0 86 20                                  ldaa    #$20             * ' '
06037               * End of function sub_1DD0
06038               
06039               
06040               * =============== S U B R O U TI N E =======================================
06041               
06042               
06043         1DD2                sub_1DD2        EQU     *
06044 1DD2 37                                     pshb
06045 1DD3 BD 1C00                                jsr     sub_1C00
06046 1DD6 33                                     pulb
06047 1DD7 5A                                     decb
06048 1DD8 26 F8                                  bne     sub_1DD2
06049 1DDA 39                                     rts
06050               * End of function sub_1DD2
06051               
06052               
06053               * =============== S U B R O U TI N E =======================================
06054               
06055               
06056         1DDB                sub_1DDB        EQU     *
06057 1DDB DF 42                                  stx     $42
06058               
06059         1DDD                loc_1DDD        EQU     *
06060 1DDD DE 42                                  ldx     $42
06061 1DDF A6 00                                  ldaa    0,x
06062 1DE1 08                                     inx
06063 1DE2 DF 42                                  stx     $42
06064 1DE4 81 04                                  cmpa    #4
06065 1DE6 26 01                                  bne     loc_1DE9
06066 1DE8 39                                     rts
06067               * ---------------------------------------------------------------------------
06068               
06069         1DE9                loc_1DE9        EQU     *
06070 1DE9 BD 1C00                                jsr     sub_1C00
06071 1DEC 7E 1DDD                                jmp     loc_1DDD
06072               * End of function sub_1DDB
06073               
06074               * ---------------------------------------------------------------------------
06075 1DEF 20 45                                  bra     loc_1E36
06076               * ---------------------------------------------------------------------------
06077 1DF1    52 52 4F 52 04                      fcb     $52,$52,$4F,$52,4
06078               
06079               * =============== S U B R O U TI N E =======================================
06080               
06081               
06082         1DF6                sub_1DF6        EQU     *
06083 1DF6 BD 1C07                                jsr     sub_1C07
06084 1DF9 7E 1C75                                jmp     loc_1C75
06085               * End of function sub_1DF6
06086               
06087               * ---------------------------------------------------------------------------
06088 1DFC    00 00 00 00 00 00                   fcb     0,0,0,0,0,0,0,0
06089               
06090               * =============== S U B R O U TI N E =======================================
06091               
06092               
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 106
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

06093         1E04                sub_1E04        EQU     *
06094 1E04 B6 1B7D                                ldaa    byte_1B7D
06095 1E07 36                                     psha
06096 1E08 86 36                                  ldaa    #$36             * '6'
06097 1E0A B7 1B7D                                staa    byte_1B7D
06098 1E0D BD 1EDB                                jsr     sub_1EDB
06099 1E10 32                                     pula
06100 1E11 B7 1B7D                                staa    byte_1B7D
06101 1E14 CE 4000                                ldx     #$4000
06102 1E17 39                                     rts
06103               * End of function sub_1E04
06104               
06105               * ---------------------------------------------------------------------------
06106 1E18 01                                     nop
06107               
06108               * =============== S U B R O U TI N E =======================================
06109               
06110               
06111         1E19                sub_1E19        EQU     *
06112 1E19 86 00                                  ldaa    #0
06113 1E1B C6 40                                  ldab    #$40             * '@'
06114 1E1D 8B 03                                  adda    #3
06115 1E1F C9 00                                  adcb    #0
06116 1E21 9B CB                                  adda    $CB
06117 1E23 D9 CA                                  adcb    $CA
06118 1E25 9B C8                                  adda    $C8
06119 1E27 C9 00                                  adcb    #0
06120 1E29 CB 00                                  addb    #0
06121 1E2B BD 2A1A                                jsr     sub_2A1A
06122 1E2E E6 00                                  ldab    0,x
06123 1E30 A6 01                                  ldaa    1,x
06124 1E32 97 CD                                  staa    $CD
06125 1E34 D7 CC                                  stab    $CC
06126               
06127         1E36                loc_1E36        EQU     *
06128 1E36 96 CD                                  ldaa    $CD
06129 1E38 D6 CC                                  ldab    $CC
06130 1E3A 17                                     tba
06131 1E3B 97 00                                  staa    0
06132 1E3D BD 1C0E                                jsr     sub_1C0E
06133 1E40 96 CD                                  ldaa    $CD
06134 1E42 D6 CC                                  ldab    $CC
06135 1E44 97 00                                  staa    0
06136 1E46 BD 1C0E                                jsr     sub_1C0E
06137 1E49 BD 1C15                                jsr     sub_1C15
06138 1E4C BD 1C15                                jsr     sub_1C15
06139 1E4F 96 C6                                  ldaa    $C6
06140 1E51 8B 41                                  adda    #$41             * 'A'
06141 1E53 97 00                                  staa    0
06142 1E55 BD 1C00                                jsr     sub_1C00
06143 1E58 86 03                                  ldaa    #3
06144 1E5A 97 C7                                  staa    $C7
06145               
06146         1E5C                loc_1E5C        EQU     *
06147 1E5C 96 C8                                  ldaa    $C8
06148 1E5E 80 01                                  suba    #1
06149 1E60 22 03                                  bhi     loc_1E65
06150 1E62 7E 1E82                                jmp     loc_1E82
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 107
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

06151               * ---------------------------------------------------------------------------
06152               
06153         1E65                loc_1E65        EQU     *
06154 1E65 96 CB                                  ldaa    $CB
06155 1E67 D6 CA                                  ldab    $CA
06156 1E69 9B C7                                  adda    $C7
06157 1E6B C9 00                                  adcb    #0
06158 1E6D CB 40                                  addb    #$40             * '@'
06159 1E6F BD 2A1A                                jsr     sub_2A1A
06160 1E72 A6 00                                  ldaa    0,x
06161 1E74 97 00                                  staa    0
06162 1E76 BD 1C00                                jsr     sub_1C00
06163 1E79 7A 00C8                                dec     $C8
06164 1E7C 7C 00C7                                inc     $C7
06165 1E7F 7E 1E5C                                jmp     loc_1E5C
06166               * ---------------------------------------------------------------------------
06167               
06168         1E82                loc_1E82        EQU     *
06169 1E82 BD 1C15                                jsr     sub_1C15
06170 1E85 96 C9                                  ldaa    $C9
06171 1E87 80 F8                                  suba    #$F8             * '?'
06172 1E89 27 03                                  beq     loc_1E8E
06173 1E8B 7E 1E95                                jmp     loc_1E95
06174               * ---------------------------------------------------------------------------
06175               
06176         1E8E                loc_1E8E        EQU     *
06177 1E8E 86 F4                                  ldaa    #$F4             * '?'
06178 1E90 97 C9                                  staa    $C9
06179 1E92 7E 1EA2                                jmp     loc_1EA2
06180               * ---------------------------------------------------------------------------
06181               
06182         1E95                loc_1E95        EQU     *
06183 1E95 96 C9                                  ldaa    $C9
06184 1E97 80 F0                                  suba    #$F0             * '?'
06185 1E99 27 03                                  beq     loc_1E9E
06186 1E9B 7E 1EA2                                jmp     loc_1EA2
06187               * ---------------------------------------------------------------------------
06188               
06189         1E9E                loc_1E9E        EQU     *
06190 1E9E 86 F5                                  ldaa    #$F5             * '?'
06191 1EA0 97 C9                                  staa    $C9
06192               
06193         1EA2                loc_1EA2        EQU     *
06194 1EA2 7F 00C8                                clr     $C8
06195               
06196         1EA5                loc_1EA5        EQU     *
06197 1EA5 96 C8                                  ldaa    $C8
06198 1EA7 80 04                                  suba    #4
06199 1EA9 25 03                                  bcs     loc_1EAE
06200 1EAB 7E 1ED7                                jmp     loc_1ED7
06201               * ---------------------------------------------------------------------------
06202               
06203         1EAE                loc_1EAE        EQU     *
06204 1EAE 96 C9                                  ldaa    $C9
06205 1EB0 5F                                     clrb
06206 1EB1 80 F2                                  suba    #$F2             * '?'
06207 1EB3 C2 00                                  sbcb    #0
06208 1EB5 D7 06                                  stab    6
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 108
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

06209 1EB7 97 07                                  staa    7
06210 1EB9 86 04                                  ldaa    #4
06211 1EBB 5F                                     clrb
06212 1EBC BD 2A96                                jsr     sub_2A96
06213 1EBF 9B C8                                  adda    $C8
06214 1EC1 C9 00                                  adcb    #0
06215 1EC3 8B 51                                  adda    #$51             * 'Q'
06216 1EC5 C9 05                                  adcb    #5
06217 1EC7 BD 2A1A                                jsr     sub_2A1A
06218 1ECA A6 00                                  ldaa    0,x
06219 1ECC 97 00                                  staa    0
06220 1ECE BD 1C00                                jsr     sub_1C00
06221 1ED1 7C 00C8                                inc     $C8
06222 1ED4 7E 1EA5                                jmp     loc_1EA5
06223               * ---------------------------------------------------------------------------
06224               
06225         1ED7                loc_1ED7        EQU     *
06226 1ED7 BD 1C07                                jsr     sub_1C07
06227 1EDA 39                                     rts
06228               * End of function sub_1E19
06229               
06230               
06231               * =============== S U B R O U TI N E =======================================
06232               
06233               
06234         1EDB                sub_1EDB        EQU     *
06235 1EDB B6 0550                                ldaa    unk_550
06236 1EDE 80 02                                  suba    #2
06237 1EE0 24 03                                  bcc     loc_1EE5
06238 1EE2 7E 1F93                                jmp     locret_1F93
06239               * ---------------------------------------------------------------------------
06240               
06241         1EE5                loc_1EE5        EQU     *
06242 1EE5 BD 1C07                                jsr     sub_1C07
06243 1EE8 BD 1C07                                jsr     sub_1C07
06244 1EEB 4F                                     clra
06245 1EEC 8B 00                                  adda    #0
06246 1EEE 97 00                                  staa    0
06247 1EF0 BD 1BC4                                jsr     sub_1BC4
06248 1EF3 86 4C                                  ldaa    #$4C             * 'L'
06249 1EF5 97 00                                  staa    0
06250 1EF7 BD 1C00                                jsr     sub_1C00
06251 1EFA 86 56                                  ldaa    #$56             * 'V'
06252 1EFC 97 00                                  staa    0
06253 1EFE BD 1C00                                jsr     sub_1C00
06254 1F01 86 4C                                  ldaa    #$4C             * 'L'
06255 1F03 97 00                                  staa    0
06256 1F05 BD 1C00                                jsr     sub_1C00
06257 1F08 BD 1C15                                jsr     sub_1C15
06258 1F0B 96 97                                  ldaa    $97
06259 1F0D 97 00                                  staa    0
06260 1F0F BD 1C0E                                jsr     sub_1C0E
06261 1F12 BD 1C07                                jsr     sub_1C07
06262 1F15 BD 1C07                                jsr     sub_1C07
06263 1F18 7F 00C6                                clr     $C6
06264               
06265         1F1B                loc_1F1B        EQU     *
06266 1F1B 96 C6                                  ldaa    $C6
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 109
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

06267 1F1D 80 1A                                  suba    #$1A
06268 1F1F 25 03                                  bcs     loc_1F24
06269 1F21 7E 1F93                                jmp     locret_1F93
06270               * ---------------------------------------------------------------------------
06271               
06272         1F24                loc_1F24        EQU     *
06273 1F24 86 00                                  ldaa    #0
06274 1F26 C6 40                                  ldab    #$40             * '@'
06275 1F28 8B 03                                  adda    #3
06276 1F2A C9 00                                  adcb    #0
06277 1F2C 9B 95                                  adda    $95
06278 1F2E D9 94                                  adcb    $94
06279 1F30 9B C6                                  adda    $C6
06280 1F32 C9 00                                  adcb    #0
06281 1F34 9B C6                                  adda    $C6
06282 1F36 C9 00                                  adcb    #0
06283 1F38 CB 00                                  addb    #0
06284 1F3A BD 2A1A                                jsr     sub_2A1A
06285 1F3D E6 00                                  ldab    0,x
06286 1F3F A6 01                                  ldaa    1,x
06287 1F41 97 CB                                  staa    $CB
06288 1F43 D7 CA                                  stab    $CA
06289               
06290         1F45                loc_1F45        EQU     *
06291 1F45 DE CA                                  ldx     $CA
06292 1F47 26 03                                  bne     loc_1F4C
06293 1F49 7E 1F8D                                jmp     loc_1F8D
06294               * ---------------------------------------------------------------------------
06295               
06296         1F4C                loc_1F4C        EQU     *
06297 1F4C 96 CB                                  ldaa    $CB
06298 1F4E D6 CA                                  ldab    $CA
06299 1F50 8B 02                                  adda    #2
06300 1F52 C9 00                                  adcb    #0
06301 1F54 CB 40                                  addb    #$40             * '@'
06302 1F56 BD 2A1A                                jsr     sub_2A1A
06303 1F59 A6 00                                  ldaa    0,x
06304 1F5B 97 C8                                  staa    $C8
06305 1F5D 96 CB                                  ldaa    $CB
06306 1F5F D6 CA                                  ldab    $CA
06307 1F61 8B 02                                  adda    #2
06308 1F63 C9 00                                  adcb    #0
06309 1F65 9B C8                                  adda    $C8
06310 1F67 C9 00                                  adcb    #0
06311 1F69 CB 40                                  addb    #$40             * '@'
06312 1F6B BD 2A1A                                jsr     sub_2A1A
06313 1F6E A6 00                                  ldaa    0,x
06314 1F70 97 C9                                  staa    $C9
06315 1F72 BD 1E19                                jsr     sub_1E19
06316 1F75 86 00                                  ldaa    #0
06317 1F77 C6 40                                  ldab    #$40             * '@'
06318 1F79 9B CB                                  adda    $CB
06319 1F7B D9 CA                                  adcb    $CA
06320 1F7D CB 00                                  addb    #0
06321 1F7F BD 2A1A                                jsr     sub_2A1A
06322 1F82 E6 00                                  ldab    0,x
06323 1F84 A6 01                                  ldaa    1,x
06324 1F86 97 CB                                  staa    $CB
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 110
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

06325 1F88 D7 CA                                  stab    $CA
06326 1F8A 7E 1F45                                jmp     loc_1F45
06327               * ---------------------------------------------------------------------------
06328               
06329         1F8D                loc_1F8D        EQU     *
06330 1F8D 7C 00C6                                inc     $C6
06331 1F90 7E 1F1B                                jmp     loc_1F1B
06332               * ---------------------------------------------------------------------------
06333               
06334         1F93                locret_1F93     EQU     *
06335 1F93 39                                     rts
06336               * End of function sub_1EDB
06337               
06338               
06339               * =============== S U B R O U TI N E =======================================
06340               
06341               
06342         1F94                sub_1F94        EQU     *
06343 1F94 DE 94                                  ldx     $94
06344 1F96 26 01                                  bne     loc_1F99
06345 1F98 39                                     rts
06346               * ---------------------------------------------------------------------------
06347               
06348         1F99                loc_1F99        EQU     *
06349 1F99 96 97                                  ldaa    $97
06350 1F9B 27 01                                  beq     loc_1F9E
06351 1F9D 39                                     rts
06352               * ---------------------------------------------------------------------------
06353               
06354         1F9E                loc_1F9E        EQU     *
06355 1F9E 7C 0550                                inc     unk_550
06356 1FA1 7E 1E04                                jmp     sub_1E04
06357               * End of function sub_1F94
06358               
06359               * ---------------------------------------------------------------------------
06360               * START OF FUNCTION CHUNK FOR sub_26D7
06361               
06362         1FA4                loc_1FA4        EQU     *
06363 1FA4 86 36                                  ldaa    #$36             * '6'
06364 1FA6 B7 1B7D                                staa    byte_1B7D
06365 1FA9 96 A6                                  ldaa    $A6
06366 1FAB 01                                     nop
06367 1FAC 01                                     nop
06368 1FAD BD 1B8A                                jsr     sub_1B8A
06369 1FB0 BD 1DF6                                jsr     sub_1DF6
06370 1FB3 96 A6                                  ldaa    $A6
06371 1FB5 26 0C                                  bne     loc_1FC3
06372 1FB7 86 4E                                  ldaa    #$4E             * 'N'
06373 1FB9 BD 1C00                                jsr     sub_1C00
06374 1FBC 86 4F                                  ldaa    #$4F             * 'O'
06375 1FBE BD 1C00                                jsr     sub_1C00
06376 1FC1 20 1F                                  bra     loc_1FE2
06377               * ---------------------------------------------------------------------------
06378               
06379         1FC3                loc_1FC3        EQU     *
06380 1FC3 CE 000A                                ldx     #$A
06381 1FC6 DF 04                                  stx     4
06382 1FC8 CE 04D8                                ldx     #$4D8
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 111
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

06383 1FCB 5F                                     clrb
06384 1FCC BD 2A67                                jsr     sub_2A67
06385 1FCF 86 04                                  ldaa    #4
06386 1FD1 A7 00                                  staa    0,x
06387 1FD3 CE 04D8                                ldx     #$4D8
06388 1FD6 86 30                                  ldaa    #$30             * '0'
06389               
06390         1FD8                loc_1FD8        EQU     *
06391 1FD8 A1 00                                  cmpa    0,x
06392 1FDA 26 03                                  bne     loc_1FDF
06393 1FDC 08                                     inx
06394 1FDD 20 F9                                  bra     loc_1FD8
06395               * ---------------------------------------------------------------------------
06396               
06397         1FDF                loc_1FDF        EQU     *
06398 1FDF BD 1DDB                                jsr     sub_1DDB
06399               
06400         1FE2                loc_1FE2        EQU     *
06401 1FE2 CE 1DEF                                ldx     #$1DEF
06402 1FE5 BD 1DDB                                jsr     sub_1DDB
06403 1FE8 96 A6                                  ldaa    $A6
06404 1FEA 4A                                     deca
06405 1FEB 27 05                                  beq     loc_1FF2
06406 1FED 86 53                                  ldaa    #$53             * 'S'
06407 1FEF BD 1C00                                jsr     sub_1C00
06408               
06409         1FF2                loc_1FF2        EQU     *
06410 1FF2 BD 1C07                                jsr     sub_1C07
06411 1FF5 BD 2F32                                jsr     sub_2F32
06412 1FF8 7E 2C8A                                jmp     loc_2C8A
06413               * END OF FUNCTION CHUNK FOR sub_26D7
06414               
06415               * =============== S U B R O U TI N E =======================================
06416               
06417               
06418         1FFB                sub_1FFB        EQU     *
06419 1FFB DE 33                                  ldx     $33
06420 1FFD DF D0                                  stx     $D0
06421 1FFF 39                                     rts
06422               * End of function sub_1FFB
06423               
06424               * ---------------------------------------------------------------------------
06425               * START OF FUNCTION CHUNK FOR sub_2812
06426               
06427         2000                loc_2000        EQU     *
06428 2000 7C 00C1                                inc     $C1
06429 2003 96 BF                                  ldaa    $BF
06430 2005 26 09                                  bne     loc_2010
06431 2007 96 B5                                  ldaa    $B5
06432 2009 81 02                                  cmpa    #2
06433 200B 27 03                                  beq     loc_2010
06434 200D 7E 28A0                                jmp     loc_28A0
06435               * ---------------------------------------------------------------------------
06436               
06437         2010                loc_2010        EQU     *
06438 2010 7E 28A8                                jmp     loc_28A8
06439               * END OF FUNCTION CHUNK FOR sub_2812
06440               * ---------------------------------------------------------------------------
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 112
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

06441 2013    00 00 00 00 00 00                   fcb     0,0,0,0,0,0,0
06442               * ---------------------------------------------------------------------------
06443               * START OF FUNCTION CHUNK FOR sub_1285
06444               
06445         201A                loc_201A        EQU     *
06446 201A 26 01                                  bne     loc_201D
06447               
06448         201C                locret_201C     EQU     *
06449 201C 39                                     rts
06450               * ---------------------------------------------------------------------------
06451               
06452         201D                loc_201D        EQU     *
06453 201D 81 F0                                  cmpa    #$F0             * '?'
06454 201F 27 03                                  beq     loc_2024
06455 2021 7E 12E8                                jmp     loc_12E8
06456               * ---------------------------------------------------------------------------
06457               
06458         2024                loc_2024        EQU     *
06459 2024 7E 1378                                jmp     loc_1378
06460               * END OF FUNCTION CHUNK FOR sub_1285
06461               * ---------------------------------------------------------------------------
06462               * START OF FUNCTION CHUNK FOR sub_1CE3
06463               
06464         2027                loc_2027        EQU     *
06465 2027 26 03                                  bne     loc_202C
06466 2029 7E 2179                                jmp     loc_2179
06467               * ---------------------------------------------------------------------------
06468               
06469         202C                loc_202C        EQU     *
06470 202C 86 F1                                  ldaa    #$F1             * '?'
06471 202E 97 5A                                  staa    $5A
06472 2030 7C 0084                                inc     $84
06473 2033 39                                     rts
06474               * END OF FUNCTION CHUNK FOR sub_1CE3
06475               
06476               * =============== S U B R O U TI N E =======================================
06477               
06478               
06479         2034                sub_2034        EQU     *
06480 2034 BD 261E                                jsr     sub_261E
06481 2037 7E 1C07                                jmp     sub_1C07
06482               * End of function sub_2034
06483               
06484               * ---------------------------------------------------------------------------
06485               * START OF FUNCTION CHUNK FOR sub_DED
06486               
06487         203A                loc_203A        EQU     *
06488 203A BD 0E7B                                jsr     sub_E7B
06489 203D 7E 117F                                jmp     loc_117F
06490               * END OF FUNCTION CHUNK FOR sub_DED
06491               * ---------------------------------------------------------------------------
06492               * START OF FUNCTION CHUNK FOR sub_1A10
06493               
06494         2040                loc_2040        EQU     *
06495 2040 26 06                                  bne     loc_2048
06496 2042 BD 1200                                jsr     sub_1200
06497 2045 7E 1A3C                                jmp     loc_1A3C
06498               * ---------------------------------------------------------------------------
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 113
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

06499               
06500         2048                loc_2048        EQU     *
06501 2048 81 92                                  cmpa    #$92             * '?'
06502 204A 27 4B                                  beq     loc_2097
06503 204C 81 91                                  cmpa    #$91             * '?'
06504 204E 27 03                                  beq     loc_2053
06505 2050 7E 1A57                                jmp     loc_1A57
06506               * ---------------------------------------------------------------------------
06507               
06508         2053                loc_2053        EQU     *
06509 2053 BD 218B                                jsr     sub_218B
06510 2056 96 5A                                  ldaa    $5A
06511 2058 81 27                                  cmpa    #$27             * '''
06512 205A 26 18                                  bne     loc_2074
06513 205C BD 1200                                jsr     sub_1200
06514 205F 96 5A                                  ldaa    $5A
06515 2061 81 F0                                  cmpa    #$F0             * '?'
06516 2063 27 03                                  beq     loc_2068
06517 2065 7E 0EC1                                jmp     sub_EC1
06518               * ---------------------------------------------------------------------------
06519               
06520         2068                loc_2068        EQU     *
06521 2068 BD 2155                                jsr     sub_2155
06522 206B 96 5A                                  ldaa    $5A
06523 206D 81 27                                  cmpa    #$27             * '''
06524 206F 27 0A                                  beq     loc_207B
06525               
06526         2071                loc_2071        EQU     *
06527 2071 7E 0EC1                                jmp     sub_EC1
06528               * ---------------------------------------------------------------------------
06529               
06530         2074                loc_2074        EQU     *
06531 2074 81 F0                                  cmpa    #$F0             * '?'
06532 2076 26 F9                                  bne     loc_2071
06533 2078 BD 215D                                jsr     sub_215D
06534               
06535         207B                loc_207B        EQU     *
06536 207B BD 1200                                jsr     sub_1200
06537 207E CE 4000                                ldx     #$4000
06538 2081 D6 A8                                  ldab    $A8
06539 2083 96 A9                                  ldaa    $A9
06540 2085 BD 1403                                jsr     sub_1403
06541 2088 86 F0                                  ldaa    #$F0             * '?'
06542 208A A7 00                                  staa    0,x
06543 208C D6 A4                                  ldab    $A4
06544 208E 96 A5                                  ldaa    $A5
06545 2090 E7 01                                  stab    1,x
06546 2092 A7 02                                  staa    2,x
06547 2094 7E 214B                                jmp     loc_214B
06548               * ---------------------------------------------------------------------------
06549               
06550         2097                loc_2097        EQU     *
06551 2097 BD 1200                                jsr     sub_1200
06552 209A DE 54                                  ldx     $54
06553 209C DF 9A                                  stx     $9A
06554 209E BD 1AAD                                jsr     sub_1AAD
06555               
06556         20A1                loc_20A1        EQU     *
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 114
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

06557 20A1 96 5A                                  ldaa    $5A
06558 20A3 81 28                                  cmpa    #$28             * '('
06559 20A5 27 03                                  beq     loc_20AA
06560 20A7 7E 212E                                jmp     loc_212E
06561               * ---------------------------------------------------------------------------
06562               
06563         20AA                loc_20AA        EQU     *
06564 20AA BD 1200                                jsr     sub_1200
06565 20AD 96 5A                                  ldaa    $5A
06566 20AF 81 F1                                  cmpa    #$F1             * '?'
06567 20B1 27 04                                  beq     loc_20B7
06568 20B3 7E 2FCC                                jmp     loc_2FCC
06569               * END OF FUNCTION CHUNK FOR sub_1A10
06570               * ---------------------------------------------------------------------------
06571 20B6 01                                     nop
06572               * START OF FUNCTION CHUNK FOR sub_1A10
06573               
06574         20B7                loc_20B7        EQU     *
06575 20B7 96 83                                  ldaa    $83
06576 20B9 97 82                                  staa    $82
06577               
06578         20BB                loc_20BB        EQU     *
06579 20BB 7F 006A                                clr     $6A
06580               
06581         20BE                loc_20BE        EQU     *
06582 20BE BD 124F                                jsr     sub_124F
06583 20C1 96 85                                  ldaa    $85
06584 20C3 81 27                                  cmpa    #$27             * '''
06585 20C5 26 22                                  bne     loc_20E9
06586 20C7 BD 124F                                jsr     sub_124F
06587 20CA 96 85                                  ldaa    $85
06588 20CC 81 27                                  cmpa    #$27             * '''
06589 20CE 27 19                                  beq     loc_20E9
06590 20D0 7E 2162                                jmp     loc_2162
06591               * END OF FUNCTION CHUNK FOR sub_1A10
06592               * ---------------------------------------------------------------------------
06593 20D3 01                                     nop
06594               * START OF FUNCTION CHUNK FOR sub_1A10
06595               
06596         20D4                loc_20D4        EQU     *
06597 20D4 BD 0C3B                                jsr     sub_C3B
06598 20D7 20 0B                                  bra     loc_20E4
06599               * ---------------------------------------------------------------------------
06600               
06601         20D9                loc_20D9        EQU     *
06602 20D9 4A                                     deca
06603 20DA 26 05                                  bne     loc_20E1
06604 20DC BD 0C3F                                jsr     sub_C3F
06605 20DF 20 03                                  bra     loc_20E4
06606               * ---------------------------------------------------------------------------
06607               
06608         20E1                loc_20E1        EQU     *
06609 20E1 BD 0C43                                jsr     sub_C43
06610               
06611         20E4                loc_20E4        EQU     *
06612 20E4 7A 0082                                dec     $82
06613 20E7 20 2E                                  bra     loc_2117
06614               * ---------------------------------------------------------------------------
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 115
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

06615               
06616         20E9                loc_20E9        EQU     *
06617 20E9 36                                     psha
06618 20EA 96 6A                                  ldaa    $6A
06619 20EC CE 0070                                ldx     #$70             * 'p'
06620 20EF BD 0C78                                jsr     AddBAtoX
06621 20F2 32                                     pula
06622 20F3 A7 00                                  staa    0,x
06623 20F5 96 6A                                  ldaa    $6A
06624 20F7 4C                                     inca
06625 20F8 97 6A                                  staa    $6A
06626 20FA 81 03                                  cmpa    #3
06627 20FC 2D C0                                  blt     loc_20BE
06628 20FE BD 0C43                                jsr     sub_C43
06629 2101 20 B8                                  bra     loc_20BB
06630               * ---------------------------------------------------------------------------
06631               
06632         2103                loc_2103        EQU     *
06633 2103 D6 59                                  ldab    $59
06634 2105 26 09                                  bne     loc_2110
06635 2107 96 5D                                  ldaa    $5D
06636 2109 97 70                                  staa    $70
06637 210B BD 0C3B                                jsr     sub_C3B
06638 210E 20 07                                  bra     loc_2117
06639               * ---------------------------------------------------------------------------
06640               
06641         2110                loc_2110        EQU     *
06642 2110 DE 5C                                  ldx     $5C
06643 2112 DF 70                                  stx     $70
06644 2114 BD 0C3F                                jsr     sub_C3F
06645               
06646         2117                loc_2117        EQU     *
06647 2117 BD 1200                                jsr     sub_1200
06648 211A 96 5A                                  ldaa    $5A
06649 211C 81 2C                                  cmpa    #$2C             * ','
06650 211E 26 05                                  bne     loc_2125
06651 2120 01                                     nop
06652 2121 01                                     nop
06653 2122 01                                     nop
06654 2123 20 85                                  bra     loc_20AA
06655               * ---------------------------------------------------------------------------
06656               
06657         2125                loc_2125        EQU     *
06658 2125 81 29                                  cmpa    #$29             * ')'
06659 2127 26 05                                  bne     loc_212E
06660 2129 BD 1200                                jsr     sub_1200
06661 212C 20 03                                  bra     loc_2131
06662               * ---------------------------------------------------------------------------
06663               
06664         212E                loc_212E        EQU     *
06665 212E BD 0EC1                                jsr     sub_EC1
06666               
06667         2131                loc_2131        EQU     *
06668 2131 7E 2FAF                                jmp     loc_2FAF
06669               * ---------------------------------------------------------------------------
06670               
06671         2134                loc_2134        EQU     *
06672 2134 D6 A8                                  ldab    $A8
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 116
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

06673 2136 96 A9                                  ldaa    $A9
06674 2138 BD 1403                                jsr     sub_1403
06675 213B 86 F2                                  ldaa    #$F2             * '?'
06676 213D A7 00                                  staa    0,x
06677 213F D6 9A                                  ldab    $9A
06678 2141 96 9B                                  ldaa    $9B
06679 2143 8B 03                                  adda    #3
06680 2145 C9 00                                  adcb    #0
06681 2147 BD 2172                                jsr     sub_2172
06682 214A 01                                     nop
06683               
06684         214B                loc_214B        EQU     *
06685 214B DE A8                                  ldx     $A8
06686 214D 08                                     inx
06687 214E 08                                     inx
06688 214F 08                                     inx
06689 2150 DF 90                                  stx     $90
06690 2152 7E 17C9                                jmp     loc_17C9
06691               * END OF FUNCTION CHUNK FOR sub_1A10
06692               
06693               * =============== S U B R O U TI N E =======================================
06694               
06695               
06696         2155                sub_2155        EQU     *
06697 2155 DE 5C                                  ldx     $5C
06698 2157 DF A4                                  stx     $A4
06699 2159 BD 218B                                jsr     sub_218B
06700 215C 39                                     rts
06701               * End of function sub_2155
06702               
06703               
06704               * =============== S U B R O U TI N E =======================================
06705               
06706               
06707         215D                sub_215D        EQU     *
06708 215D DE 5C                                  ldx     $5C
06709 215F DF A4                                  stx     $A4
06710 2161 39                                     rts
06711               * End of function sub_215D
06712               
06713               * ---------------------------------------------------------------------------
06714               * START OF FUNCTION CHUNK FOR sub_1A10
06715               
06716         2162                loc_2162        EQU     *
06717 2162 96 6A                                  ldaa    $6A
06718 2164 26 03                                  bne     loc_2169
06719 2166 7E 20E4                                jmp     loc_20E4
06720               * ---------------------------------------------------------------------------
06721               
06722         2169                loc_2169        EQU     *
06723 2169 4A                                     deca
06724 216A 26 03                                  bne     loc_216F
06725 216C 7E 20D4                                jmp     loc_20D4
06726               * ---------------------------------------------------------------------------
06727               
06728         216F                loc_216F        EQU     *
06729 216F 7E 20D9                                jmp     loc_20D9
06730               * END OF FUNCTION CHUNK FOR sub_1A10
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 117
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

06731               
06732               * =============== S U B R O U TI N E =======================================
06733               
06734               
06735         2172                sub_2172        EQU     *
06736 2172 E7 01                                  stab    1,x
06737 2174 A7 02                                  staa    2,x
06738 2176 7E 1ABB                                jmp     sub_1ABB
06739               * End of function sub_2172
06740               
06741               * ---------------------------------------------------------------------------
06742               * START OF FUNCTION CHUNK FOR sub_1CE3
06743               
06744         2179                loc_2179        EQU     *
06745 2179 BD 124F                                jsr     sub_124F
06746 217C 96 85                                  ldaa    $85
06747 217E 81 27                                  cmpa    #$27             * '''
06748 2180 26 03                                  bne     loc_2185
06749 2182 7E 202C                                jmp     loc_202C
06750               * ---------------------------------------------------------------------------
06751               
06752         2185                loc_2185        EQU     *
06753 2185 7A 0082                                dec     $82
06754 2188 7E 1375                                jmp     loc_1375
06755               * END OF FUNCTION CHUNK FOR sub_1CE3
06756               
06757               * =============== S U B R O U TI N E =======================================
06758               
06759               
06760         218B                sub_218B        EQU     *
06761               
06762               * FUNCTION CHUNK AT 1204 SIZE 0000001E BYTES
06763               
06764 218B 86 01                                  ldaa    #1
06765 218D 97 B4                                  staa    $B4
06766 218F 20 03                                  bra     loc_2194
06767               * ---------------------------------------------------------------------------
06768               
06769         2191                loc_2191        EQU     *
06770 2191 7F 00B4                                clr     $B4
06771               
06772         2194                loc_2194        EQU     *
06773 2194 96 5A                                  ldaa    $5A
06774 2196 81 80                                  cmpa    #$80             * '?'
06775 2198 7E 1204                                jmp     loc_1204
06776               * End of function sub_218B
06777               
06778               * ---------------------------------------------------------------------------
06779               * START OF FUNCTION CHUNK FOR sub_1222
06780               
06781         219B                loc_219B        EQU     *
06782 219B 96 B4                                  ldaa    $B4
06783 219D 26 03                                  bne     loc_21A2
06784 219F 7E 1D7F                                jmp     loc_1D7F
06785               * ---------------------------------------------------------------------------
06786               
06787         21A2                loc_21A2        EQU     *
06788 21A2 7E 1D87                                jmp     loc_1D87
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 118
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

06789               * END OF FUNCTION CHUNK FOR sub_1222
06790               * ---------------------------------------------------------------------------
06791               * START OF FUNCTION CHUNK FOR sub_2317
06792               
06793         21A5                loc_21A5        EQU     *
06794 21A5 81 2E                                  cmpa    #$2E             * '.'
06795 21A7 27 0A                                  beq     loc_21B3
06796 21A9 81 28                                  cmpa    #$28             * '('
06797 21AB 26 03                                  bne     loc_21B0
06798 21AD 7E 2200                                jmp     loc_2200
06799               * ---------------------------------------------------------------------------
06800               
06801         21B0                loc_21B0        EQU     *
06802 21B0 7E 0EC1                                jmp     sub_EC1
06803               * ---------------------------------------------------------------------------
06804               
06805         21B3                loc_21B3        EQU     *
06806 21B3 BD 1200                                jsr     sub_1200
06807 21B6 96 5A                                  ldaa    $5A
06808 21B8 81 F2                                  cmpa    #$F2             * '?'
06809 21BA 27 03                                  beq     loc_21BF
06810 21BC 7E 0EC1                                jmp     sub_EC1
06811               * ---------------------------------------------------------------------------
06812               
06813         21BF                loc_21BF        EQU     *
06814 21BF 5F                                     clrb
06815 21C0 96 5C                                  ldaa    $5C
06816 21C2 27 01                                  beq     loc_21C5
06817 21C4 5C                                     incb
06818               
06819         21C5                loc_21C5        EQU     *
06820 21C5 D7 59                                  stab    $59
06821 21C7 BD 0DC3                                jsr     sub_DC3
06822 21CA BD 1181                                jsr     sub_1181
06823 21CD 7E 1200                                jmp     sub_1200
06824               * END OF FUNCTION CHUNK FOR sub_2317
06825               * ---------------------------------------------------------------------------
06826               * START OF FUNCTION CHUNK FOR sub_82D
06827               
06828         21D0                loc_21D0        EQU     *
06829 21D0 44                                     lsra
06830 21D1 25 03                                  bcs     loc_21D6
06831               
06832         21D3                loc_21D3        EQU     *
06833 21D3 7E 08B3                                jmp     loc_8B3
06834               * ---------------------------------------------------------------------------
06835               
06836         21D6                loc_21D6        EQU     *
06837 21D6 DE 49                                  ldx     $49
06838 21D8 27 F9                                  beq     loc_21D3
06839 21DA 7E 08A8                                jmp     loc_8A8
06840               * END OF FUNCTION CHUNK FOR sub_82D
06841               
06842               * =============== S U B R O U TI N E =======================================
06843               
06844               
06845         21DD                sub_21DD        EQU     *
06846 21DD DE 4B                                  ldx     $4B
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 119
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

06847 21DF 26 01                                  bne     loc_21E2
06848 21E1 39                                     rts
06849               * ---------------------------------------------------------------------------
06850               
06851         21E2                loc_21E2        EQU     *
06852 21E2 7E 0B51                                jmp     sub_B51
06853               * End of function sub_21DD
06854               
06855               * ---------------------------------------------------------------------------
06856               * START OF FUNCTION CHUNK FOR sub_26D7
06857               
06858         21E5                loc_21E5        EQU     *
06859 21E5 BD 0CF2                                jsr     sub_CF2
06860 21E8 96 5B                                  ldaa    $5B
06861 21EA 27 03                                  beq     locret_21EF
06862 21EC 7E 182E                                jmp     loc_182E
06863               * ---------------------------------------------------------------------------
06864               
06865         21EF                locret_21EF     EQU     *
06866 21EF 39                                     rts
06867               * END OF FUNCTION CHUNK FOR sub_26D7
06868               
06869               * =============== S U B R O U TI N E =======================================
06870               
06871               
06872         21F0                sub_21F0        EQU     *
06873 21F0 BD 0AAD                                jsr     sub_AAD
06874 21F3 BD 06DB                                jsr     sub_6DB
06875 21F6 7E 0821                                jmp     loc_821
06876               * End of function sub_21F0
06877               
06878               * ---------------------------------------------------------------------------
06879 21F9    00 00 00 00 00 00                   fcb     0,0,0,0,0,0,0
06880               * ---------------------------------------------------------------------------
06881               * START OF FUNCTION CHUNK FOR sub_2317
06882               
06883         2200                loc_2200        EQU     *
06884 2200 BD 1200                                jsr     sub_1200
06885 2203 86 07                                  ldaa    #7
06886 2205 97 81                                  staa    $81
06887 2207 BD 059C                                jsr     sub_59C
06888 220A 8D 2C                                  bsr     sub_2238
06889 220C 96 5A                                  ldaa    $5A
06890 220E 81 29                                  cmpa    #$29             * ')'
06891 2210 27 03                                  beq     loc_2215
06892 2212 7E 0EC1                                jmp     sub_EC1
06893               * ---------------------------------------------------------------------------
06894               
06895         2215                loc_2215        EQU     *
06896 2215 BD 1200                                jsr     sub_1200
06897 2218 86 08                                  ldaa    #8
06898 221A 97 81                                  staa    $81
06899 221C 7E 059C                                jmp     sub_59C
06900               * END OF FUNCTION CHUNK FOR sub_2317
06901               * ---------------------------------------------------------------------------
06902               * START OF FUNCTION CHUNK FOR sub_188A
06903               
06904         221F                loc_221F        EQU     *
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 120
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

06905 221F 96 5A                                  ldaa    $5A
06906 2221 81 81                                  cmpa    #$81             * '?'
06907 2223 26 0D                                  bne     loc_2232
06908 2225 BD 181C                                jsr     sub_181C
06909 2228 96 5B                                  ldaa    $5B
06910 222A 27 03                                  beq     loc_222F
06911 222C 7E 18E7                                jmp     loc_18E7
06912               * ---------------------------------------------------------------------------
06913               
06914         222F                loc_222F        EQU     *
06915 222F 7E 18E0                                jmp     loc_18E0
06916               * ---------------------------------------------------------------------------
06917               
06918         2232                loc_2232        EQU     *
06919 2232 BD 1846                                jsr     sub_1846
06920 2235 7E 18C2                                jmp     loc_18C2
06921               * END OF FUNCTION CHUNK FOR sub_188A
06922               
06923               * =============== S U B R O U TI N E =======================================
06924               
06925               
06926         2238                sub_2238        EQU     *
06927 2238 8D 69                                  bsr     sub_22A3
06928 223A 96 5B                                  ldaa    $5B
06929 223C 27 01                                  beq     loc_223F
06930 223E 39                                     rts
06931               * ---------------------------------------------------------------------------
06932               
06933         223F                loc_223F        EQU     *
06934 223F 5F                                     clrb
06935 2240 96 5A                                  ldaa    $5A
06936 2242 81 96                                  cmpa    #$96             * '?'
06937 2244 26 02                                  bne     loc_2248
06938 2246 C6 18                                  ldab    #$18
06939               
06940         2248                loc_2248        EQU     *
06941 2248 81 97                                  cmpa    #$97             * '?'
06942 224A 26 02                                  bne     loc_224E
06943 224C C6 19                                  ldab    #$19
06944               
06945         224E                loc_224E        EQU     *
06946 224E D7 81                                  stab    $81
06947 2250 26 01                                  bne     loc_2253
06948 2252 39                                     rts
06949               * ---------------------------------------------------------------------------
06950               
06951         2253                loc_2253        EQU     *
06952 2253 BD 059C                                jsr     sub_59C
06953 2256 BD 1200                                jsr     sub_1200
06954 2259 20 DD                                  bra     sub_2238
06955               * End of function sub_2238
06956               
06957               
06958               * =============== S U B R O U TI N E =======================================
06959               
06960               
06961         225B                sub_225B        EQU     *
06962 225B BD 0E0A                                jsr     sub_E0A
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 121
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

06963 225E 86 02                                  ldaa    #2
06964 2260 97 4F                                  staa    $4F
06965 2262 BD 24FF                                jsr     sub_24FF
06966 2265 01                                     nop
06967 2266 27 01                                  beq     loc_2269
06968 2268 39                                     rts
06969               * ---------------------------------------------------------------------------
06970               
06971         2269                loc_2269        EQU     *
06972 2269 B6 042A                                ldaa    unk_42A
06973 226C 81 1C                                  cmpa    #$1C
06974 226E 26 11                                  bne     loc_2281
06975 2270 D6 42                                  ldab    $42
06976 2272 5A                                     decb
06977 2273 D7 42                                  stab    $42
06978 2275 BD 1CA7                                jsr     sub_1CA7
06979 2278 01                                     nop
06980 2279 01                                     nop
06981 227A 01                                     nop
06982 227B 01                                     nop
06983 227C 01                                     nop
06984 227D 01                                     nop
06985 227E 01                                     nop
06986 227F 20 14                                  bra     sub_2295
06987               * ---------------------------------------------------------------------------
06988               
06989         2281                loc_2281        EQU     *
06990 2281 8D 12                                  bsr     sub_2295
06991 2283 86 44                                  ldaa    #$44             * 'D'
06992 2285 97 70                                  staa    $70
06993 2287 BD 0C3B                                jsr     sub_C3B
06994 228A 86 25                                  ldaa    #$25             * '%'
06995 228C 97 70                                  staa    $70
06996 228E 86 03                                  ldaa    #3
06997 2290 97 71                                  staa    $71
06998 2292 7E 0C3F                                jmp     sub_C3F
06999               * End of function sub_225B
07000               
07001               
07002               * =============== S U B R O U TI N E =======================================
07003               
07004               
07005         2295                sub_2295        EQU     *
07006 2295 86 01                                  ldaa    #1
07007 2297 97 81                                  staa    $81
07008 2299 BD 059C                                jsr     sub_59C
07009 229C BD 0E1A                                jsr     sub_E1A
07010 229F 7F 0050                                clr     $50
07011 22A2 39                                     rts
07012               * End of function sub_2295
07013               
07014               
07015               * =============== S U B R O U TI N E =======================================
07016               
07017               
07018         22A3                sub_22A3        EQU     *
07019 22A3 8D 18                                  bsr     sub_22BD
07020 22A5 96 5B                                  ldaa    $5B
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 122
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

07021 22A7 27 01                                  beq     loc_22AA
07022 22A9 39                                     rts
07023               * ---------------------------------------------------------------------------
07024               
07025         22AA                loc_22AA        EQU     *
07026 22AA 96 5A                                  ldaa    $5A
07027 22AC 81 98                                  cmpa    #$98             * '?'
07028 22AE 27 01                                  beq     loc_22B1
07029 22B0 39                                     rts
07030               * ---------------------------------------------------------------------------
07031               
07032         22B1                loc_22B1        EQU     *
07033 22B1 86 1A                                  ldaa    #$1A
07034 22B3 97 81                                  staa    $81
07035 22B5 BD 059C                                jsr     sub_59C
07036 22B8 BD 1200                                jsr     sub_1200
07037 22BB 20 E6                                  bra     sub_22A3
07038               * End of function sub_22A3
07039               
07040               
07041               * =============== S U B R O U TI N E =======================================
07042               
07043               
07044         22BD                sub_22BD        EQU     *
07045 22BD 96 5A                                  ldaa    $5A
07046 22BF 81 99                                  cmpa    #$99             * '?'
07047 22C1 26 0A                                  bne     loc_22CD
07048 22C3 86 1B                                  ldaa    #$1B
07049 22C5 97 81                                  staa    $81
07050 22C7 BD 059C                                jsr     sub_59C
07051 22CA BD 1200                                jsr     sub_1200
07052               
07053         22CD                loc_22CD        EQU     *
07054 22CD BD 24F9                                jsr     sub_24F9
07055 22D0 96 5B                                  ldaa    $5B
07056 22D2 27 01                                  beq     loc_22D5
07057 22D4 39                                     rts
07058               * ---------------------------------------------------------------------------
07059               
07060         22D5                loc_22D5        EQU     *
07061 22D5 01                                     nop
07062 22D6 BD 0E8F                                jsr     sub_E8F
07063 22D9 5D                                     tstb
07064 22DA 26 01                                  bne     loc_22DD
07065 22DC 39                                     rts
07066               * ---------------------------------------------------------------------------
07067               
07068         22DD                loc_22DD        EQU     *
07069 22DD C0 10                                  subb    #$10
07070 22DF 37                                     pshb
07071 22E0 86 1C                                  ldaa    #$1C
07072 22E2 97 81                                  staa    $81
07073 22E4 BD 1200                                jsr     sub_1200
07074 22E7 BD 059C                                jsr     sub_59C
07075 22EA 32                                     pula
07076 22EB 97 81                                  staa    $81
07077 22ED BD 059C                                jsr     sub_59C
07078 22F0 7E 24F9                                jmp     sub_24F9
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 123
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

07079               * End of function sub_22BD
07080               
07081               
07082               * =============== S U B R O U TI N E =======================================
07083               
07084               
07085         22F3                sub_22F3        EQU     *
07086               
07087               * FUNCTION CHUNK AT 2514 SIZE 0000000B BYTES
07088               
07089 22F3 8D 22                                  bsr     sub_2317
07090 22F5 7E 2514                                jmp     loc_2514
07091               * ---------------------------------------------------------------------------
07092               
07093         22F8                loc_22F8        EQU     *
07094 22F8 81 2A                                  cmpa    #$2A             * '*'
07095 22FA 26 02                                  bne     loc_22FE
07096 22FC C6 05                                  ldab    #5
07097               
07098         22FE                loc_22FE        EQU     *
07099 22FE 81 2F                                  cmpa    #$2F             * '/'
07100 2300 26 02                                  bne     loc_2304
07101 2302 C6 06                                  ldab    #6
07102               
07103         2304                loc_2304        EQU     *
07104 2304 81 93                                  cmpa    #$93             * '?'
07105 2306 26 02                                  bne     loc_230A
07106 2308 C6 0F                                  ldab    #$F
07107               
07108         230A                loc_230A        EQU     *
07109 230A D7 81                                  stab    $81
07110 230C 26 01                                  bne     loc_230F
07111 230E 39                                     rts
07112               * ---------------------------------------------------------------------------
07113               
07114         230F                loc_230F        EQU     *
07115 230F BD 059C                                jsr     sub_59C
07116 2312 BD 1200                                jsr     sub_1200
07117 2315 20 DC                                  bra     sub_22F3
07118               * End of function sub_22F3
07119               
07120               
07121               * =============== S U B R O U TI N E =======================================
07122               
07123               
07124         2317                sub_2317        EQU     *
07125               
07126               * FUNCTION CHUNK AT 0D51 SIZE 0000002D BYTES
07127               * FUNCTION CHUNK AT 21A5 SIZE 0000002B BYTES
07128               * FUNCTION CHUNK AT 2200 SIZE 0000001F BYTES
07129               
07130 2317 96 5A                                  ldaa    $5A
07131 2319 81 2D                                  cmpa    #$2D             * '-'
07132 231B 26 0A                                  bne     loc_2327
07133 231D 86 04                                  ldaa    #4
07134 231F 97 81                                  staa    $81
07135 2321 BD 059C                                jsr     sub_59C
07136 2324 BD 1200                                jsr     sub_1200
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 124
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

07137               
07138         2327                loc_2327        EQU     *
07139 2327 7E 0D51                                jmp     loc_D51
07140               * End of function sub_2317
07141               
07142               
07143               * =============== S U B R O U TI N E =======================================
07144               
07145               
07146         232A                sub_232A        EQU     *
07147 232A BD 0632                                jsr     sub_632
07148 232D BD 23CB                                jsr     sub_23CB
07149 2330 BD 2B02                                jsr     sub_2B02
07150 2333 7E 0821                                jmp     loc_821
07151               * End of function sub_232A
07152               
07153               
07154               * =============== S U B R O U TI N E =======================================
07155               
07156               
07157         2336                sub_2336        EQU     *
07158               
07159               * FUNCTION CHUNK AT 234E SIZE 00000004 BYTES
07160               
07161 2336 FE 0396                                ldx     byte_396
07162 2339 FF 0575                                stx     unk_575
07163 233C FE 0398                                ldx     word_398
07164 233F 7E 234E                                jmp     loc_234E
07165               * End of function sub_2336
07166               
07167               
07168               * =============== S U B R O U TI N E =======================================
07169               
07170               
07171         2342                sub_2342        EQU     *
07172 2342 BD 0632                                jsr     sub_632
07173 2345 BD 23CB                                jsr     sub_23CB
07174 2348 BD 2B00                                jsr     sub_2B00
07175 234B 7E 0821                                jmp     loc_821
07176               * End of function sub_2342
07177               
07178               * ---------------------------------------------------------------------------
07179               * START OF FUNCTION CHUNK FOR sub_2336
07180               
07181         234E                loc_234E        EQU     *
07182 234E FF 0577                                stx     unk_577
07183 2351 39                                     rts
07184               * END OF FUNCTION CHUNK FOR sub_2336
07185               * ---------------------------------------------------------------------------
07186 2352 01                                     nop
07187 2353 01                                     nop
07188               
07189               * =============== S U B R O U TI N E =======================================
07190               
07191               
07192         2354                sub_2354        EQU     *
07193 2354 BD 0632                                jsr     sub_632
07194 2357 8D 72                                  bsr     sub_23CB
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 125
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

07195 2359 BD 2B00                                jsr     sub_2B00
07196 235C 01                                     nop
07197 235D 01                                     nop
07198 235E 01                                     nop
07199 235F 01                                     nop
07200 2360 01                                     nop
07201 2361 01                                     nop
07202 2362 01                                     nop
07203 2363 01                                     nop
07204 2364 01                                     nop
07205 2365 01                                     nop
07206 2366 01                                     nop
07207 2367 01                                     nop
07208 2368 96 4F                                  ldaa    $4F
07209 236A 81 01                                  cmpa    #1
07210 236C 26 0B                                  bne     loc_2379
07211 236E 86 D6                                  ldaa    #$D6             * '?'
07212 2370 97 70                                  staa    $70
07213 2372 86 00                                  ldaa    #0
07214 2374 97 71                                  staa    $71
07215 2376 BD 0C3F                                jsr     sub_C3F
07216               
07217         2379                loc_2379        EQU     *
07218 2379 86 96                                  ldaa    #$96             * '?'
07219 237B 97 70                                  staa    $70
07220 237D 86 01                                  ldaa    #1
07221 237F 97 71                                  staa    $71
07222 2381 BD 0C3F                                jsr     sub_C3F
07223 2384 7E 0821                                jmp     loc_821
07224               * End of function sub_2354
07225               
07226               
07227               * =============== S U B R O U TI N E =======================================
07228               
07229               
07230         2387                sub_2387        EQU     *
07231 2387 BD 0632                                jsr     sub_632
07232 238A BD 06FC                                jsr     sub_6FC
07233 238D CE 8ACA                                ldx     #$8ACA
07234               
07235         2390                loc_2390        EQU     *
07236 2390 DF 4D                                  stx     $4D
07237 2392 96 57                                  ldaa    $57
07238 2394 26 03                                  bne     loc_2399
07239 2396 7E 07B5                                jmp     sub_7B5
07240               * ---------------------------------------------------------------------------
07241               
07242         2399                loc_2399        EQU     *
07243 2399 7E 07BA                                jmp     sub_7BA
07244               * End of function sub_2387
07245               
07246               
07247               * =============== S U B R O U TI N E =======================================
07248               
07249               
07250         239C                sub_239C        EQU     *
07251 239C BD 0632                                jsr     sub_632
07252 239F BD 06FC                                jsr     sub_6FC
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 126
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

07253 23A2 CE 84C4                                ldx     #$84C4
07254 23A5 20 E9                                  bra     loc_2390
07255               * End of function sub_239C
07256               
07257               
07258               * =============== S U B R O U TI N E =======================================
07259               
07260               
07261         23A7                sub_23A7        EQU     *
07262 23A7 BD 0632                                jsr     sub_632
07263 23AA BD 06FC                                jsr     sub_6FC
07264 23AD CE 88C8                                ldx     #$88C8
07265 23B0 20 DE                                  bra     loc_2390
07266               * End of function sub_23A7
07267               
07268               
07269               * =============== S U B R O U TI N E =======================================
07270               
07271               
07272         23B2                sub_23B2        EQU     *
07273 23B2 BD 0AAD                                jsr     sub_AAD
07274 23B5 86 43                                  ldaa    #$43             * 'C'
07275 23B7 97 70                                  staa    $70
07276 23B9 BD 0C3B                                jsr     sub_C3B
07277 23BC 96 4F                                  ldaa    $4F
07278 23BE 44                                     lsra
07279 23BF 24 07                                  bcc     loc_23C8
07280 23C1 86 53                                  ldaa    #$53             * 'S'
07281 23C3 97 70                                  staa    $70
07282 23C5 BD 0C3B                                jsr     sub_C3B
07283               
07284         23C8                loc_23C8        EQU     *
07285 23C8 7E 0821                                jmp     loc_821
07286               * End of function sub_23B2
07287               
07288               
07289               * =============== S U B R O U TI N E =======================================
07290               
07291               
07292         23CB                sub_23CB        EQU     *
07293 23CB 96 46                                  ldaa    $46
07294 23CD CE 047C                                ldx     #$47C
07295 23D0 BD 0C78                                jsr     AddBAtoX
07296 23D3 A6 00                                  ldaa    0,x
07297 23D5 27 1F                                  beq     loc_23F6
07298 23D7 36                                     psha
07299 23D8 86 36                                  ldaa    #$36             * '6'
07300 23DA 97 70                                  staa    $70
07301 23DC BD 0C3B                                jsr     sub_C3B
07302 23DF 32                                     pula
07303 23E0 81 01                                  cmpa    #1
07304 23E2 27 07                                  beq     loc_23EB
07305 23E4 86 37                                  ldaa    #$37             * '7'
07306 23E6 97 70                                  staa    $70
07307 23E8 BD 0C3B                                jsr     sub_C3B
07308               
07309         23EB                loc_23EB        EQU     *
07310 23EB 7C 0046                                inc     $46
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 127
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

07311 23EE 7C 0046                                inc     $46
07312 23F1 7F 0050                                clr     $50
07313 23F4 20 13                                  bra     loc_2409
07314               * ---------------------------------------------------------------------------
07315               
07316         23F6                loc_23F6        EQU     *
07317 23F6 96 45                                  ldaa    $45
07318 23F8 CE 047C                                ldx     #$47C
07319 23FB BD 0C78                                jsr     AddBAtoX
07320 23FE A6 00                                  ldaa    0,x
07321 2400 26 07                                  bne     loc_2409
07322 2402 96 50                                  ldaa    $50
07323               
07324         2404                loc_2404        EQU     *
07325 2404 27 03                                  beq     loc_2409
07326 2406 BD 0A84                                jsr     sub_A84
07327               
07328         2409                loc_2409        EQU     *
07329 2409 96 45                                  ldaa    $45
07330 240B 97 57                                  staa    $57
07331 240D DE 47                                  ldx     $47
07332 240F DF 4B                                  stx     $4B
07333 2411 BD 0E0A                                jsr     sub_E0A
07334 2414 86 01                                  ldaa    #1
07335 2416 97 4F                                  staa    $4F
07336 2418 BD 08D4                                jsr     sub_8D4
07337 241B 7E 2438                                jmp     loc_2438
07338               * ---------------------------------------------------------------------------
07339               
07340         241E                loc_241E        EQU     *
07341 241E BD 08D4                                jsr     sub_8D4
07342 2421 7E 0E1A                                jmp     sub_E1A
07343               * ---------------------------------------------------------------------------
07344               
07345         2424                loc_2424        EQU     *
07346 2424 86 07                                  ldaa    #7
07347 2426 7E 038D                                jmp     sub_38D
07348               * ---------------------------------------------------------------------------
07349 2429 BD 2A00                                jsr     sub_2A00
07350 242C 81 45                                  cmpa    #$45             * 'E'
07351 242E 27 01                                  beq     loc_2431
07352 2430 39                                     rts
07353               * ---------------------------------------------------------------------------
07354               
07355         2431                loc_2431        EQU     *
07356 2431 7E 2C8A                                jmp     loc_2C8A
07357               * ---------------------------------------------------------------------------
07358 2434    00 00 00 00                         fcb     0,0,0,0
07359               * ---------------------------------------------------------------------------
07360               
07361         2438                loc_2438        EQU     *
07362 2438 86 D7                                  ldaa    #$D7             * '?'
07363 243A 97 70                                  staa    $70
07364 243C 86 00                                  ldaa    #0
07365 243E 97 71                                  staa    $71
07366 2440 BD 0C3F                                jsr     sub_C3F
07367 2443 86 97                                  ldaa    #$97             * '?'
07368 2445 97 70                                  staa    $70
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 128
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

07369 2447 86 01                                  ldaa    #1
07370 2449 97 71                                  staa    $71
07371 244B BD 0C3F                                jsr     sub_C3F
07372 244E 96 46                                  ldaa    $46
07373 2450 97 57                                  staa    $57
07374 2452 DE 49                                  ldx     $49
07375 2454 DF 4B                                  stx     $4B
07376 2456 7E 241E                                jmp     loc_241E
07377               * End of function sub_23CB
07378               
07379               
07380               * =============== S U B R O U TI N E =======================================
07381               
07382               
07383         2459                sub_2459        EQU     *
07384 2459 86 4F                                  ldaa    #$4F             * 'O'
07385 245B 97 70                                  staa    $70
07386 245D BD 0C3B                                jsr     sub_C3B
07387 2460 86 20                                  ldaa    #$20             * ' '
07388 2462 97 70                                  staa    $70
07389 2464 86 02                                  ldaa    #2
07390 2466 97 71                                  staa    $71
07391 2468 BD 0C3F                                jsr     sub_C3F
07392 246B 86 86                                  ldaa    #$86             * '?'
07393 246D 97 70                                  staa    $70
07394 246F 86 FF                                  ldaa    #$FF
07395 2471 97 71                                  staa    $71
07396 2473 BD 0C3F                                jsr     sub_C3F
07397 2476 86 02                                  ldaa    #2
07398 2478 97 45                                  staa    $45
07399 247A 7E 0A6E                                jmp     sub_A6E
07400               * End of function sub_2459
07401               
07402               * ---------------------------------------------------------------------------
07403               * START OF FUNCTION CHUNK FOR sub_59C
07404               
07405         247D                loc_247D        EQU     *
07406 247D 81 04                                  cmpa    #4
07407 247F 26 06                                  bne     loc_2487
07408 2481 BD 21F0                                jsr     sub_21F0
07409 2484 7E 05AC                                jmp     loc_5AC
07410               * ---------------------------------------------------------------------------
07411               
07412         2487                loc_2487        EQU     *
07413 2487 81 05                                  cmpa    #5
07414 2489 26 06                                  bne     loc_2491
07415 248B BD 232A                                jsr     sub_232A
07416 248E 7E 05AC                                jmp     loc_5AC
07417               * ---------------------------------------------------------------------------
07418               
07419         2491                loc_2491        EQU     *
07420 2491 81 06                                  cmpa    #6
07421 2493 26 06                                  bne     loc_249B
07422 2495 BD 2342                                jsr     sub_2342
07423 2498 7E 05AC                                jmp     loc_5AC
07424               * ---------------------------------------------------------------------------
07425               
07426         249B                loc_249B        EQU     *
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 129
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

07427 249B 81 0F                                  cmpa    #$F
07428 249D 26 06                                  bne     loc_24A5
07429 249F BD 2354                                jsr     sub_2354
07430 24A2 7E 05AC                                jmp     loc_5AC
07431               * ---------------------------------------------------------------------------
07432               
07433         24A5                loc_24A5        EQU     *
07434 24A5 81 18                                  cmpa    #$18
07435 24A7 26 06                                  bne     loc_24AF
07436 24A9 BD 2387                                jsr     sub_2387
07437 24AC 7E 05AC                                jmp     loc_5AC
07438               * ---------------------------------------------------------------------------
07439               
07440         24AF                loc_24AF        EQU     *
07441 24AF 81 19                                  cmpa    #$19
07442 24B1 26 06                                  bne     loc_24B9
07443 24B3 BD 23A7                                jsr     sub_23A7
07444 24B6 7E 05AC                                jmp     loc_5AC
07445               * ---------------------------------------------------------------------------
07446               
07447         24B9                loc_24B9        EQU     *
07448 24B9 81 1A                                  cmpa    #$1A
07449 24BB 26 06                                  bne     loc_24C3
07450 24BD BD 239C                                jsr     sub_239C
07451 24C0 7E 05AC                                jmp     loc_5AC
07452               * ---------------------------------------------------------------------------
07453               
07454         24C3                loc_24C3        EQU     *
07455 24C3 81 1B                                  cmpa    #$1B
07456 24C5 26 06                                  bne     loc_24CD
07457 24C7 BD 23B2                                jsr     sub_23B2
07458 24CA 7E 05AC                                jmp     loc_5AC
07459               * ---------------------------------------------------------------------------
07460               
07461         24CD                loc_24CD        EQU     *
07462 24CD 81 1C                                  cmpa    #$1C
07463 24CF 26 06                                  bne     loc_24D7
07464 24D1 BD 2459                                jsr     sub_2459
07465 24D4 7E 05AC                                jmp     loc_5AC
07466               * ---------------------------------------------------------------------------
07467               
07468         24D7                loc_24D7        EQU     *
07469 24D7 81 1D                                  cmpa    #$1D
07470 24D9 26 06                                  bne     loc_24E1
07471 24DB BD 250C                                jsr     sub_250C
07472 24DE 7E 05AC                                jmp     loc_5AC
07473               * ---------------------------------------------------------------------------
07474               
07475         24E1                loc_24E1        EQU     *
07476 24E1 81 08                                  cmpa    #8
07477 24E3 26 06                                  bne     loc_24EB
07478 24E5 01                                     nop
07479 24E6 01                                     nop
07480 24E7 01                                     nop
07481 24E8 7E 115F                                jmp     loc_115F
07482               * ---------------------------------------------------------------------------
07483               
07484         24EB                loc_24EB        EQU     *
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 130
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

07485 24EB 81 12                                  cmpa    #$12
07486 24ED 2D 07                                  blt     loc_24F6
07487 24EF 81 17                                  cmpa    #$17
07488 24F1 2E 03                                  bgt     loc_24F6
07489 24F3 7E 0610                                jmp     loc_610
07490               * ---------------------------------------------------------------------------
07491               
07492         24F6                loc_24F6        EQU     *
07493 24F6 7E 0615                                jmp     loc_615
07494               * END OF FUNCTION CHUNK FOR sub_59C
07495               
07496               * =============== S U B R O U TI N E =======================================
07497               
07498               
07499         24F9                sub_24F9        EQU     *
07500               
07501               * FUNCTION CHUNK AT 0CE5 SIZE 0000000B BYTES
07502               * FUNCTION CHUNK AT 0D36 SIZE 0000001A BYTES
07503               
07504 24F9 BD 22F3                                jsr     sub_22F3
07505 24FC 7E 0CE5                                jmp     loc_CE5
07506               * End of function sub_24F9
07507               
07508               
07509               * =============== S U B R O U TI N E =======================================
07510               
07511               
07512         24FF                sub_24FF        EQU     *
07513 24FF 86 1D                                  ldaa    #$1D
07514 2501 97 81                                  staa    $81
07515 2503 BD 059C                                jsr     sub_59C
07516 2506 BD 2238                                jsr     sub_2238
07517 2509 96 5B                                  ldaa    $5B
07518 250B 39                                     rts
07519               * End of function sub_24FF
07520               
07521               
07522               * =============== S U B R O U TI N E =======================================
07523               
07524               
07525         250C                sub_250C        EQU     *
07526 250C 96 43                                  ldaa    $43
07527 250E 26 01                                  bne     loc_2511
07528 2510 39                                     rts
07529               * ---------------------------------------------------------------------------
07530               
07531         2511                loc_2511        EQU     *
07532 2511 7E 0AAD                                jmp     sub_AAD
07533               * End of function sub_250C
07534               
07535               * ---------------------------------------------------------------------------
07536               * START OF FUNCTION CHUNK FOR sub_22F3
07537               
07538         2514                loc_2514        EQU     *
07539 2514 96 5B                                  ldaa    $5B
07540 2516 27 01                                  beq     loc_2519
07541 2518 39                                     rts
07542               * ---------------------------------------------------------------------------
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 131
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

07543               
07544         2519                loc_2519        EQU     *
07545 2519 5F                                     clrb
07546 251A 96 5A                                  ldaa    $5A
07547 251C 7E 22F8                                jmp     loc_22F8
07548               * END OF FUNCTION CHUNK FOR sub_22F3
07549               * ---------------------------------------------------------------------------
07550 251F    00                                  fcb     0
07551               
07552               * =============== S U B R O U TI N E =======================================
07553               
07554               
07555         2520                sub_2520        EQU     *
07556 2520 CE 0000                                ldx     #0
07557 2523 FF 3203                                stx     byte_3203
07558 2526 FF 3408                                stx     byte_3408
07559 2529 86 02                                  ldaa    #2
07560 252B 97 B5                                  staa    $B5
07561 252D 39                                     rts
07562               * End of function sub_2520
07563               
07564               
07565               * =============== S U B R O U TI N E =======================================
07566               
07567               
07568         252E                sub_252E        EQU     *
07569 252E 36                                     psha
07570 252F 96 B5                                  ldaa    $B5
07571 2531 81 02                                  cmpa    #2
07572 2533 26 06                                  bne     loc_253B
07573 2535 BD 26AA                                jsr     sub_26AA
07574 2538 01                                     nop
07575 2539 96 B5                                  ldaa    $B5
07576               
07577         253B                loc_253B        EQU     *
07578 253B BD 1CC8                                jsr     sub_1CC8
07579 253E 26 05                                  bne     loc_2545
07580 2540 FF 3203                                stx     byte_3203
07581 2543 20 03                                  bra     loc_2548
07582               * ---------------------------------------------------------------------------
07583               
07584         2545                loc_2545        EQU     *
07585 2545 FF 3408                                stx     byte_3408
07586               
07587         2548                loc_2548        EQU     *
07588 2548 32                                     pula
07589 2549 A7 00                                  staa    0,x
07590 254B 08                                     inx
07591 254C DF B0                                  stx     $B0
07592 254E 8C 3203                                cpx     #$3203
07593 2551 26 05                                  bne     loc_2558
07594 2553 8D 5E                                  bsr     sub_25B3
07595 2555 39                                     rts
07596               * ---------------------------------------------------------------------------
07597 2556 01                                     nop
07598 2557 01                                     nop
07599               
07600         2558                loc_2558        EQU     *
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 132
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

07601 2558 8C 3408                                cpx     #$3408
07602 255B 26 02                                  bne     locret_255F
07603 255D 8D 03                                  bsr     sub_2562
07604               
07605         255F                locret_255F     EQU     *
07606 255F 39                                     rts
07607               * End of function sub_252E
07608               
07609               * ---------------------------------------------------------------------------
07610 2560 01                                     nop
07611 2561 01                                     nop
07612               
07613               * =============== S U B R O U TI N E =======================================
07614               
07615               
07616         2562                sub_2562        EQU     *
07617               
07618               * FUNCTION CHUNK AT 26B9 SIZE 0000000E BYTES
07619               
07620 2562 4F                                     clra
07621 2563 97 B5                                  staa    $B5
07622 2565 4C                                     inca
07623 2566 B7 3000                                staa    byte_3000
07624 2569 DE 3E                                  ldx     $3E
07625 256B DF BB                                  stx     $BB
07626 256D FE 3203                                ldx     byte_3203
07627 2570 DF 3E                                  stx     $3E
07628 2572 01                                     nop
07629 2573 CE 3003                                ldx     #$3003
07630 2576 DF B0                                  stx     $B0
07631 2578 CE 0000                                ldx     #0
07632 257B FF 3203                                stx     byte_3203
07633 257E DE 3E                                  ldx     $3E
07634 2580 7E 26B9                                jmp     loc_26B9
07635               * End of function sub_2562
07636               
07637               
07638               * =============== S U B R O U TI N E =======================================
07639               
07640               
07641         2583                sub_2583        EQU     *
07642               
07643               * FUNCTION CHUNK AT 26C7 SIZE 00000006 BYTES
07644               
07645 2583 CE 3000                                ldx     #$3000
07646               
07647         2586                loc_2586        EQU     *
07648 2586 DF 3C                                  stx     $3C
07649 2588 DE 33                                  ldx     $33
07650 258A DF B6                                  stx     $B6
07651 258C FE 0398                                ldx     word_398
07652 258F DF 38                                  stx     $38
07653 2591 BD 2ECF                                jsr     sub_2ECF
07654 2594 CE 6030                                ldx     #$6030
07655 2597 DF 33                                  stx     $33
07656 2599 BD 2EB2                                jsr     sub_2EB2
07657 259C 7C 0034                                inc     $34
07658 259F 01                                     nop
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 133
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

07659 25A0 01                                     nop
07660 25A1 01                                     nop
07661               
07662         25A2                loc_25A2        EQU     *
07663 25A2 DE B6                                  ldx     $B6
07664 25A4 DF 33                                  stx     $33
07665 25A6 CE 3410                                ldx     #$3410
07666 25A9 DF 3C                                  stx     $3C
07667 25AB FE 0396                                ldx     byte_396
07668 25AE DF 38                                  stx     $38
07669 25B0 7E 26C7                                jmp     loc_26C7
07670               * End of function sub_2583
07671               
07672               
07673               * =============== S U B R O U TI N E =======================================
07674               
07675               
07676         25B3                sub_25B3        EQU     *
07677               
07678               * FUNCTION CHUNK AT 271E SIZE 0000000E BYTES
07679               
07680 25B3 86 01                                  ldaa    #1
07681 25B5 97 B5                                  staa    $B5
07682 25B7 B7 3205                                staa    byte_3205
07683 25BA DE 3E                                  ldx     $3E
07684 25BC DF BB                                  stx     $BB
07685 25BE FE 3408                                ldx     byte_3408
07686 25C1 DF 3E                                  stx     $3E
07687 25C3 01                                     nop
07688 25C4 CE 3208                                ldx     #$3208
07689 25C7 DF B0                                  stx     $B0
07690 25C9 CE 0000                                ldx     #0
07691 25CC FF 3408                                stx     byte_3408
07692 25CF DE 3E                                  ldx     $3E
07693 25D1 7E 271E                                jmp     loc_271E
07694               * End of function sub_25B3
07695               
07696               
07697               * =============== S U B R O U TI N E =======================================
07698               
07699               
07700         25D4                sub_25D4        EQU     *
07701 25D4 CE 3205                                ldx     #$3205
07702 25D7 20 AD                                  bra     loc_2586
07703               * End of function sub_25D4
07704               
07705               
07706               * =============== S U B R O U TI N E =======================================
07707               
07708               
07709         25D9                sub_25D9        EQU     *
07710 25D9 96 B5                                  ldaa    $B5
07711 25DB 81 02                                  cmpa    #2
07712 25DD 26 01                                  bne     loc_25E0
07713 25DF 39                                     rts
07714               * ---------------------------------------------------------------------------
07715               
07716         25E0                loc_25E0        EQU     *
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 134
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

07717 25E0 8D 2F                                  bsr     sub_2611
07718 25E2 86 FF                                  ldaa    #$FF
07719 25E4 B7 3000                                staa    byte_3000
07720 25E7 CE 3000                                ldx     #$3000
07721 25EA DF 3E                                  stx     $3E
07722 25EC 20 95                                  bra     sub_2583
07723               * End of function sub_25D9
07724               
07725               
07726               * =============== S U B R O U TI N E =======================================
07727               
07728               
07729         25EE                sub_25EE        EQU     *
07730 25EE BD 2E44                                jsr     sub_2E44
07731 25F1 CE 3000                                ldx     #$3000
07732 25F4 DF 3C                                  stx     $3C
07733 25F6 DF 3E                                  stx     $3E
07734 25F8 FE 0398                                ldx     word_398
07735 25FB DF 38                                  stx     $38
07736 25FD BD 2ECF                                jsr     sub_2ECF
07737 2600 BD 2EB2                                jsr     sub_2EB2
07738 2603 01                                     nop
07739 2604 01                                     nop
07740 2605 01                                     nop
07741 2606 20 9A                                  bra     loc_25A2
07742               * End of function sub_25EE
07743               
07744               
07745               * =============== S U B R O U TI N E =======================================
07746               
07747               
07748         2608                sub_2608        EQU     *
07749 2608 DF 54                                  stx     $54
07750               
07751         260A                loc_260A        EQU     *
07752 260A 96 B5                                  ldaa    $B5
07753 260C 81 02                                  cmpa    #2
07754 260E 26 01                                  bne     sub_2611
07755 2610 39                                     rts
07756               * End of function sub_2608
07757               
07758               
07759               * =============== S U B R O U TI N E =======================================
07760               
07761               
07762         2611                sub_2611        EQU     *
07763 2611 4D                                     tsta
07764 2612 26 05                                  bne     loc_2619
07765 2614 8D 9D                                  bsr     sub_25B3
07766 2616 7E 2562                                jmp     sub_2562
07767               * ---------------------------------------------------------------------------
07768               
07769         2619                loc_2619        EQU     *
07770 2619 BD 2562                                jsr     sub_2562
07771 261C 20 95                                  bra     sub_25B3
07772               * End of function sub_2611
07773               
07774               
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 135
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

07775               * =============== S U B R O U TI N E =======================================
07776               
07777               
07778         261E                sub_261E        EQU     *
07779 261E 96 54                                  ldaa    $54
07780 2620 97 BA                                  staa    $BA
07781 2622 DE 9A                                  ldx     $9A
07782 2624 08                                     inx
07783 2625 DF B8                                  stx     $B8
07784 2627 8D 0A                                  bsr     sub_2633
07785 2629 96 55                                  ldaa    $55
07786 262B 97 BA                                  staa    $BA
07787 262D DE 9A                                  ldx     $9A
07788 262F 08                                     inx
07789 2630 08                                     inx
07790 2631 DF B8                                  stx     $B8
07791               * End of function sub_261E
07792               
07793               
07794               * =============== S U B R O U TI N E =======================================
07795               
07796               
07797         2633                sub_2633        EQU     *
07798 2633 FE 3203                                ldx     byte_3203
07799 2636 27 39                                  beq     loc_2671
07800 2638 D6 B8                                  ldab    $B8
07801 263A 96 B9                                  ldaa    $B9
07802 263C B0 3002                                suba    byte_3002
07803 263F F2 3001                                sbcb    byte_3001
07804 2642 36                                     psha
07805 2643 37                                     pshb
07806 2644 26 01                                  bne     loc_2647
07807 2646 4D                                     tsta
07808               
07809         2647                loc_2647        EQU     *
07810 2647 25 26                                  bcs     loc_266F
07811 2649 F6 3203                                ldab    byte_3203
07812 264C B6 3204                                ldaa    byte_3204
07813 264F 80 03                                  suba    #3
07814 2651 C2 30                                  sbcb    #$30             * '0'
07815 2653 BB 3002                                adda    byte_3002
07816 2656 F9 3001                                adcb    byte_3001
07817 2659 90 B9                                  suba    $B9
07818 265B D2 B8                                  sbcb    $B8
07819 265D 26 01                                  bne     loc_2660
07820 265F 4D                                     tsta
07821               
07822         2660                loc_2660        EQU     *
07823 2660 25 0D                                  bcs     loc_266F
07824 2662 33                                     pulb
07825 2663 32                                     pula
07826 2664 CE 3003                                ldx     #$3003
07827               
07828         2667                loc_2667        EQU     *
07829 2667 BD 1403                                jsr     sub_1403
07830 266A 96 BA                                  ldaa    $BA
07831 266C A7 00                                  staa    0,x
07832 266E 39                                     rts
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 136
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

07833               * ---------------------------------------------------------------------------
07834               
07835         266F                loc_266F        EQU     *
07836 266F 31                                     ins
07837 2670 31                                     ins
07838               
07839         2671                loc_2671        EQU     *
07840 2671 FE 3408                                ldx     byte_3408
07841 2674 27 33                                  beq     loc_26A9
07842 2676 D6 B8                                  ldab    $B8
07843 2678 96 B9                                  ldaa    $B9
07844 267A B0 3207                                suba    byte_3207
07845 267D F2 3206                                sbcb    byte_3206
07846 2680 36                                     psha
07847 2681 37                                     pshb
07848 2682 26 01                                  bne     loc_2685
07849 2684 4D                                     tsta
07850               
07851         2685                loc_2685        EQU     *
07852 2685 25 20                                  bcs     loc_26A7
07853 2687 F6 3408                                ldab    byte_3408
07854 268A B6 3409                                ldaa    byte_3409
07855 268D 80 08                                  suba    #8
07856 268F C2 32                                  sbcb    #$32             * '2'
07857 2691 BB 3207                                adda    byte_3207
07858 2694 F9 3206                                adcb    byte_3206
07859 2697 90 B9                                  suba    $B9
07860 2699 D2 B8                                  sbcb    $B8
07861 269B 26 01                                  bne     loc_269E
07862 269D 4D                                     tsta
07863               
07864         269E                loc_269E        EQU     *
07865 269E 25 07                                  bcs     loc_26A7
07866 26A0 33                                     pulb
07867 26A1 32                                     pula
07868 26A2 CE 3208                                ldx     #$3208
07869 26A5 20 C0                                  bra     loc_2667
07870               * ---------------------------------------------------------------------------
07871               
07872         26A7                loc_26A7        EQU     *
07873 26A7 31                                     ins
07874 26A8 31                                     ins
07875               
07876         26A9                loc_26A9        EQU     *
07877 26A9 3F                                     swi
07878               * End of function sub_2633
07879               
07880               
07881               * =============== S U B R O U TI N E =======================================
07882               
07883               
07884         26AA                sub_26AA        EQU     *
07885 26AA BD 25EE                                jsr     sub_25EE
07886 26AD 7E 2562                                jmp     sub_2562
07887               * End of function sub_26AA
07888               
07889               * ---------------------------------------------------------------------------
07890               * START OF FUNCTION CHUNK FOR sub_26D7
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 137
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

07891               
07892         26B0                loc_26B0        EQU     *
07893 26B0 BD 25D9                                jsr     sub_25D9
07894 26B3 BD 164D                                jsr     sub_164D
07895 26B6 7E 1FA4                                jmp     loc_1FA4
07896               * END OF FUNCTION CHUNK FOR sub_26D7
07897               * ---------------------------------------------------------------------------
07898               * START OF FUNCTION CHUNK FOR sub_2562
07899               
07900         26B9                loc_26B9        EQU     *
07901 26B9 27 03                                  beq     loc_26BE
07902 26BB BD 2583                                jsr     sub_2583
07903               
07904         26BE                loc_26BE        EQU     *
07905 26BE BD 26FF                                jsr     sub_26FF
07906 26C1 DE 54                                  ldx     $54
07907 26C3 FF 3001                                stx     byte_3001
07908 26C6 39                                     rts
07909               * END OF FUNCTION CHUNK FOR sub_2562
07910               * ---------------------------------------------------------------------------
07911               * START OF FUNCTION CHUNK FOR sub_2583
07912               
07913         26C7                loc_26C7        EQU     *
07914 26C7 BD 26FF                                jsr     sub_26FF
07915 26CA 7E 2EBB                                jmp     sub_2EBB
07916               * END OF FUNCTION CHUNK FOR sub_2583
07917               * ---------------------------------------------------------------------------
07918 26CD    00 00 7F 00 53 DE                   fcb     0,0,$7F,0,$53,$DE,$B8,$DF,$54,$39
07919               
07920               * =============== S U B R O U TI N E =======================================
07921               
07922               
07923         26D7                sub_26D7        EQU     *
07924               
07925               * FUNCTION CHUNK AT 03AA SIZE 00000003 BYTES
07926               * FUNCTION CHUNK AT 16A4 SIZE 0000000F BYTES
07927               * FUNCTION CHUNK AT 178F SIZE 0000000C BYTES
07928               * FUNCTION CHUNK AT 180D SIZE 0000000E BYTES
07929               * FUNCTION CHUNK AT 1820 SIZE 0000000D BYTES
07930               * FUNCTION CHUNK AT 182E SIZE 00000018 BYTES
07931               * FUNCTION CHUNK AT 1FA4 SIZE 00000057 BYTES
07932               * FUNCTION CHUNK AT 21E5 SIZE 0000000B BYTES
07933               * FUNCTION CHUNK AT 26B0 SIZE 00000009 BYTES
07934               * FUNCTION CHUNK AT 2C8A SIZE 00000006 BYTES
07935               
07936 26D7 96 5A                                  ldaa    $5A
07937 26D9 81 80                                  cmpa    #$80             * '?'
07938 26DB 27 05                                  beq     loc_26E2
07939 26DD 81 81                                  cmpa    #$81             * '?'
07940 26DF 7E 1820                                jmp     loc_1820
07941               * ---------------------------------------------------------------------------
07942               
07943         26E2                loc_26E2        EQU     *
07944 26E2 BD 27EB                                jsr     sub_27EB
07945 26E5 7E 180D                                jmp     loc_180D
07946               * End of function sub_26D7
07947               
07948               
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 138
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

07949               * =============== S U B R O U TI N E =======================================
07950               
07951               
07952         26E8                sub_26E8        EQU     *
07953               
07954               * FUNCTION CHUNK AT 0390 SIZE 00000003 BYTES
07955               * FUNCTION CHUNK AT 2E90 SIZE 0000000B BYTES
07956               * FUNCTION CHUNK AT 497D SIZE 00000025 BYTES
07957               * FUNCTION CHUNK AT 49ED SIZE 00000067 BYTES
07958               
07959 26E8 CE 3410                                ldx     #$3410
07960 26EB DF 3E                                  stx     $3E
07961 26ED 7E 2E90                                jmp     loc_2E90
07962               * End of function sub_26E8
07963               
07964               * ---------------------------------------------------------------------------
07965               
07966         26F0                loc_26F0        EQU     *
07967 26F0 01                                     nop
07968 26F1 01                                     nop
07969 26F2 01                                     nop
07970 26F3 01                                     nop
07971 26F4 01                                     nop
07972               
07973         26F5                loc_26F5        EQU     *
07974 26F5 01                                     nop
07975 26F6 01                                     nop
07976 26F7 01                                     nop
07977 26F8 01                                     nop
07978 26F9 01                                     nop
07979 26FA 01                                     nop
07980 26FB 01                                     nop
07981 26FC 01                                     nop
07982 26FD 01                                     nop
07983 26FE 01                                     nop
07984               
07985               * =============== S U B R O U TI N E =======================================
07986               
07987               
07988         26FF                sub_26FF        EQU     *
07989 26FF DE BB                                  ldx     $BB
07990 2701 DF 3E                                  stx     $3E
07991 2703 39                                     rts
07992               * End of function sub_26FF
07993               
07994               * ---------------------------------------------------------------------------
07995 2704    00                  byte_2704       fcb     0
07996 2705    00                                  fcb     0
07997               * ---------------------------------------------------------------------------
07998               * START OF FUNCTION CHUNK FOR sub_1C95
07999               
08000         2706                loc_2706        EQU     *
08001 2706 86 0D                                  ldaa    #$D
08002 2708 A1 00                                  cmpa    0,x
08003 270A 26 01                                  bne     loc_270D
08004 270C 39                                     rts
08005               * ---------------------------------------------------------------------------
08006               
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 139
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

08007         270D                loc_270D        EQU     *
08008 270D 09                                     dex
08009 270E A1 00                                  cmpa    0,x
08010 2710 27 01                                  beq     loc_2713
08011 2712 3F                                     swi
08012               
08013         2713                loc_2713        EQU     *
08014 2713 DF 3E                                  stx     $3E
08015 2715 39                                     rts
08016               * END OF FUNCTION CHUNK FOR sub_1C95
08017               * ---------------------------------------------------------------------------
08018               * START OF FUNCTION CHUNK FOR sub_2E44
08019               
08020         2716                loc_2716        EQU     *
08021 2716 7F 3000                                clr     byte_3000
08022 2719 DE 3E                                  ldx     $3E
08023 271B DF BB                                  stx     $BB
08024 271D 39                                     rts
08025               * END OF FUNCTION CHUNK FOR sub_2E44
08026               * ---------------------------------------------------------------------------
08027               * START OF FUNCTION CHUNK FOR sub_25B3
08028               
08029         271E                loc_271E        EQU     *
08030 271E 27 03                                  beq     loc_2723
08031 2720 BD 25D4                                jsr     sub_25D4
08032               
08033         2723                loc_2723        EQU     *
08034 2723 BD 26FF                                jsr     sub_26FF
08035 2726 DE 54                                  ldx     $54
08036 2728 FF 3206                                stx     byte_3206
08037 272B 39                                     rts
08038               * END OF FUNCTION CHUNK FOR sub_25B3
08039               
08040               * =============== S U B R O U TI N E =======================================
08041               
08042               
08043         272C                sub_272C        EQU     *
08044 272C 86 50                                  ldaa    #$50             * 'P'
08045 272E BD 11E4                                jsr     sub_11E4
08046 2731 86 40                                  ldaa    #$40             * '@'
08047 2733 7E 11E4                                jmp     sub_11E4
08048               * End of function sub_272C
08049               
08050               * ---------------------------------------------------------------------------
08051               * START OF FUNCTION CHUNK FOR sub_793
08052               
08053         2736                loc_2736        EQU     *
08054 2736 81 CA                                  cmpa    #$CA             * '?'
08055 2738 26 03                                  bne     loc_273D
08056 273A 7E 0821                                jmp     loc_821
08057               * ---------------------------------------------------------------------------
08058               
08059         273D                loc_273D        EQU     *
08060 273D 81 C8                                  cmpa    #$C8             * '?'
08061 273F 26 03                                  bne     loc_2744
08062 2741 7E 0821                                jmp     loc_821
08063               * ---------------------------------------------------------------------------
08064               
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 140
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

08065         2744                loc_2744        EQU     *
08066 2744 7F 0071                                clr     $71
08067 2747 7E 0818                                jmp     loc_818
08068               * END OF FUNCTION CHUNK FOR sub_793
08069               * ---------------------------------------------------------------------------
08070               * START OF FUNCTION CHUNK FOR sub_82D
08071               
08072         274A                loc_274A        EQU     *
08073 274A DE 49                                  ldx     $49
08074 274C DF 4B                                  stx     $4B
08075 274E 96 4C                                  ldaa    $4C
08076 2750 27 03                                  beq     loc_2755
08077 2752 7E 08BD                                jmp     loc_8BD
08078               * ---------------------------------------------------------------------------
08079               
08080         2755                loc_2755        EQU     *
08081 2755 96 4B                                  ldaa    $4B
08082 2757 BD 2F03                                jsr     sub_2F03
08083 275A 7E 08C8                                jmp     loc_8C8
08084               * END OF FUNCTION CHUNK FOR sub_82D
08085               
08086               * =============== S U B R O U TI N E =======================================
08087               
08088               
08089         275D                sub_275D        EQU     *
08090 275D 86 30                                  ldaa    #$30             * '0'
08091 275F 7E 11E4                                jmp     sub_11E4
08092               * End of function sub_275D
08093               
08094               
08095               * =============== S U B R O U TI N E =======================================
08096               
08097               
08098         2762                sub_2762        EQU     *
08099 2762 BD 275D                                jsr     sub_275D
08100 2765 7E 0B5F                                jmp     sub_B5F
08101               * End of function sub_2762
08102               
08103               
08104               * =============== S U B R O U TI N E =======================================
08105               
08106               
08107         2768                sub_2768        EQU     *
08108 2768 7F 0050                                clr     $50
08109 276B 4A                                     deca
08110 276C 4A                                     deca
08111 276D 39                                     rts
08112               * End of function sub_2768
08113               
08114               
08115               * =============== S U B R O U TI N E =======================================
08116               
08117               
08118         276E                sub_276E        EQU     *
08119 276E BD 275D                                jsr     sub_275D
08120 2771 7E 0B6C                                jmp     sub_B6C
08121               * End of function sub_276E
08122               
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 141
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

08123               
08124               * =============== S U B R O U TI N E =======================================
08125               
08126               
08127         2774                sub_2774        EQU     *
08128 2774 BD 082D                                jsr     sub_82D
08129 2777 CE 0428                                ldx     #$428
08130 277A 96 42                                  ldaa    $42
08131 277C 4A                                     deca
08132 277D BD 0C78                                jsr     AddBAtoX
08133 2780 A6 00                                  ldaa    0,x
08134 2782 81 09                                  cmpa    #9
08135 2784 26 03                                  bne     locret_2789
08136 2786 7A 0042                                dec     $42
08137               
08138         2789                locret_2789     EQU     *
08139 2789 39                                     rts
08140               * End of function sub_2774
08141               
08142               
08143               * =============== S U B R O U TI N E =======================================
08144               
08145               
08146         278A                sub_278A        EQU     *
08147 278A 27 08                                  beq     locret_2794
08148               
08149         278C                loc_278C        EQU     *
08150 278C 37                                     pshb
08151 278D BD 0C3B                                jsr     sub_C3B
08152 2790 33                                     pulb
08153 2791 5A                                     decb
08154 2792 26 F8                                  bne     loc_278C
08155               
08156         2794                locret_2794     EQU     *
08157 2794 39                                     rts
08158               * End of function sub_278A
08159               
08160               * ---------------------------------------------------------------------------
08161 2795    00 00 00 00 00 00                   fcb     0,0,0,0,0,0,0
08162               * ---------------------------------------------------------------------------
08163               * START OF FUNCTION CHUNK FOR sub_13C8
08164               
08165         279C                loc_279C        EQU     *
08166 279C 27 16                                  beq     loc_27B4
08167 279E 81 3E                                  cmpa    #$3E             * '>'
08168 27A0 27 01                                  beq     loc_27A3
08169 27A2 39                                     rts
08170               * ---------------------------------------------------------------------------
08171               
08172         27A3                loc_27A3        EQU     *
08173 27A3 BD 124F                                jsr     sub_124F
08174 27A6 96 85                                  ldaa    $85
08175 27A8 81 3D                                  cmpa    #$3D             * '='
08176 27AA 27 03                                  beq     loc_27AF
08177 27AC 7E 13FF                                jmp     loc_13FF
08178               * ---------------------------------------------------------------------------
08179               
08180         27AF                loc_27AF        EQU     *
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 142
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

08181 27AF 86 35                                  ldaa    #$35             * '5'
08182 27B1 7E 13FC                                jmp     loc_13FC
08183               * ---------------------------------------------------------------------------
08184               
08185         27B4                loc_27B4        EQU     *
08186 27B4 BD 124F                                jsr     sub_124F
08187 27B7 96 85                                  ldaa    $85
08188 27B9 81 3D                                  cmpa    #$3D             * '='
08189 27BB 27 03                                  beq     loc_27C0
08190 27BD 7E 13F6                                jmp     loc_13F6
08191               * ---------------------------------------------------------------------------
08192               
08193         27C0                loc_27C0        EQU     *
08194 27C0 86 34                                  ldaa    #$34             * '4'
08195 27C2 7E 13FC                                jmp     loc_13FC
08196               * END OF FUNCTION CHUNK FOR sub_13C8
08197               
08198               * =============== S U B R O U TI N E =======================================
08199               
08200               
08201         27C5                sub_27C5        EQU     *
08202 27C5 DE 65                                  ldx     $65
08203 27C7 27 05                                  beq     loc_27CE
08204               
08205         27C9                loc_27C9        EQU     *
08206 27C9 86 BD                                  ldaa    #$BD             * '?'
08207 27CB 97 70                                  staa    $70
08208 27CD 39                                     rts
08209               * ---------------------------------------------------------------------------
08210               
08211         27CE                loc_27CE        EQU     *
08212 27CE 86 20                                  ldaa    #$20             * ' '
08213 27D0 97 70                                  staa    $70
08214 27D2 86 08                                  ldaa    #8
08215 27D4 97 71                                  staa    $71
08216 27D6 BD 0C3F                                jsr     sub_C3F
08217 27D9 DE 54                                  ldx     $54
08218 27DB DF 65                                  stx     $65
08219 27DD BD 0C30                                jsr     sub_C30
08220 27E0 BD 0C0A                                jsr     sub_C0A
08221 27E3 86 39                                  ldaa    #$39             * '9'
08222 27E5 BD 11E4                                jsr     sub_11E4
08223 27E8 7E 27C9                                jmp     loc_27C9
08224               * End of function sub_27C5
08225               
08226               
08227               * =============== S U B R O U TI N E =======================================
08228               
08229               
08230         27EB                sub_27EB        EQU     *
08231 27EB 86 53                                  ldaa    #$53             * 'S'
08232               * End of function sub_27EB
08233               
08234               
08235               * =============== S U B R O U TI N E =======================================
08236               
08237               
08238         27ED                sub_27ED        EQU     *
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 143
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

08239 27ED 36                                     psha
08240 27EE BD 16D3                                jsr     sub_16D3
08241 27F1 32                                     pula
08242 27F2 A7 00                                  staa    0,x
08243 27F4 7C 00A6                                inc     $A6
08244 27F7 39                                     rts
08245               * End of function sub_27ED
08246               
08247               * ---------------------------------------------------------------------------
08248               * START OF FUNCTION CHUNK FOR start_0
08249               
08250         27F8                loc_27F8        EQU     *
08251 27F8 BD 1200                                jsr     sub_1200
08252               
08253         27FB                loc_27FB        EQU     *
08254 27FB 96 5A                                  ldaa    $5A
08255 27FD 81 80                                  cmpa    #$80             * '?'
08256 27FF 26 03                                  bne     loc_2804
08257 2801 7E 180D                                jmp     loc_180D
08258               * ---------------------------------------------------------------------------
08259               
08260         2804                loc_2804        EQU     *
08261 2804 8D 07                                  bsr     sub_280D
08262 2806 96 C1                                  ldaa    $C1
08263 2808 27 F1                                  beq     loc_27FB
08264 280A 7E 1803                                jmp     loc_1803
08265               * END OF FUNCTION CHUNK FOR start_0
08266               
08267               * =============== S U B R O U TI N E =======================================
08268               
08269               
08270         280D                sub_280D        EQU     *
08271 280D 8D 03                                  bsr     sub_2812
08272 280F 7E 182A                                jmp     loc_182A
08273               * End of function sub_280D
08274               
08275               
08276               * =============== S U B R O U TI N E =======================================
08277               
08278               
08279         2812                sub_2812        EQU     *
08280               
08281               * FUNCTION CHUNK AT 1AF0 SIZE 0000000D BYTES
08282               * FUNCTION CHUNK AT 2000 SIZE 00000013 BYTES
08283               * FUNCTION CHUNK AT 2928 SIZE 00000006 BYTES
08284               
08285 2812 96 5A                                  ldaa    $5A
08286 2814 81 F0                                  cmpa    #$F0             * '?'
08287 2816 26 03                                  bne     loc_281B
08288 2818 7E 285B                                jmp     loc_285B
08289               * ---------------------------------------------------------------------------
08290               
08291         281B                loc_281B        EQU     *
08292 281B 81 F6                                  cmpa    #$F6             * '?'
08293 281D 26 06                                  bne     loc_2825
08294 281F BD 199C                                jsr     sub_199C
08295 2822 7E 187C                                jmp     loc_187C
08296               * ---------------------------------------------------------------------------
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 144
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

08297               
08298         2825                loc_2825        EQU     *
08299 2825 81 F8                                  cmpa    #$F8             * '?'
08300 2827 26 06                                  bne     loc_282F
08301 2829 BD 174E                                jsr     sub_174E
08302 282C 7E 187C                                jmp     loc_187C
08303               * ---------------------------------------------------------------------------
08304               
08305         282F                loc_282F        EQU     *
08306 282F 81 8A                                  cmpa    #$8A             * '?'
08307 2831 26 06                                  bne     loc_2839
08308 2833 BD 1A10                                jsr     sub_1A10
08309 2836 7E 187C                                jmp     loc_187C
08310               * ---------------------------------------------------------------------------
08311               
08312         2839                loc_2839        EQU     *
08313 2839 81 3B                                  cmpa    #$3B             * ';'
08314 283B 26 03                                  bne     loc_2840
08315 283D 7E 187C                                jmp     loc_187C
08316               * ---------------------------------------------------------------------------
08317               
08318         2840                loc_2840        EQU     *
08319 2840 7E 1AF0                                jmp     loc_1AF0
08320               * ---------------------------------------------------------------------------
08321               
08322         2843                loc_2843        EQU     *
08323 2843 7C 00C2                                inc     $C2
08324 2846 96 C1                                  ldaa    $C1
08325 2848 26 0D                                  bne     loc_2857
08326 284A DE BD                                  ldx     $BD
08327 284C 27 09                                  beq     loc_2857
08328 284E 01                                     nop
08329 284F 01                                     nop
08330 2850 01                                     nop
08331 2851 01                                     nop
08332 2852 01                                     nop
08333 2853 01                                     nop
08334 2854 BD 291F                                jsr     sub_291F
08335               
08336         2857                loc_2857        EQU     *
08337 2857 7C 00C1                                inc     $C1
08338 285A 39                                     rts
08339               * ---------------------------------------------------------------------------
08340               
08341         285B                loc_285B        EQU     *
08342 285B BD 124F                                jsr     sub_124F
08343 285E 96 85                                  ldaa    $85
08344 2860 81 3A                                  cmpa    #$3A             * ':'
08345 2862 27 06                                  beq     loc_286A
08346 2864 7A 0082                                dec     $82
08347 2867 7E 0EC1                                jmp     sub_EC1
08348               * ---------------------------------------------------------------------------
08349               
08350         286A                loc_286A        EQU     *
08351 286A D6 5C                                  ldab    $5C
08352 286C 96 5D                                  ldaa    $5D
08353 286E 36                                     psha
08354 286F 37                                     pshb
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 145
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

08355 2870 BD 1200                                jsr     sub_1200
08356 2873 96 5A                                  ldaa    $5A
08357 2875 81 8A                                  cmpa    #$8A             * '?'
08358 2877 26 03                                  bne     loc_287C
08359 2879 7E 1778                                jmp     loc_1778
08360               * ---------------------------------------------------------------------------
08361               
08362         287C                loc_287C        EQU     *
08363 287C 81 F6                                  cmpa    #$F6             * '?'
08364 287E 27 04                                  beq     loc_2884
08365 2880 81 F8                                  cmpa    #$F8             * '?'
08366 2882 26 0B                                  bne     loc_288F
08367               
08368         2884                loc_2884        EQU     *
08369 2884 BD 28D6                                jsr     sub_28D6
08370               
08371         2887                loc_2887        EQU     *
08372 2887 30                                     tsx
08373 2888 EE 00                                  ldx     0,x
08374 288A 31                                     ins
08375 288B 31                                     ins
08376 288C 7E 2608                                jmp     sub_2608
08377               * ---------------------------------------------------------------------------
08378               
08379         288F                loc_288F        EQU     *
08380 288F 81 3B                                  cmpa    #$3B             * ';'
08381 2891 26 09                                  bne     loc_289C
08382 2893 7C 00C0                                inc     $C0
08383 2896 96 B5                                  ldaa    $B5
08384 2898 81 02                                  cmpa    #2
08385 289A 27 EB                                  beq     loc_2887
08386               
08387         289C                loc_289C        EQU     *
08388 289C 96 C1                                  ldaa    $C1
08389 289E 27 05                                  beq     loc_28A5
08390               
08391         28A0                loc_28A0        EQU     *
08392 28A0 86 4F                                  ldaa    #$4F             * 'O'
08393 28A2 7E 2928                                jmp     loc_2928
08394               * ---------------------------------------------------------------------------
08395               
08396         28A5                loc_28A5        EQU     *
08397 28A5 7E 2000                                jmp     loc_2000
08398               * ---------------------------------------------------------------------------
08399               
08400         28A8                loc_28A8        EQU     *
08401 28A8 DE BD                                  ldx     $BD
08402 28AA 27 D8                                  beq     loc_2884
08403               
08404         28AC                loc_28AC        EQU     *
08405 28AC BD 2608                                jsr     sub_2608
08406 28AF DE 54                                  ldx     $54
08407 28B1 DF 9A                                  stx     $9A
08408 28B3 86 7E                                  ldaa    #$7E             * '~'
08409 28B5 BD 252E                                jsr     sub_252E
08410 28B8 4F                                     clra
08411 28B9 BD 252E                                jsr     sub_252E
08412 28BC 4F                                     clra
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 146
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

08413 28BD BD 252E                                jsr     sub_252E
08414 28C0 30                                     tsx
08415 28C1 EE 00                                  ldx     0,x
08416 28C3 31                                     ins
08417 28C4 31                                     ins
08418 28C5 DF 54                                  stx     $54
08419 28C7 BD 1ABB                                jsr     sub_1ABB
08420 28CA 7E 260A                                jmp     loc_260A
08421               * End of function sub_2812
08422               
08423               
08424               * =============== S U B R O U TI N E =======================================
08425               
08426               
08427         28CD                sub_28CD        EQU     *
08428 28CD BD 28D6                                jsr     sub_28D6
08429 28D0 BD 19B8                                jsr     sub_19B8
08430 28D3 96 5B                                  ldaa    $5B
08431 28D5 39                                     rts
08432               * End of function sub_28CD
08433               
08434               
08435               * =============== S U B R O U TI N E =======================================
08436               
08437               
08438         28D6                sub_28D6        EQU     *
08439 28D6 96 BF                                  ldaa    $BF
08440 28D8 26 14                                  bne     locret_28EE
08441 28DA 7C 00BF                                inc     $BF
08442 28DD 96 B5                                  ldaa    $B5
08443 28DF 81 02                                  cmpa    #2
08444 28E1 26 04                                  bne     loc_28E7
08445 28E3 96 C0                                  ldaa    $C0
08446 28E5 27 07                                  beq     locret_28EE
08447               
08448         28E7                loc_28E7        EQU     *
08449 28E7 DE 54                                  ldx     $54
08450 28E9 DF BD                                  stx     $BD
08451 28EB BD 1AAD                                jsr     sub_1AAD
08452               
08453         28EE                locret_28EE     EQU     *
08454 28EE 39                                     rts
08455               * End of function sub_28D6
08456               
08457               
08458               * =============== S U B R O U TI N E =======================================
08459               
08460               
08461         28EF                sub_28EF        EQU     *
08462 28EF 96 C2                                  ldaa    $C2
08463 28F1 81 01                                  cmpa    #1
08464 28F3 27 05                                  beq     loc_28FA
08465 28F5 86 50                                  ldaa    #$50             * 'P'
08466 28F7 BD 27ED                                jsr     sub_27ED
08467               
08468         28FA                loc_28FA        EQU     *
08469 28FA 7E 1200                                jmp     sub_1200
08470               * End of function sub_28EF
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 147
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

08471               
08472               
08473               * =============== S U B R O U TI N E =======================================
08474               
08475               
08476         28FD                sub_28FD        EQU     *
08477 28FD 7A 00C2                                dec     $C2
08478 2900 7E 15AD                                jmp     sub_15AD
08479               * End of function sub_28FD
08480               
08481               
08482               * =============== S U B R O U TI N E =======================================
08483               
08484               
08485         2903                sub_2903        EQU     *
08486               
08487               * FUNCTION CHUNK AT 16FD SIZE 0000002A BYTES
08488               * FUNCTION CHUNK AT 19BB SIZE 00000031 BYTES
08489               
08490 2903 7C 00C2                                inc     $C2
08491 2906 7E 16FD                                jmp     loc_16FD
08492               * End of function sub_2903
08493               
08494               * ---------------------------------------------------------------------------
08495               * START OF FUNCTION CHUNK FOR sub_1760
08496               
08497         2909                loc_2909        EQU     *
08498 2909 86 4F                                  ldaa    #$4F             * 'O'
08499 290B 7E 27ED                                jmp     sub_27ED
08500               * END OF FUNCTION CHUNK FOR sub_1760
08501               * ---------------------------------------------------------------------------
08502 290E    00                                  fcb     0
08503 290F    00                                  fcb     0
08504               * ---------------------------------------------------------------------------
08505 2910 8E 01FF                                lds     #$1FF
08506 2913 BD 0383                                jsr     sub_383
08507               * START OF FUNCTION CHUNK FOR start_0
08508               
08509         2916                loc_2916        EQU     *
08510 2916 BD 2FFA                                jsr     nullsub_1
08511 2919 BD 0EC9                                jsr     sub_EC9
08512 291C 7E 27F8                                jmp     loc_27F8
08513               * END OF FUNCTION CHUNK FOR start_0
08514               
08515               * =============== S U B R O U TI N E =======================================
08516               
08517               
08518         291F                sub_291F        EQU     *
08519 291F D6 54                                  ldab    $54
08520 2921 96 55                                  ldaa    $55
08521 2923 36                                     psha
08522 2924 37                                     pshb
08523 2925 7E 28AC                                jmp     loc_28AC
08524               * End of function sub_291F
08525               
08526               * ---------------------------------------------------------------------------
08527               * START OF FUNCTION CHUNK FOR sub_2812
08528               
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 148
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

08529         2928                loc_2928        EQU     *
08530 2928 BD 27ED                                jsr     sub_27ED
08531 292B 31                                     ins
08532 292C 31                                     ins
08533 292D 39                                     rts
08534               * END OF FUNCTION CHUNK FOR sub_2812
08535               * ---------------------------------------------------------------------------
08536 292E BD 1A08                                jsr     sub_1A08
08537 2931 7E 15E5                                jmp     sub_15E5
08538               
08539               * =============== S U B R O U TI N E =======================================
08540               
08541               
08542         2934                sub_2934        EQU     *
08543 2934 27 04                                  beq     loc_293A
08544               
08545         2936                loc_2936        EQU     *
08546 2936 7F 00AA                                clr     $AA
08547 2939 39                                     rts
08548               * ---------------------------------------------------------------------------
08549               
08550         293A                loc_293A        EQU     *
08551 293A B6 0571                                ldaa    byte_571
08552 293D 81 02                                  cmpa    #2
08553 293F 26 F5                                  bne     loc_2936
08554 2941 DE AE                                  ldx     $AE
08555 2943 27 F1                                  beq     loc_2936
08556 2945 B6 1B7D                                ldaa    byte_1B7D
08557 2948 36                                     psha
08558 2949 86 36                                  ldaa    #$36             * '6'
08559 294B B7 1B7D                                staa    byte_1B7D
08560 294E 01                                     nop
08561 294F 01                                     nop
08562 2950 01                                     nop
08563 2951 BD 2971                                jsr     sub_2971
08564 2954 CE 0500                                ldx     #$500
08565 2957 DF 63                                  stx     $63
08566               
08567         2959                loc_2959        EQU     *
08568 2959 DE 63                                  ldx     $63
08569 295B A6 00                                  ldaa    0,x
08570 295D 08                                     inx
08571 295E DF 63                                  stx     $63
08572 2960 81 0D                                  cmpa    #$D
08573 2962 27 05                                  beq     loc_2969
08574 2964 BD 1B71                                jsr     loc_1B71
08575 2967 20 F0                                  bra     loc_2959
08576               * ---------------------------------------------------------------------------
08577               
08578         2969                loc_2969        EQU     *
08579 2969 01                                     nop
08580 296A 32                                     pula
08581 296B B7 1B7D                                staa    byte_1B7D
08582 296E 7E 2936                                jmp     loc_2936
08583               * End of function sub_2934
08584               
08585               
08586               * =============== S U B R O U TI N E =======================================
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 149
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

08587               
08588               
08589         2971                sub_2971        EQU     *
08590 2971 BD 1B8A                                jsr     sub_1B8A
08591 2974 4F                                     clra
08592 2975 96 AE                                  ldaa    $AE
08593 2977 BD 2C9A                                jsr     sub_2C9A
08594 297A 96 AF                                  ldaa    $AF
08595 297C BD 2C9A                                jsr     sub_2C9A
08596 297F 86 20                                  ldaa    #$20             * ' '
08597 2981 BD 1B71                                jsr     loc_1B71
08598 2984 7E 1B71                                jmp     loc_1B71
08599               * End of function sub_2971
08600               
08601               * ---------------------------------------------------------------------------
08602               
08603         2987                loc_2987        EQU     *
08604 2987 F6 0571                                ldab    byte_571
08605 298A 26 02                                  bne     loc_298E
08606 298C 32                                     pula
08607 298D 39                                     rts
08608               * ---------------------------------------------------------------------------
08609               
08610         298E                loc_298E        EQU     *
08611 298E BD 038D                                jsr     sub_38D
08612 2991 32                                     pula
08613 2992 39                                     rts
08614               * ---------------------------------------------------------------------------
08615               * START OF FUNCTION CHUNK FOR sub_1B8A
08616               
08617         2993                loc_2993        EQU     *
08618 2993 F6 0571                                ldab    byte_571
08619 2996 26 01                                  bne     loc_2999
08620 2998 39                                     rts
08621               * ---------------------------------------------------------------------------
08622               
08623         2999                loc_2999        EQU     *
08624 2999 F6 1B7D                                ldab    byte_1B7D
08625 299C C1 36                                  cmpb    #$36             * '6'
08626 299E 27 01                                  beq     loc_29A1
08627 29A0 39                                     rts
08628               * ---------------------------------------------------------------------------
08629               
08630         29A1                loc_29A1        EQU     *
08631 29A1 96 B2                                  ldaa    $B2
08632 29A3 26 26                                  bne     loc_29CB
08633               
08634         29A5                loc_29A5        EQU     *
08635 29A5 86 0C                                  ldaa    #$C
08636 29A7 BD 038D                                jsr     sub_38D
08637 29AA B6 03A2                                ldaa    byte_3A2
08638 29AD 27 0A                                  beq     loc_29B9
08639 29AF 97 B2                                  staa    $B2
08640               
08641         29B1                loc_29B1        EQU     *
08642 29B1 BD 038A                                jsr     sub_38A
08643 29B4 7A 00B2                                dec     $B2
08644 29B7 26 F8                                  bne     loc_29B1
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 150
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

08645               
08646         29B9                loc_29B9        EQU     *
08647 29B9 B6 0571                                ldaa    byte_571
08648 29BC 81 01                                  cmpa    #1
08649 29BE 27 08                                  beq     loc_29C8
08650 29C0 BD 03A7                                jsr     sub_3A7
08651 29C3 BD 038A                                jsr     sub_38A
08652 29C6 86 03                                  ldaa    #3
08653               
08654         29C8                loc_29C8        EQU     *
08655 29C8 BB 03A2                                adda    byte_3A2
08656               
08657         29CB                loc_29CB        EQU     *
08658 29CB B1 03A1                                cmpa    byte_3A1
08659 29CE 26 02                                  bne     loc_29D2
08660 29D0 20 D3                                  bra     loc_29A5
08661               * ---------------------------------------------------------------------------
08662               
08663         29D2                loc_29D2        EQU     *
08664 29D2 4C                                     inca
08665 29D3 97 B2                                  staa    $B2
08666 29D5 BD 038A                                jsr     sub_38A
08667 29D8 86 0D                                  ldaa    #$D
08668 29DA 39                                     rts
08669               * END OF FUNCTION CHUNK FOR sub_1B8A
08670               * ---------------------------------------------------------------------------
08671 29DB B2 860D                                sbca    $860D
08672 29DE BD 038D                                jsr     sub_38D
08673 29E1 86 0A                                  ldaa    #$A
08674 29E3 BD 038D                                jsr     sub_38D
08675 29E6 86 0D                                  ldaa    #$D
08676 29E8 39                                     rts
08677               
08678               * =============== S U B R O U TI N E =======================================
08679               
08680               
08681         29E9                sub_29E9        EQU     *
08682 29E9 96 A2                                  ldaa    $A2
08683 29EB 81 3C                                  cmpa    #$3C             * '<'
08684 29ED 25 01                                  bcs     loc_29F0
08685 29EF 3F                                     swi
08686               
08687         29F0                loc_29F0        EQU     *
08688 29F0 7C 00A2                                inc     $A2
08689 29F3 39                                     rts
08690               * End of function sub_29E9
08691               
08692               
08693               * =============== S U B R O U TI N E =======================================
08694               
08695               
08696         29F4                sub_29F4        EQU     *
08697 29F4 96 67                                  ldaa    $67
08698 29F6 81 1F                                  cmpa    #$1F
08699 29F8 25 01                                  bcs     loc_29FB
08700 29FA 3F                                     swi
08701               
08702         29FB                loc_29FB        EQU     *
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 151
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

08703 29FB 7C 0067                                inc     $67
08704 29FE 39                                     rts
08705               * End of function sub_29F4
08706               
08707               * ---------------------------------------------------------------------------
08708 29FF    00                                  fcb     0
08709               
08710               * =============== S U B R O U TI N E =======================================
08711               
08712               * Attributes: thunk
08713               
08714         2A00                sub_2A00        EQU     *
08715 2A00 7E 039E                                jmp     sub_39E
08716               * End of function sub_2A00
08717               
08718               
08719               * =============== S U B R O U TI N E =======================================
08720               
08721               
08722         2A03                sub_2A03        EQU     *
08723 2A03 36                                     psha
08724 2A04 86 20                                  ldaa    #$20             * ' '
08725 2A06 20 50                                  bra     loc_2A58
08726               * End of function sub_2A03
08727               
08728               
08729               * =============== S U B R O U TI N E =======================================
08730               
08731               
08732         2A08                sub_2A08        EQU     *
08733 2A08 86 0D                                  ldaa    #$D
08734 2A0A 20 43                                  bra     sub_2A4F
08735               * End of function sub_2A08
08736               
08737               * ---------------------------------------------------------------------------
08738 2A0C 97 42                                  staa    $42
08739 2A0E 39                                     rts
08740               * ---------------------------------------------------------------------------
08741 2A0F 7E DF43                                jmp     $DF43
08742               
08743               * =============== S U B R O U TI N E =======================================
08744               
08745               
08746         2A12                sub_2A12        EQU     *
08747               
08748               * FUNCTION CHUNK AT 2A22 SIZE 0000002D BYTES
08749               
08750 2A12 96 44                                  ldaa    $44
08751 2A14 D6 43                                  ldab    $43
08752 2A16 CB 00                                  addb    #0
08753 2A18 20 08                                  bra     loc_2A22
08754               * End of function sub_2A12
08755               
08756               
08757               * =============== S U B R O U TI N E =======================================
08758               
08759               
08760         2A1A                sub_2A1A        EQU     *
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 152
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

08761 2A1A 36                                     psha
08762 2A1B 37                                     pshb
08763 2A1C 30                                     tsx
08764 2A1D EE 00                                  ldx     0,x
08765 2A1F 31                                     ins
08766 2A20 31                                     ins
08767 2A21 39                                     rts
08768               * End of function sub_2A1A
08769               
08770               * ---------------------------------------------------------------------------
08771               * START OF FUNCTION CHUNK FOR sub_2A12
08772               
08773         2A22                loc_2A22        EQU     *
08774 2A22 BD 2A1A                                jsr     sub_2A1A
08775 2A25 A6 00                                  ldaa    0,x
08776 2A27 97 42                                  staa    $42
08777               
08778         2A29                loc_2A29        EQU     *
08779 2A29 96 42                                  ldaa    $42
08780 2A2B 80 04                                  suba    #4
08781 2A2D 26 03                                  bne     loc_2A32
08782 2A2F 7E 2A4E                                jmp     locret_2A4E
08783               * ---------------------------------------------------------------------------
08784               
08785         2A32                loc_2A32        EQU     *
08786 2A32 96 42                                  ldaa    $42
08787 2A34 97 42                                  staa    $42
08788 2A36 BD 2A4F                                jsr     sub_2A4F
08789 2A39 DE 43                                  ldx     $43
08790 2A3B 08                                     inx
08791 2A3C DF 43                                  stx     $43
08792 2A3E 96 44                                  ldaa    $44
08793 2A40 D6 43                                  ldab    $43
08794 2A42 CB 00                                  addb    #0
08795 2A44 BD 2A1A                                jsr     sub_2A1A
08796 2A47 A6 00                                  ldaa    0,x
08797 2A49 97 42                                  staa    $42
08798 2A4B 7E 2A29                                jmp     loc_2A29
08799               * ---------------------------------------------------------------------------
08800               
08801         2A4E                locret_2A4E     EQU     *
08802 2A4E 39                                     rts
08803               * END OF FUNCTION CHUNK FOR sub_2A12
08804               
08805               * =============== S U B R O U TI N E =======================================
08806               
08807               
08808         2A4F                sub_2A4F        EQU     *
08809               
08810               * FUNCTION CHUNK AT 2CAF SIZE 00000009 BYTES
08811               * FUNCTION CHUNK AT 2D10 SIZE 0000000B BYTES
08812               
08813 2A4F 81 0D                                  cmpa    #$D
08814 2A51 26 09                                  bne     loc_2A5C
08815 2A53 36                                     psha
08816 2A54 7E 2D10                                jmp     loc_2D10
08817               * ---------------------------------------------------------------------------
08818 2A57 01                                     nop
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 153
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

08819               
08820         2A58                loc_2A58        EQU     *
08821 2A58 8D 02                                  bsr     loc_2A5C
08822               
08823         2A5A                loc_2A5A        EQU     *
08824 2A5A 32                                     pula
08825 2A5B 39                                     rts
08826               * ---------------------------------------------------------------------------
08827               
08828         2A5C                loc_2A5C        EQU     *
08829 2A5C 7E 2CAF                                jmp     loc_2CAF
08830               * End of function sub_2A4F
08831               
08832               
08833               * =============== S U B R O U TI N E =======================================
08834               
08835               
08836         2A5F                sub_2A5F        EQU     *
08837               
08838               * FUNCTION CHUNK AT 2CA2 SIZE 0000000D BYTES
08839               
08840 2A5F 97 00                                  staa    0
08841 2A61 7E 2CA2                                jmp     loc_2CA2
08842               * End of function sub_2A5F
08843               
08844               * ---------------------------------------------------------------------------
08845 2A64 7E 03A7                                jmp     sub_3A7
08846               
08847               * =============== S U B R O U TI N E =======================================
08848               
08849               
08850         2A67                sub_2A67        EQU     *
08851 2A67 DF 00                                  stx     0
08852 2A69 34                                     des
08853 2A6A 30                                     tsx
08854 2A6B 6F 00                                  clr     0,x
08855 2A6D 63 00                                  com     0,x
08856               
08857         2A6F                loc_2A6F        EQU     *
08858 2A6F DE 04                                  ldx     4
08859 2A71 DF 06                                  stx     6
08860 2A73 8D 3D                                  bsr     sub_2AB2
08861 2A75 97 02                                  staa    2
08862 2A77 96 07                                  ldaa    7
08863 2A79 36                                     psha
08864 2A7A 96 02                                  ldaa    2
08865 2A7C 4D                                     tsta
08866 2A7D 26 F0                                  bne     loc_2A6F
08867 2A7F 5D                                     tstb
08868 2A80 26 ED                                  bne     loc_2A6F
08869 2A82 DE 00                                  ldx     0
08870               
08871         2A84                loc_2A84        EQU     *
08872 2A84 32                                     pula
08873 2A85 4D                                     tsta
08874 2A86 2A 01                                  bpl     loc_2A89
08875 2A88 39                                     rts
08876               * ---------------------------------------------------------------------------
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 154
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

08877               
08878         2A89                loc_2A89        EQU     *
08879 2A89 81 09                                  cmpa    #9
08880 2A8B 2F 02                                  ble     loc_2A8F
08881 2A8D 8B 07                                  adda    #7
08882               
08883         2A8F                loc_2A8F        EQU     *
08884 2A8F 8B 30                                  adda    #$30             * '0'
08885 2A91 A7 00                                  staa    0,x
08886 2A93 08                                     inx
08887 2A94 20 EE                                  bra     loc_2A84
08888               * End of function sub_2A67
08889               
08890               
08891               * =============== S U B R O U TI N E =======================================
08892               
08893               
08894         2A96                sub_2A96        EQU     *
08895 2A96 36                                     psha
08896 2A97 37                                     pshb
08897 2A98 86 10                                  ldaa    #$10
08898 2A9A 36                                     psha
08899 2A9B 4F                                     clra
08900 2A9C 5F                                     clrb
08901 2A9D 30                                     tsx
08902               
08903         2A9E                loc_2A9E        EQU     *
08904 2A9E 48                                     asla
08905 2A9F 59                                     rolb
08906 2AA0 68 02                                  asl     2,x
08907 2AA2 69 01                                  rol     1,x
08908 2AA4 24 04                                  bcc     loc_2AAA
08909 2AA6 9B 07                                  adda    7
08910 2AA8 D9 06                                  adcb    6
08911               
08912         2AAA                loc_2AAA        EQU     *
08913 2AAA 6A 00                                  dec     0,x
08914 2AAC 26 F0                                  bne     loc_2A9E
08915 2AAE 31                                     ins
08916 2AAF 31                                     ins
08917 2AB0 31                                     ins
08918 2AB1 39                                     rts
08919               * End of function sub_2A96
08920               
08921               
08922               * =============== S U B R O U TI N E =======================================
08923               
08924               
08925         2AB2                sub_2AB2        EQU     *
08926 2AB2 36                                     psha
08927 2AB3 37                                     pshb
08928 2AB4 96 06                                  ldaa    6
08929 2AB6 D6 07                                  ldab    7
08930 2AB8 37                                     pshb
08931 2AB9 36                                     psha
08932 2ABA 34                                     des
08933 2ABB 30                                     tsx
08934 2ABC 86 01                                  ldaa    #1
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 155
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

08935 2ABE 6D 01                                  tst     1,x
08936 2AC0 2B 0B                                  bmi     loc_2ACD
08937               
08938         2AC2                loc_2AC2        EQU     *
08939 2AC2 4C                                     inca
08940 2AC3 68 02                                  asl     2,x
08941 2AC5 69 01                                  rol     1,x
08942 2AC7 2B 04                                  bmi     loc_2ACD
08943 2AC9 81 11                                  cmpa    #$11
08944 2ACB 26 F5                                  bne     loc_2AC2
08945               
08946         2ACD                loc_2ACD        EQU     *
08947 2ACD A7 00                                  staa    0,x
08948 2ACF E6 03                                  ldab    3,x
08949 2AD1 A6 04                                  ldaa    4,x
08950 2AD3 6F 03                                  clr     3,x
08951 2AD5 6F 04                                  clr     4,x
08952               
08953         2AD7                loc_2AD7        EQU     *
08954 2AD7 A0 02                                  suba    2,x
08955 2AD9 E2 01                                  sbcb    1,x
08956 2ADB 24 07                                  bcc     loc_2AE4
08957 2ADD AB 02                                  adda    2,x
08958 2ADF E9 01                                  adcb    1,x
08959 2AE1 0C                                     clc
08960 2AE2 20 01                                  bra     loc_2AE5
08961               * ---------------------------------------------------------------------------
08962               
08963         2AE4                loc_2AE4        EQU     *
08964 2AE4 0D                                     sec
08965               
08966         2AE5                loc_2AE5        EQU     *
08967 2AE5 69 04                                  rol     4,x
08968 2AE7 69 03                                  rol     3,x
08969 2AE9 64 01                                  lsr     1,x
08970 2AEB 66 02                                  ror     2,x
08971 2AED 6A 00                                  dec     0,x
08972 2AEF 26 E6                                  bne     loc_2AD7
08973 2AF1 D7 06                                  stab    6
08974 2AF3 97 07                                  staa    7
08975 2AF5 31                                     ins
08976 2AF6 31                                     ins
08977 2AF7 31                                     ins
08978 2AF8 33                                     pulb
08979 2AF9 32                                     pula
08980 2AFA 39                                     rts
08981               * End of function sub_2AB2
08982               
08983               * ---------------------------------------------------------------------------
08984 2AFB    4F 41 52 44 2C                      fcb     $4F,$41,$52,$44,$2C
08985               
08986               * =============== S U B R O U TI N E =======================================
08987               
08988               * Attributes: thunk
08989               
08990         2B00                sub_2B00        EQU     *
08991 2B00 20 7D                                  bra     sub_2B7F
08992               * End of function sub_2B00
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 156
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

08993               
08994               
08995               * =============== S U B R O U TI N E =======================================
08996               
08997               
08998         2B02                sub_2B02        EQU     *
08999 2B02 FE 0575                                ldx     unk_575
09000 2B05 27 0C                                  beq     loc_2B13
09001               
09002         2B07                loc_2B07        EQU     *
09003 2B07 86 BD                                  ldaa    #$BD             * '?'
09004 2B09 97 70                                  staa    $70
09005               
09006         2B0B                loc_2B0B        EQU     *
09007 2B0B FE 0575                                ldx     unk_575
09008 2B0E DF 71                                  stx     $71
09009 2B10 7E 0C43                                jmp     sub_C43
09010               * ---------------------------------------------------------------------------
09011               
09012         2B13                loc_2B13        EQU     *
09013 2B13 CE 201C                                ldx     #locret_201C
09014 2B16 BD 2B7A                                jsr     sub_2B7A
09015 2B19 DE 54                                  ldx     $54
09016 2B1B FF 0575                                stx     unk_575
09017 2B1E BD 0C30                                jsr     sub_C30
09018 2B21 CE 8610                                ldx     #$8610
09019 2B24 BD 2B7A                                jsr     sub_2B7A
09020 2B27 86 36                                  ldaa    #$36             * '6'
09021 2B29 BD 2B74                                jsr     sub_2B74
09022 2B2C 86 4F                                  ldaa    #$4F             * 'O'
09023 2B2E BD 2B74                                jsr     sub_2B74
09024 2B31 86 5F                                  ldaa    #$5F             * '_'
09025 2B33 BD 2B74                                jsr     sub_2B74
09026 2B36 86 30                                  ldaa    #$30             * '0'
09027 2B38 BD 2B74                                jsr     sub_2B74
09028 2B3B 86 48                                  ldaa    #$48             * 'H'
09029 2B3D 8D 35                                  bsr     sub_2B74
09030 2B3F 86 59                                  ldaa    #$59             * 'Y'
09031 2B41 8D 31                                  bsr     sub_2B74
09032 2B43 CE 6802                                ldx     #$6802
09033 2B46 8D 32                                  bsr     sub_2B7A
09034 2B48 CE 6901                                ldx     #$6901
09035 2B4B 8D 2D                                  bsr     sub_2B7A
09036 2B4D CE 2404                                ldx     #loc_2404
09037 2B50 8D 28                                  bsr     sub_2B7A
09038 2B52 CE 9B01                                ldx     #$9B01
09039 2B55 8D 23                                  bsr     sub_2B7A
09040 2B57 CE D900                                ldx     #$D900
09041 2B5A 8D 1E                                  bsr     sub_2B7A
09042 2B5C CE 6A00                                ldx     #$6A00
09043 2B5F 8D 19                                  bsr     sub_2B7A
09044 2B61 CE 26F0                                ldx     #loc_26F0
09045 2B64 8D 14                                  bsr     sub_2B7A
09046 2B66 86 31                                  ldaa    #$31             * '1'
09047 2B68 8D 0A                                  bsr     sub_2B74
09048 2B6A 8D 08                                  bsr     sub_2B74
09049 2B6C 8D 06                                  bsr     sub_2B74
09050 2B6E 86 39                                  ldaa    #$39             * '9'
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 157
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

09051 2B70 8D 02                                  bsr     sub_2B74
09052 2B72 20 93                                  bra     loc_2B07
09053               * End of function sub_2B02
09054               
09055               
09056               * =============== S U B R O U TI N E =======================================
09057               
09058               
09059         2B74                sub_2B74        EQU     *
09060 2B74 36                                     psha
09061 2B75 BD 11E4                                jsr     sub_11E4
09062 2B78 32                                     pula
09063 2B79 39                                     rts
09064               * End of function sub_2B74
09065               
09066               
09067               * =============== S U B R O U TI N E =======================================
09068               
09069               
09070         2B7A                sub_2B7A        EQU     *
09071 2B7A DF 70                                  stx     $70
09072 2B7C 7E 0C3F                                jmp     sub_C3F
09073               * End of function sub_2B7A
09074               
09075               
09076               * =============== S U B R O U TI N E =======================================
09077               
09078               
09079         2B7F                sub_2B7F        EQU     *
09080 2B7F FE 0577                                ldx     unk_577
09081 2B82 27 0C                                  beq     loc_2B90
09082               
09083         2B84                loc_2B84        EQU     *
09084 2B84 86 BD                                  ldaa    #$BD             * '?'
09085 2B86 97 70                                  staa    $70
09086 2B88 FE 0577                                ldx     unk_577
09087 2B8B DF 71                                  stx     $71
09088 2B8D 7E 0C43                                jmp     sub_C43
09089               * ---------------------------------------------------------------------------
09090               
09091         2B90                loc_2B90        EQU     *
09092 2B90 CE 2049                                ldx     #$2049
09093 2B93 8D E5                                  bsr     sub_2B7A
09094 2B95 DE 54                                  ldx     $54
09095 2B97 FF 0577                                stx     unk_577
09096 2B9A BD 0C30                                jsr     sub_C30
09097 2B9D CE 9600                                ldx     #$9600
09098 2BA0 8D D8                                  bsr     sub_2B7A
09099 2BA2 CE D601                                ldx     #$D601
09100 2BA5 8D D3                                  bsr     sub_2B7A
09101 2BA7 86 37                                  ldaa    #$37             * '7'
09102 2BA9 8D C9                                  bsr     sub_2B74
09103 2BAB 4A                                     deca
09104 2BAC 8D C6                                  bsr     sub_2B74
09105 2BAE 86 34                                  ldaa    #$34             * '4'
09106 2BB0 8D C2                                  bsr     sub_2B74
09107 2BB2 86 30                                  ldaa    #$30             * '0'
09108 2BB4 8D BE                                  bsr     sub_2B74
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 158
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

09109 2BB6 CE 8601                                ldx     #$8601
09110 2BB9 8D BF                                  bsr     sub_2B7A
09111 2BBB CE 6D01                                ldx     #$6D01
09112 2BBE 8D BA                                  bsr     sub_2B7A
09113 2BC0 CE 2B0B                                ldx     #loc_2B0B
09114 2BC3 8D B5                                  bsr     sub_2B7A
09115 2BC5 86 4C                                  ldaa    #$4C             * 'L'
09116 2BC7 8D AB                                  bsr     sub_2B74
09117 2BC9 CE 6802                                ldx     #$6802
09118 2BCC 8D AC                                  bsr     sub_2B7A
09119 2BCE CE 6901                                ldx     #$6901
09120 2BD1 8D A7                                  bsr     sub_2B7A
09121 2BD3 CE 2B04                                ldx     #$2B04
09122 2BD6 8D A2                                  bsr     sub_2B7A
09123 2BD8 CE 8111                                ldx     #$8111
09124 2BDB 8D 9D                                  bsr     sub_2B7A
09125 2BDD CE 26F5                                ldx     #loc_26F5
09126 2BE0 8D 98                                  bsr     sub_2B7A
09127 2BE2 CE A700                                ldx     #$A700
09128 2BE5 8D 93                                  bsr     sub_2B7A
09129 2BE7 CE E603                                ldx     #$E603
09130 2BEA 8D 8E                                  bsr     sub_2B7A
09131 2BEC CE A604                                ldx     #$A604
09132 2BEF 8D 89                                  bsr     sub_2B7A
09133 2BF1 CE 6F03                                ldx     #$6F03
09134 2BF4 8D 84                                  bsr     sub_2B7A
09135 2BF6 CE 6F04                                ldx     #$6F04
09136 2BF9 BD 2B7A                                jsr     sub_2B7A
09137 2BFC CE A002                                ldx     #$A002
09138 2BFF BD 2B7A                                jsr     sub_2B7A
09139 2C02 CE E201                                ldx     #$E201
09140 2C05 BD 2B7A                                jsr     sub_2B7A
09141 2C08 CE 2407                                ldx     #$2407
09142 2C0B BD 2B7A                                jsr     sub_2B7A
09143 2C0E CE AB02                                ldx     #$AB02
09144 2C11 BD 2B7A                                jsr     sub_2B7A
09145 2C14 CE E901                                ldx     #$E901
09146 2C17 BD 2B7A                                jsr     sub_2B7A
09147 2C1A 86 0C                                  ldaa    #$C
09148 2C1C BD 2B74                                jsr     sub_2B74
09149 2C1F CE 2001                                ldx     #$2001
09150 2C22 BD 2B7A                                jsr     sub_2B7A
09151 2C25 86 0D                                  ldaa    #$D
09152 2C27 BD 2B74                                jsr     sub_2B74
09153 2C2A CE 6904                                ldx     #$6904
09154 2C2D BD 2B7A                                jsr     sub_2B7A
09155 2C30 CE 6903                                ldx     #$6903
09156 2C33 BD 2B7A                                jsr     sub_2B7A
09157 2C36 CE 6401                                ldx     #$6401
09158 2C39 BD 2B7A                                jsr     sub_2B7A
09159 2C3C CE 6602                                ldx     #$6602
09160 2C3F BD 2B7A                                jsr     sub_2B7A
09161 2C42 CE 6A00                                ldx     #$6A00
09162               
09163         2C45                loc_2C45        EQU     *
09164 2C45 BD 2B7A                                jsr     sub_2B7A
09165 2C48 CE 26E6                                ldx     #$26E6
09166 2C4B BD 2B7A                                jsr     sub_2B7A
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 159
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

09167 2C4E CE D700                                ldx     #$D700
09168 2C51 BD 2B7A                                jsr     sub_2B7A
09169 2C54 CE 9701                                ldx     #$9701
09170 2C57 BD 2B7A                                jsr     sub_2B7A
09171 2C5A 86 31                                  ldaa    #$31             * '1'
09172 2C5C BD 2B74                                jsr     sub_2B74
09173 2C5F BD 2B74                                jsr     sub_2B74
09174 2C62 BD 2B74                                jsr     sub_2B74
09175 2C65 86 33                                  ldaa    #$33             * '3'
09176 2C67 BD 2B74                                jsr     sub_2B74
09177 2C6A 4A                                     deca
09178 2C6B BD 2B74                                jsr     sub_2B74
09179 2C6E 86 39                                  ldaa    #$39             * '9'
09180 2C70 BD 2B74                                jsr     sub_2B74
09181 2C73 7E 2B84                                jmp     loc_2B84
09182               * End of function sub_2B7F
09183               
09184               * ---------------------------------------------------------------------------
09185 2C76    0101                stacksave       fdb     $101
09186               
09187               * =============== S U B R O U TI N E =======================================
09188               
09189               
09190         2C78                start_0         EQU     *
09191               
09192               * FUNCTION CHUNK AT 1803 SIZE 0000000A BYTES
09193               * FUNCTION CHUNK AT 27F8 SIZE 00000015 BYTES
09194               * FUNCTION CHUNK AT 2916 SIZE 00000009 BYTES
09195               
09196 2C78 BF 2C76                                sts     stacksave        * safe the current stack
09197 2C7B 8E 01FF                                lds     #$1FF            * set our own stack pointer
09198 2C7E BD 0383                                jsr     sub_383          * get command line parameters (if any provided)
09199 2C81 BD 2E4F                                jsr     sub_2E4F
09200 2C84 7E 2916                                jmp     loc_2916
09201               * End of function start_0
09202               
09203               * ---------------------------------------------------------------------------
09204 2C87 01                                     nop
09205 2C88 01                                     nop
09206 2C89 01                                     nop
09207               * START OF FUNCTION CHUNK FOR sub_26D7
09208               
09209         2C8A                loc_2C8A        EQU     *
09210 2C8A BE 2C76                                lds     stacksave
09211 2C8D 7E 03AA                                jmp     loc_3AA
09212               * END OF FUNCTION CHUNK FOR sub_26D7
09213               
09214               * =============== S U B R O U TI N E =======================================
09215               
09216               
09217         2C90                sub_2C90        EQU     *
09218 2C90 96 45                                  ldaa    $45
09219 2C92 BD 1C0E                                jsr     sub_1C0E
09220 2C95 96 46                                  ldaa    $46
09221 2C97 7E 1C0E                                jmp     sub_1C0E
09222               * End of function sub_2C90
09223               
09224               
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 160
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

09225               * =============== S U B R O U TI N E =======================================
09226               
09227               
09228         2C9A                sub_2C9A        EQU     *
09229               
09230               * FUNCTION CHUNK AT 1BB9 SIZE 00000009 BYTES
09231               
09232 2C9A BD 1B9D                                jsr     sub_1B9D
09233 2C9D 96 35                                  ldaa    $35
09234 2C9F 7E 1BB9                                jmp     loc_1BB9
09235               * End of function sub_2C9A
09236               
09237               * ---------------------------------------------------------------------------
09238               * START OF FUNCTION CHUNK FOR sub_2A5F
09239               
09240         2CA2                loc_2CA2        EQU     *
09241 2CA2 BD 1B9D                                jsr     sub_1B9D
09242 2CA5 96 35                                  ldaa    $35
09243 2CA7 BD 2A4F                                jsr     sub_2A4F
09244 2CAA 96 36                                  ldaa    $36
09245 2CAC 7E 2A4F                                jmp     sub_2A4F
09246               * END OF FUNCTION CHUNK FOR sub_2A5F
09247               * ---------------------------------------------------------------------------
09248               * START OF FUNCTION CHUNK FOR sub_2A4F
09249               
09250         2CAF                loc_2CAF        EQU     *
09251 2CAF F6 0570                                ldab    unk_570
09252 2CB2 26 03                                  bne     locret_2CB7
09253 2CB4 BD 038D                                jsr     sub_38D
09254               
09255         2CB7                locret_2CB7     EQU     *
09256 2CB7 39                                     rts
09257               * END OF FUNCTION CHUNK FOR sub_2A4F
09258               * ---------------------------------------------------------------------------
09259               * START OF FUNCTION CHUNK FOR sub_1644
09260               
09261         2CB8                loc_2CB8        EQU     *
09262 2CB8 DE AC                                  ldx     $AC
09263 2CBA A6 00                                  ldaa    0,x
09264 2CBC 81 23                                  cmpa    #$23             * '#'
09265 2CBE 27 0C                                  beq     loc_2CCC
09266 2CC0 BD 1B8A                                jsr     sub_1B8A
09267 2CC3 BD 1C30                                jsr     sub_1C30
09268 2CC6 CE 0500                                ldx     #$500
09269 2CC9 7E 1B4A                                jmp     loc_1B4A
09270               * ---------------------------------------------------------------------------
09271               
09272         2CCC                loc_2CCC        EQU     *
09273 2CCC A6 01                                  ldaa    1,x
09274 2CCE 81 4E                                  cmpa    #$4E             * 'N'
09275 2CD0 26 15                                  bne     loc_2CE7
09276 2CD2 B6 0571                                ldaa    byte_571
09277 2CD5 B7 0579                                staa    unk_579
09278 2CD8 B6 1B7D                                ldaa    byte_1B7D
09279 2CDB B7 057A                                staa    unk_57A
09280 2CDE 86 39                                  ldaa    #$39             * '9'
09281 2CE0 B7 1B7D                                staa    byte_1B7D
09282 2CE3 86 01                                  ldaa    #1
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 161
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

09283 2CE5 20 09                                  bra     loc_2CF0
09284               * ---------------------------------------------------------------------------
09285               
09286         2CE7                loc_2CE7        EQU     *
09287 2CE7 B6 057A                                ldaa    unk_57A
09288 2CEA B7 1B7D                                staa    byte_1B7D
09289 2CED B6 0579                                ldaa    unk_579
09290               
09291         2CF0                loc_2CF0        EQU     *
09292 2CF0 B7 0571                                staa    byte_571
09293               
09294         2CF3                loc_2CF3        EQU     *
09295 2CF3 08                                     inx
09296 2CF4 A6 00                                  ldaa    0,x
09297 2CF6 81 0D                                  cmpa    #$D
09298 2CF8 26 F9                                  bne     loc_2CF3
09299 2CFA 08                                     inx
09300 2CFB DF AC                                  stx     $AC
09301 2CFD 7E 1B33                                jmp     loc_1B33
09302               * END OF FUNCTION CHUNK FOR sub_1644
09303               
09304               * =============== S U B R O U TI N E =======================================
09305               
09306               
09307         2D00                sub_2D00        EQU     *
09308 2D00 B6 0571                                ldaa    byte_571
09309               
09310         2D03                loc_2D03        EQU     *
09311 2D03 B7 0579                                staa    unk_579
09312 2D06 B6 1B7D                                ldaa    byte_1B7D
09313 2D09 B7 057A                                staa    unk_57A
09314 2D0C B6 0573                                ldaa    unk_573
09315 2D0F 39                                     rts
09316               * End of function sub_2D00
09317               
09318               * ---------------------------------------------------------------------------
09319               * START OF FUNCTION CHUNK FOR sub_2A4F
09320               
09321         2D10                loc_2D10        EQU     *
09322 2D10 F6 0570                                ldab    unk_570
09323 2D13 26 03                                  bne     loc_2D18
09324 2D15 BD 038A                                jsr     sub_38A
09325               
09326         2D18                loc_2D18        EQU     *
09327 2D18 7E 2A5A                                jmp     loc_2A5A
09328               * END OF FUNCTION CHUNK FOR sub_2A4F
09329               * ---------------------------------------------------------------------------
09330 2D1B 30                                     tsx
09331 2D1C AA 00                                  oraa    0,x
09332 2D1E 31                                     ins
09333 2D1F 44                                     lsra
09334 2D20 25 03                                  bcs     loc_2D25
09335 2D22 7E 2E33                                jmp     loc_2E33
09336               * ---------------------------------------------------------------------------
09337               
09338         2D25                loc_2D25        EQU     *
09339 2D25 7E 2D2F                                jmp     loc_2D2F
09340               * ---------------------------------------------------------------------------
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 162
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

09341 2D28    0D                                  fcb     $D
09342 2D29    0D                                  fcb     $D
09343 2D2A    50 55 54 20         aPut            fcc     "PUT "
09344 2D2E    04                                  fcb     4
09345               * ---------------------------------------------------------------------------
09346               
09347         2D2F                loc_2D2F        EQU     *
09348 2D2F 7E 2D3E                                jmp     loc_2D3E
09349               * ---------------------------------------------------------------------------
09350 2D32    52 45 41 44 20 43   aReadCass       fcc     "READ CASS ("
09351 2D3D    04                                  fcb     4
09352               * ---------------------------------------------------------------------------
09353               
09354         2D3E                loc_2D3E        EQU     *
09355 2D3E 7E 2D4C                                jmp     loc_2D4C
09356               * ---------------------------------------------------------------------------
09357 2D41    29 20 4F 4E 20 50   aOnPlay         fcc     ") ON PLAY,"
09358 2D4B    04                                  fcb     4
09359               * ---------------------------------------------------------------------------
09360               
09361         2D4C                loc_2D4C        EQU     *
09362 2D4C 7E 2D55                                jmp     loc_2D55
09363               * ---------------------------------------------------------------------------
09364 2D4F    0D                                  fcb     $D
09365 2D50    04                                  fcb     4
09366 2D51    4E 44 20            aNd             fcc     "ND "
09367 2D54    04                                  fcb     4
09368               * ---------------------------------------------------------------------------
09369               
09370         2D55                loc_2D55        EQU     *
09371 2D55 7E 2D65                                jmp     loc_2D65
09372               * ---------------------------------------------------------------------------
09373 2D58    57 52 49 54 45 20                   fcb     $57,$52,$49,$54,$45,$20,$43,$41,$53,$53,
09374 2D63    28 04                               fcb     $28,4
09375               * ---------------------------------------------------------------------------
09376               
09377         2D65                loc_2D65        EQU     *
09378 2D65 7E 2D72                                jmp     loc_2D72
09379               * ---------------------------------------------------------------------------
09380 2D68    29 20 4F 4E 20 52                   fcb     $29,$20,$4F,$4E,$20,$52,$45,$43,$2C,4
09381               * ---------------------------------------------------------------------------
09382               
09383         2D72                loc_2D72        EQU     *
09384 2D72 7E 2DA7                                jmp     loc_2DA7
09385               * ---------------------------------------------------------------------------
09386 2D75    0D                                  fcb     $D
09387 2D76    0D                                  fcb     $D
09388 2D77    54                                  fcb     $54              * T
09389 2D78    48                                  fcb     $48              * H
09390 2D79    45                                  fcb     $45              * E
09391 2D7A    4E                                  fcb     $4E              * N
09392 2D7B    20                                  fcb     $20
09393 2D7C    49                                  fcb     $49              * I
09394 2D7D    4E                                  fcb     $4E              * N
09395 2D7E    50                                  fcb     $50              * P
09396 2D7F    55                                  fcb     $55              * U
09397 2D80    54                                  fcb     $54              * T
09398 2D81    20                                  fcb     $20
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 163
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

09399 2D82    46                                  fcb     $46              * F
09400 2D83    49                                  fcb     $49              * I
09401 2D84    52                                  fcb     $52              * R
09402 2D85    53                                  fcb     $53              * S
09403 2D86    54                                  fcb     $54              * T
09404 2D87    20                                  fcb     $20
09405 2D88    42                                  fcb     $42              * B
09406 2D89    4C                                  fcb     $4C              * L
09407 2D8A    4F                                  fcb     $4F              * O
09408 2D8B    43                                  fcb     $43              * C
09409 2D8C    4B                                  fcb     $4B              * K
09410 2D8D    20                                  fcb     $20
09411 2D8E    4E                                  fcb     $4E              * N
09412 2D8F    41                                  fcb     $41              * A
09413 2D90    4D                                  fcb     $4D              * M
09414 2D91    45                                  fcb     $45              * E
09415 2D92    0D                                  fcb     $D
09416 2D93    28                                  fcb     $28              * (
09417 2D94    45                                  fcb     $45              * E
09418 2D95    4E                                  fcb     $4E              * N
09419 2D96    44                                  fcb     $44              * D
09420 2D97    49                                  fcb     $49              * I
09421 2D98    4E                                  fcb     $4E              * N
09422 2D99    47                                  fcb     $47              * G
09423 2D9A    20                                  fcb     $20
09424 2D9B    57                                  fcb     $57              * W
09425 2D9C    49                                  fcb     $49              * I
09426 2D9D    54                                  fcb     $54              * T
09427 2D9E    48                                  fcb     $48              * H
09428 2D9F    20                                  fcb     $20
09429 2DA0    45                                  fcb     $45              * E
09430 2DA1    53                                  fcb     $53              * S
09431 2DA2    43                                  fcb     $43              * C
09432 2DA3    29                                  fcb     $29              * )
09433 2DA4    3F                                  fcb     $3F              * ?
09434 2DA5    20                                  fcb     $20
09435 2DA6    04                                  fcb     4
09436               * ---------------------------------------------------------------------------
09437               
09438         2DA7                loc_2DA7        EQU     *
09439 2DA7 CE 2D28                                ldx     #$2D28
09440 2DAA DF 43                                  stx     $43
09441 2DAC BD 2A12                                jsr     sub_2A12
09442 2DAF B6 0570                                ldaa    unk_570
09443 2DB2 80 02                                  suba    #2
09444 2DB4 27 03                                  beq     loc_2DB9
09445 2DB6 7E 2DE2                                jmp     loc_2DE2
09446               * ---------------------------------------------------------------------------
09447               
09448         2DB9                loc_2DB9        EQU     *
09449 2DB9 CE 2D32                                ldx     #$2D32
09450 2DBC DF 43                                  stx     $43
09451 2DBE BD 2A12                                jsr     sub_2A12
09452 2DC1 FE 0396                                ldx     byte_396
09453 2DC4 DF 45                                  stx     $45
09454 2DC6 BD 2A5D                                jsr     loc_2A5C+1
09455 2DC9 CE 2D41                                ldx     #$2D41
09456 2DCC DF 43                                  stx     $43
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 164
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

09457 2DCE BD 2A12                                jsr     sub_2A12
09458 2DD1 B6 0572                                ldaa    unk_572
09459 2DD4 4A                                     deca
09460 2DD5 27 03                                  beq     loc_2DDA
09461 2DD7 7E 2DE2                                jmp     loc_2DE2
09462               * ---------------------------------------------------------------------------
09463               
09464         2DDA                loc_2DDA        EQU     *
09465 2DDA BD 2A03                                jsr     sub_2A03
09466 2DDD 01                                     nop
09467 2DDE 01                                     nop
09468 2DDF BD 2E84                                jsr     sub_2E84
09469               
09470         2DE2                loc_2DE2        EQU     *
09471 2DE2 B6 0572                                ldaa    unk_572
09472 2DE5 4A                                     deca
09473 2DE6 27 03                                  beq     loc_2DEB
09474 2DE8 7E 2E03                                jmp     loc_2E03
09475               * ---------------------------------------------------------------------------
09476               
09477         2DEB                loc_2DEB        EQU     *
09478 2DEB 7E 2F63                                jmp     loc_2F63
09479               * ---------------------------------------------------------------------------
09480               
09481         2DEE                loc_2DEE        EQU     *
09482 2DEE DF 43                                  stx     $43
09483 2DF0 BD 2A12                                jsr     sub_2A12
09484 2DF3 FE 0398                                ldx     word_398
09485 2DF6 DF 45                                  stx     $45
09486 2DF8 BD 2A5D                                jsr     loc_2A5C+1
09487 2DFB CE 2D68                                ldx     #$2D68
09488 2DFE DF 43                                  stx     $43
09489 2E00 BD 2A12                                jsr     sub_2A12
09490               
09491         2E03                loc_2E03        EQU     *
09492 2E03 CE 2D76                                ldx     #$2D76
09493 2E06 DF 43                                  stx     $43
09494 2E08 BD 2A12                                jsr     sub_2A12
09495 2E0B BD DC75                                jsr     $DC75
09496 2E0E 96 25                                  ldaa    $25
09497 2E10 D6 24                                  ldab    $24
09498 2E12 CB 00                                  addb    #0
09499 2E14 BD 2A1A                                jsr     sub_2A1A
09500 2E17 E6 00                                  ldab    0,x
09501 2E19 A6 01                                  ldaa    1,x
09502 2E1B 97 34                                  staa    $34
09503 2E1D D7 33                                  stab    $33
09504 2E1F 96 33                                  ldaa    $33
09505 2E21 80 60                                  suba    #$60             * '`'
09506 2E23 27 03                                  beq     loc_2E28
09507 2E25 7E 2E30                                jmp     loc_2E30
09508               * ---------------------------------------------------------------------------
09509               
09510         2E28                loc_2E28        EQU     *
09511 2E28 CE 0000                                ldx     #0
09512 2E2B DF 33                                  stx     $33
09513 2E2D 7E 2E33                                jmp     loc_2E33
09514               * ---------------------------------------------------------------------------
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 165
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

09515               
09516         2E30                loc_2E30        EQU     *
09517 2E30 BD 2A03                                jsr     sub_2A03
09518               
09519         2E33                loc_2E33        EQU     *
09520 2E33 7E 2E3D                                jmp     loc_2E3D
09521               * ---------------------------------------------------------------------------
09522 2E36 96 42                                  ldaa    $42
09523 2E38 97 42                                  staa    $42
09524 2E3A BD 2E70                                jsr     sub_2E70
09525               
09526         2E3D                loc_2E3D        EQU     *
09527 2E3D 01                                     nop
09528 2E3E 01                                     nop
09529 2E3F 01                                     nop
09530 2E40 01                                     nop
09531 2E41 7E 2E4F                                jmp     sub_2E4F
09532               
09533               * =============== S U B R O U TI N E =======================================
09534               
09535               
09536         2E44                sub_2E44        EQU     *
09537               
09538               * FUNCTION CHUNK AT 2716 SIZE 00000008 BYTES
09539               
09540 2E44 DE 33                                  ldx     $33
09541 2E46 DF B6                                  stx     $B6
09542 2E48 DE D0                                  ldx     $D0
09543 2E4A DF 33                                  stx     $33
09544 2E4C 7E 2716                                jmp     loc_2716
09545               * End of function sub_2E44
09546               
09547               
09548               * =============== S U B R O U TI N E =======================================
09549               
09550               
09551         2E4F                sub_2E4F        EQU     *
09552 2E4F B6 0571                                ldaa    byte_571
09553 2E52 80 03                                  suba    #3
09554 2E54 27 03                                  beq     loc_2E59
09555 2E56 7E 2E61                                jmp     loc_2E61
09556               * ---------------------------------------------------------------------------
09557               
09558         2E59                loc_2E59        EQU     *
09559 2E59 86 36                                  ldaa    #$36             * '6'
09560 2E5B B7 1B7D                                staa    byte_1B7D
09561 2E5E 7E 2E66                                jmp     loc_2E66
09562               * ---------------------------------------------------------------------------
09563               
09564         2E61                loc_2E61        EQU     *
09565 2E61 86 39                                  ldaa    #$39             * '9'
09566 2E63 B7 1B7D                                staa    byte_1B7D
09567               
09568         2E66                loc_2E66        EQU     *
09569 2E66 BD 2D00                                jsr     sub_2D00
09570 2E69 B7 0550                                staa    unk_550
09571 2E6C BD 2A08                                jsr     sub_2A08
09572 2E6F 39                                     rts
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 166
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

09573               * End of function sub_2E4F
09574               
09575               
09576               * =============== S U B R O U TI N E =======================================
09577               
09578               
09579         2E70                sub_2E70        EQU     *
09580 2E70 BD DCBC                                jsr     $DCBC
09581 2E73 7E 2A03                                jmp     sub_2A03
09582               * End of function sub_2E70
09583               
09584               * ---------------------------------------------------------------------------
09585 2E76 B6 0571                                ldaa    byte_571
09586 2E79 26 03                                  bne     loc_2E7E
09587 2E7B 7E 2CB9                                jmp     loc_2CB8+1
09588               * ---------------------------------------------------------------------------
09589               
09590         2E7E                loc_2E7E        EQU     *
09591 2E7E CE 2C14                                ldx     #$2C14
09592 2E81 7E 2C47                                jmp     loc_2C45+2
09593               
09594               * =============== S U B R O U TI N E =======================================
09595               
09596               
09597         2E84                sub_2E84        EQU     *
09598 2E84 FE 0396                                ldx     byte_396
09599 2E87 BC 0398                                cpx     word_398
09600 2E8A 26 01                                  bne     locret_2E8D
09601 2E8C 3F                                     swi
09602               
09603         2E8D                locret_2E8D     EQU     *
09604 2E8D 39                                     rts
09605               * End of function sub_2E84
09606               
09607               * ---------------------------------------------------------------------------
09608 2E8E    00 00                               fcb     0,0
09609               * ---------------------------------------------------------------------------
09610               * START OF FUNCTION CHUNK FOR sub_26E8
09611               
09612         2E90                loc_2E90        EQU     *
09613 2E90 B6 0570                                ldaa    unk_570
09614 2E93 81 02                                  cmpa    #2
09615 2E95 27 01                                  beq     loc_2E98
09616 2E97 39                                     rts
09617               * ---------------------------------------------------------------------------
09618               
09619         2E98                loc_2E98        EQU     *
09620 2E98 7E 0390                                jmp     loc_390
09621               * END OF FUNCTION CHUNK FOR sub_26E8
09622               
09623               * =============== S U B R O U TI N E =======================================
09624               
09625               
09626         2E9B                sub_2E9B        EQU     *
09627               
09628               * FUNCTION CHUNK AT 1B03 SIZE 0000000F BYTES
09629               
09630 2E9B B6 0570                                ldaa    unk_570
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 167
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

09631 2E9E 26 01                                  bne     loc_2EA1
09632 2EA0 39                                     rts
09633               * ---------------------------------------------------------------------------
09634               
09635         2EA1                loc_2EA1        EQU     *
09636 2EA1 FE 0396                                ldx     byte_396
09637 2EA4 7E 1B03                                jmp     loc_1B03
09638               * End of function sub_2E9B
09639               
09640               * ---------------------------------------------------------------------------
09641               * START OF FUNCTION CHUNK FOR sub_1644
09642               
09643         2EA7                loc_2EA7        EQU     *
09644 2EA7 26 06                                  bne     loc_2EAF
09645 2EA9 BD 1C30                                jsr     sub_1C30
09646 2EAC 7E 1415                                jmp     loc_1415
09647               * ---------------------------------------------------------------------------
09648               
09649         2EAF                loc_2EAF        EQU     *
09650 2EAF 7E 1B33                                jmp     loc_1B33
09651               * END OF FUNCTION CHUNK FOR sub_1644
09652               
09653               * =============== S U B R O U TI N E =======================================
09654               
09655               
09656         2EB2                sub_2EB2        EQU     *
09657               
09658               * FUNCTION CHUNK AT 0393 SIZE 00000003 BYTES
09659               * FUNCTION CHUNK AT 4A65 SIZE 00000055 BYTES
09660               * FUNCTION CHUNK AT 4AF9 SIZE 00000014 BYTES
09661               
09662 2EB2 B6 0572                                ldaa    unk_572
09663 2EB5 26 01                                  bne     loc_2EB8
09664 2EB7 39                                     rts
09665               * ---------------------------------------------------------------------------
09666               
09667         2EB8                loc_2EB8        EQU     *
09668 2EB8 7E 0393                                jmp     loc_393
09669               * End of function sub_2EB2
09670               
09671               
09672               * =============== S U B R O U TI N E =======================================
09673               
09674               
09675         2EBB                sub_2EBB        EQU     *
09676 2EBB B6 0570                                ldaa    unk_570
09677 2EBE 81 02                                  cmpa    #2
09678 2EC0 27 01                                  beq     loc_2EC3
09679 2EC2 39                                     rts
09680               * ---------------------------------------------------------------------------
09681               
09682         2EC3                loc_2EC3        EQU     *
09683 2EC3 FE 0391                                ldx     loc_390+1
09684 2EC6 8C 0000                                cpx     #0
09685               
09686         2EC9                locret_2EC9     EQU     *
09687 2EC9 39                                     rts
09688               * End of function sub_2EBB
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 168
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

09689               
09690               * ---------------------------------------------------------------------------
09691 2ECA 01                                     nop
09692 2ECB 39                                     rts
09693               * ---------------------------------------------------------------------------
09694 2ECC 7E 0000                                jmp     0
09695               
09696               * =============== S U B R O U TI N E =======================================
09697               
09698               
09699         2ECF                sub_2ECF        EQU     *
09700 2ECF B6 0572                                ldaa    unk_572
09701 2ED2 26 01                                  bne     loc_2ED5
09702 2ED4 39                                     rts
09703               * ---------------------------------------------------------------------------
09704               
09705         2ED5                loc_2ED5        EQU     *
09706 2ED5 FE 0394                                ldx     loc_393+1
09707 2ED8 8C 0000                                cpx     #0
09708 2EDB 7E 2EC9                                jmp     locret_2EC9
09709               * End of function sub_2ECF
09710               
09711               
09712               * =============== S U B R O U TI N E =======================================
09713               
09714               
09715         2EDE                sub_2EDE        EQU     *
09716 2EDE 96 B5                                  ldaa    $B5
09717 2EE0 81 02                                  cmpa    #2
09718 2EE2 27 03                                  beq     loc_2EE7
09719 2EE4 BD 1A08                                jsr     sub_1A08
09720               
09721         2EE7                loc_2EE7        EQU     *
09722 2EE7 7E 15E5                                jmp     sub_15E5
09723               * End of function sub_2EDE
09724               
09725               * ---------------------------------------------------------------------------
09726 2EEA 8E 01FF                                lds     #$1FF
09727 2EED BD 2D03                                jsr     loc_2D03
09728 2EF0 7E 2916                                jmp     loc_2916
09729               * ---------------------------------------------------------------------------
09730 2EF3 CE 3410                                ldx     #$3410
09731 2EF6 DF 0C                                  stx     $C
09732 2EF8 CE 3DFF                                ldx     #$3DFF
09733 2EFB DF 0E                                  stx     $E
09734 2EFD 39                                     rts
09735               * ---------------------------------------------------------------------------
09736 2EFE DE 20                                  ldx     $20
09737 2F00 DF 3E                                  stx     $3E
09738 2F02 39                                     rts
09739               
09740               * =============== S U B R O U TI N E =======================================
09741               
09742               
09743         2F03                sub_2F03        EQU     *
09744 2F03 97 4C                                  staa    $4C
09745 2F05 26 01                                  bne     loc_2F08
09746 2F07 39                                     rts
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 169
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

09747               * ---------------------------------------------------------------------------
09748               
09749         2F08                loc_2F08        EQU     *
09750 2F08 86 CB                                  ldaa    #$CB             * '?'
09751 2F0A 7E 0B47                                jmp     loc_B47
09752               * End of function sub_2F03
09753               
09754               * ---------------------------------------------------------------------------
09755               * START OF FUNCTION CHUNK FOR sub_1500
09756               
09757         2F0D                loc_2F0D        EQU     *
09758 2F0D 7C 0089                                inc     $89
09759 2F10 DE 8A                                  ldx     $8A
09760 2F12 7E 152C                                jmp     loc_152C
09761               * ---------------------------------------------------------------------------
09762               
09763         2F15                loc_2F15        EQU     *
09764 2F15 D6 8A                                  ldab    $8A
09765 2F17 96 8B                                  ldaa    $8B
09766 2F19 8B 02                                  adda    #2
09767 2F1B C9 40                                  adcb    #$40             * '@'
09768 2F1D 36                                     psha
09769 2F1E 7E 2F77                                jmp     loc_2F77
09770               * ---------------------------------------------------------------------------
09771               
09772         2F21                loc_2F21        EQU     *
09773 2F21 D2 CE                                  sbcb    $CE
09774 2F23 26 01                                  bne     loc_2F26
09775 2F25 4D                                     tsta
09776               
09777         2F26                loc_2F26        EQU     *
09778 2F26 23 07                                  bls     loc_2F2F
09779 2F28 33                                     pulb
09780 2F29 32                                     pula
09781 2F2A D7 CE                                  stab    $CE
09782 2F2C 97 CF                                  staa    $CF
09783 2F2E 39                                     rts
09784               * ---------------------------------------------------------------------------
09785               
09786         2F2F                loc_2F2F        EQU     *
09787 2F2F 31                                     ins
09788 2F30 31                                     ins
09789 2F31 39                                     rts
09790               * END OF FUNCTION CHUNK FOR sub_1500
09791               
09792               * =============== S U B R O U TI N E =======================================
09793               
09794               
09795         2F32                sub_2F32        EQU     *
09796 2F32 BD 1C07                                jsr     sub_1C07
09797 2F35 CE 2F52                                ldx     #$2F52
09798 2F38 DF 43                                  stx     $43
09799 2F3A BD 1DDB                                jsr     sub_1DDB
09800 2F3D DE CE                                  ldx     $CE
09801 2F3F 26 03                                  bne     loc_2F44
09802 2F41 CE 4146                                ldx     #$4146
09803               
09804         2F44                loc_2F44        EQU     *
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 170
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

09805 2F44 01                                     nop
09806 2F45 01                                     nop
09807 2F46 01                                     nop
09808 2F47 01                                     nop
09809 2F48 01                                     nop
09810 2F49 01                                     nop
09811 2F4A DF 45                                  stx     $45
09812 2F4C BD 2C90                                jsr     sub_2C90
09813 2F4F 7E 1C07                                jmp     sub_1C07
09814               * End of function sub_2F32
09815               
09816               * ---------------------------------------------------------------------------
09817 2F52 48                                     asla
09818 2F53 49                                     rola
09819 2F54 47                                     asra
09820 2F55 48                                     asla
09821 2F56 20 41                                  bra     loc_2F99
09822               * ---------------------------------------------------------------------------
09823 2F58    44 44 52 20 55 53                   fcb     $44,$44,$52,$20,$55,$53,$45,$44,$3A,$20,
09824               * ---------------------------------------------------------------------------
09825               
09826         2F63                loc_2F63        EQU     *
09827 2F63 B6 0571                                ldaa    byte_571
09828 2F66 26 09                                  bne     loc_2F71
09829 2F68 FE 0398                                ldx     word_398
09830 2F6B BC 039A                                cpx     word_39A
09831 2F6E 26 01                                  bne     loc_2F71
09832 2F70 3F                                     swi
09833               
09834         2F71                loc_2F71        EQU     *
09835 2F71 CE 2D58                                ldx     #$2D58
09836 2F74 7E 2DEE                                jmp     loc_2DEE
09837               * ---------------------------------------------------------------------------
09838               * START OF FUNCTION CHUNK FOR sub_1500
09839               
09840         2F77                loc_2F77        EQU     *
09841 2F77 37                                     pshb
09842 2F78 B0 0387                                suba    byte_387
09843 2F7B F2 0386                                sbcb    byte_386
09844 2F7E 26 01                                  bne     loc_2F81
09845 2F80 4D                                     tsta
09846               
09847         2F81                loc_2F81        EQU     *
09848 2F81 23 01                                  bls     loc_2F84
09849 2F83 3F                                     swi
09850               
09851         2F84                loc_2F84        EQU     *
09852 2F84 33                                     pulb
09853 2F85 32                                     pula
09854 2F86 36                                     psha
09855 2F87 37                                     pshb
09856 2F88 90 CF                                  suba    $CF
09857 2F8A 7E 2F21                                jmp     loc_2F21
09858               * END OF FUNCTION CHUNK FOR sub_1500
09859               
09860               * =============== S U B R O U TI N E =======================================
09861               
09862               
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 171
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

09863         2F8D                sub_2F8D        EQU     *
09864               
09865               * FUNCTION CHUNK AT 1C4D SIZE 0000000B BYTES
09866               
09867 2F8D B6 039D                                ldaa    byte_39D
09868 2F90 27 01                                  beq     loc_2F93
09869 2F92 39                                     rts
09870               * ---------------------------------------------------------------------------
09871               
09872         2F93                loc_2F93        EQU     *
09873 2F93 7E 1C4D                                jmp     loc_1C4D
09874               * End of function sub_2F8D
09875               
09876               * ---------------------------------------------------------------------------
09877               * START OF FUNCTION CHUNK FOR sub_1C30
09878               
09879         2F96                loc_2F96        EQU     *
09880 2F96 B6 039D                                ldaa    byte_39D
09881               
09882         2F99                loc_2F99        EQU     *
09883 2F99 27 01                                  beq     loc_2F9C
09884 2F9B 39                                     rts
09885               * ---------------------------------------------------------------------------
09886               
09887         2F9C                loc_2F9C        EQU     *
09888 2F9C 86 20                                  ldaa    #$20             * ' '
09889 2F9E BD 1B71                                jsr     loc_1B71
09890 2FA1 7E 1B71                                jmp     loc_1B71
09891               * END OF FUNCTION CHUNK FOR sub_1C30
09892               
09893               * =============== S U B R O U TI N E =======================================
09894               
09895               
09896         2FA4                sub_2FA4        EQU     *
09897 2FA4 BD 1200                                jsr     sub_1200
09898 2FA7 CE 0000                                ldx     #0
09899 2FAA DF 9A                                  stx     $9A
09900 2FAC 7E 20A1                                jmp     loc_20A1
09901               * End of function sub_2FA4
09902               
09903               * ---------------------------------------------------------------------------
09904               * START OF FUNCTION CHUNK FOR sub_1A10
09905               
09906         2FAF                loc_2FAF        EQU     *
09907 2FAF DE 9A                                  ldx     $9A
09908 2FB1 26 01                                  bne     loc_2FB4
09909 2FB3 39                                     rts
09910               * ---------------------------------------------------------------------------
09911               
09912         2FB4                loc_2FB4        EQU     *
09913 2FB4 CE 4000                                ldx     #unk_4000
09914 2FB7 7E 2134                                jmp     loc_2134
09915               * END OF FUNCTION CHUNK FOR sub_1A10
09916               * ---------------------------------------------------------------------------
09917               * START OF FUNCTION CHUNK FOR sub_1846
09918               
09919         2FBA                loc_2FBA        EQU     *
09920 2FBA 81 9A                                  cmpa    #$9A             * '?'
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 172
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

09921 2FBC 26 06                                  bne     loc_2FC4
09922               
09923         2FBE                loc_2FBE        EQU     *
09924 2FBE BD 2FA4                                jsr     sub_2FA4
09925 2FC1 7E 187C                                jmp     loc_187C
09926               * ---------------------------------------------------------------------------
09927               
09928         2FC4                loc_2FC4        EQU     *
09929 2FC4 7E 1D95                                jmp     loc_1D95
09930               * END OF FUNCTION CHUNK FOR sub_1846
09931               * ---------------------------------------------------------------------------
09932 2FC7 01                                     nop
09933 2FC8 01                                     nop
09934 2FC9 01                                     nop
09935 2FCA 01                                     nop
09936 2FCB 01                                     nop
09937               * START OF FUNCTION CHUNK FOR sub_1A10
09938               
09939         2FCC                loc_2FCC        EQU     *
09940 2FCC 81 2E                                  cmpa    #$2E             * '.'
09941 2FCE 27 0A                                  beq     loc_2FDA
09942 2FD0 81 F0                                  cmpa    #$F0             * '?'
09943 2FD2 26 03                                  bne     loc_2FD7
09944 2FD4 7E 2103                                jmp     loc_2103
09945               * ---------------------------------------------------------------------------
09946               
09947         2FD7                loc_2FD7        EQU     *
09948 2FD7 7E 212E                                jmp     loc_212E
09949               * ---------------------------------------------------------------------------
09950               
09951         2FDA                loc_2FDA        EQU     *
09952 2FDA BD 1200                                jsr     sub_1200
09953 2FDD 96 5A                                  ldaa    $5A
09954 2FDF 81 F2                                  cmpa    #$F2             * '?'
09955 2FE1 27 03                                  beq     loc_2FE6
09956 2FE3 7E 212E                                jmp     loc_212E
09957               * ---------------------------------------------------------------------------
09958               
09959         2FE6                loc_2FE6        EQU     *
09960 2FE6 5F                                     clrb
09961 2FE7 96 5C                                  ldaa    $5C
09962 2FE9 27 01                                  beq     loc_2FEC
09963 2FEB 5C                                     incb
09964               
09965         2FEC                loc_2FEC        EQU     *
09966 2FEC D7 59                                  stab    $59
09967 2FEE 7E 2103                                jmp     loc_2103
09968               * END OF FUNCTION CHUNK FOR sub_1A10
09969               * ---------------------------------------------------------------------------
09970 2FF1    00 00 00 00 00 00                   fcb     0,0,0,0,0,0,0,0,0
09971               
09972               * =============== S U B R O U TI N E =======================================
09973               
09974               
09975         2FFA                nullsub_1       EQU     *
09976 2FFA 39                                     rts
09977               * End of function nullsub_1
09978               
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 173
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

09979               * ---------------------------------------------------------------------------
09980 2FFB    01 01 01 01 01                      fcb     1,1,1,1,1
09981 3000                        byte_3000       rmb     1
09982 3001                        byte_3001       rmb     1
09983 3002                        byte_3002       rmb     1
09984 3003                                        rmb     $200
09985 3203                        byte_3203       rmb     1
09986 3204                        byte_3204       rmb     1
09987 3205                        byte_3205       rmb     1
09988 3206                        byte_3206       rmb     1
09989 3207                        byte_3207       rmb     1
09990 3208                                        rmb     $200
09991 3408                        byte_3408       rmb     1
09992 3409                        byte_3409       rmb     1
09993 340A                                        rmb     $BF6
09994 4000    00                  unk_4000        fcb     0
09995 4001    00                                  fcb     0
09996 4002    FF                                  fcb     $FF
09997 4003    00                                  fcb     0
09998 4004    37                                  fcb     $37              * 7
09999 4005    00                                  fcb     0
10000 4006    48                                  fcb     $48              * H
10001 4007    00                                  fcb     0
10002 4008    4F                                  fcb     $4F              * O
10003 4009    00                                  fcb     0
10004 400A    56                                  fcb     $56              * V
10005 400B    00                                  fcb     0
10006 400C    74                                  fcb     $74              * t
10007 400D    00                                  fcb     0
10008 400E    00                                  fcb     0
10009 400F    01                                  fcb     1
10010 4010    22                                  fcb     $22              * "
10011 4011    00                                  fcb     0
10012 4012    87                                  fcb     $87              * ?
10013 4013    00                                  fcb     0
10014 4014    8E                                  fcb     $8E              * ?
10015 4015    00                                  fcb     0
10016 4016    00                                  fcb     0
10017 4017    00                                  fcb     0
10018 4018    00                                  fcb     0
10019 4019    00                                  fcb     0
10020 401A    93                                  fcb     $93              * ?
10021 401B    00                                  fcb     0
10022 401C    E5                                  fcb     $E5              * ?
10023 401D    01                                  fcb     1
10024 401E    0B                                  fcb     $B
10025 401F    00                                  fcb     0
10026 4020    FA                                  fcb     $FA              * ?
10027 4021    00                                  fcb     0
10028 4022    99                                  fcb     $99              * ?
10029 4023    00                                  fcb     0
10030 4024    00                                  fcb     0
10031 4025    00                                  fcb     0
10032 4026    AC                                  fcb     $AC              * ?
10033 4027    00                                  fcb     0
10034 4028    00                                  fcb     0
10035 4029    00                                  fcb     0
10036 402A    B5                                  fcb     $B5              * ?
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 174
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

10037 402B    00                                  fcb     0
10038 402C    00                                  fcb     0
10039 402D    00                                  fcb     0
10040 402E    00                                  fcb     0
10041 402F    00                                  fcb     0
10042 4030    BC                                  fcb     $BC              * ?
10043 4031    00                                  fcb     0
10044 4032    FF                                  fcb     $FF
10045 4033    00                                  fcb     0
10046 4034    00                                  fcb     0
10047 4035    00                                  fcb     0
10048 4036    00                                  fcb     0
10049 4037    00                                  fcb     0
10050 4038    3E                                  fcb     $3E              * >
10051 4039    04                                  fcb     4
10052 403A    44 44 52            aDdr            fcc     "DDR"
10053 403D    8C                                  fcb     $8C              * ?
10054 403E    01                                  fcb     1
10055 403F    05                                  fcb     5
10056 4040    07                                  fcb     7
10057 4041    44 44 52 45 53 53   aDdress         fcc     "DDRESS"
10058 4047    8C                                  fcb     $8C              * ?
10059 4048    00                                  fcb     0
10060 4049    C4                                  fcb     $C4              * ?
10061 404A    04                                  fcb     4
10062 404B    59 54 45            aYte            fcc     "YTE"
10063 404E    8B                                  fcb     $8B              * ?
10064 404F    00                                  fcb     0
10065 4050    00                                  fcb     0
10066 4051    04                                  fcb     4
10067 4052    41 4C 4C            aAll            fcc     "ALL"
10068 4055    89                                  fcb     $89              * ?
10069 4056    00                                  fcb     0
10070 4057    5B                                  fcc     "["
10071 4058    02                                  fcb     2
10072 4059    4F                  aO              fcc     "O"
10073 405A    84                                  fcb     $84              * ?
10074 405B    00                                  fcb     0
10075 405C    61                  aA              fcc     "a"
10076 405D    03                                  fcb     3
10077 405E    43 4C               aCl             fcc     "CL"
10078 4060    8A                                  fcb     $8A              * ?
10079 4061    00                                  fcb     0
10080 4062    DE                                  fcb     $DE              * ?
10081 4063    07                                  fcb     7
10082 4064    45 43 4C 41 52 45   aEclare         fcc     "ECLARE"
10083 406A    8A                                  fcb     $8A              * ?
10084 406B    01                                  fcb     1
10085 406C    33                                  fcb     $33              * 3
10086 406D    05                                  fcb     5
10087 406E    41 53 45 44         aAsed           fcc     "ASED"
10088 4072    9C                                  fcb     $9C              * ?
10089 4073    00                                  fcb     0
10090 4074    00                                  fcb     0
10091 4075    7A                                  fcb     $7A              * z
10092 4076    03                                  fcb     3
10093 4077    4E 44               aNd_0           fcc     "ND"
10094 4079    86                                  fcb     $86              * ?
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 175
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

10095 407A    00                                  fcb     0
10096 407B    81                                  fcb     $81              * ?
10097 407C    04                                  fcb     4
10098 407D    4C 53 45            aLse            fcc     "LSE"
10099 4080    83                                  fcb     $83              * ?
10100 4081    00                                  fcb     0
10101 4082    00                                  fcb     0
10102 4083    03                                  fcb     3
10103 4084    4F 46               aOf             fcc     "OF"
10104 4086    80                                  fcb     $80              * ?
10105 4087    00                                  fcb     0
10106 4088    00                                  fcb     0
10107 4089    04                                  fcb     4
10108 408A    49 47 48            aIgh            fcc     "IGH"
10109 408D    8E                                  fcb     $8E              * ?
10110 408E    00                                  fcb     0
10111 408F    00                                  fcb     0
10112 4090    02                                  fcb     2
10113 4091    46                  aF              fcc     "F"
10114 4092    81                                  fcb     $81              * ?
10115 4093    00                                  fcb     0
10116 4094    CC                                  fcb     $CC              * ?
10117 4095    03                                  fcb     3
10118 4096    4F 57               aOw             fcc     "OW"
10119 4098    8D                                  fcb     $8D              * ?
10120 4099    00                                  fcb     0
10121 409A    A0                                  fcb     $A0              * ?
10122 409B    04                                  fcb     4
10123 409C    52 4F 43            aRoc            fcc     "ROC"
10124 409F    87                                  fcb     $87              * ?
10125 40A0    00                                  fcb     0
10126 40A1    EB                                  fcb     $EB              * ?
10127 40A2    09                                  fcb     9
10128 40A3    52 4F 43 45 44 55   aRocedure       fcc     "ROCEDURE"
10129 40AB    87                                  fcb     $87              * ?
10130 40AC    00                                  fcb     0
10131 40AD    00                                  fcb     0
10132 40AE    06                                  fcb     6
10133 40AF    45 54 55 52 4E      aEturn          fcc     "ETURN"
10134 40B4    88                                  fcb     $88              * ?
10135 40B5    01                                  fcb     1
10136 40B6    42                                  fcb     $42              * B
10137 40B7    04                                  fcb     4
10138 40B8    48 45 4E            aHen            fcc     "HEN"
10139 40BB    82                                  fcb     $82              * ?
10140 40BC    00                                  fcb     0
10141 40BD    00                                  fcb     0
10142 40BE    05                                  fcb     5
10143 40BF    48 49 4C 45         aHile           fcc     "HILE"
10144 40C3    85                                  fcb     $85              * ?
10145 40C4    00                                  fcb     0
10146 40C5    6B                                  fcb     $6B              * k
10147 40C6    05                                  fcb     5
10148 40C7    52 45 41 4B         aReak           fcc     "REAK"
10149 40CB    90                                  fcb     $90              * ?
10150 40CC    00                                  fcb     0
10151 40CD    D8                                  fcb     $D8              * ?
10152 40CE    09                                  fcb     9
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 176
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

10153 40CF    49 54 45 52 41 4C   aIterally       fcc     "ITERALLY"
10154 40D7    91                                  fcb     $91              * ?
10155 40D8    00                                  fcb     0
10156 40D9    00                                  fcb     0
10157 40DA    03                                  fcb     3
10158 40DB    49 54               aIt             fcc     "IT"
10159 40DD    91                                  fcb     $91              * ?
10160 40DE    00                                  fcb     0
10161 40DF    00                                  fcb     0
10162 40E0    04                                  fcb     4
10163 40E1    41 54 41            aAta            fcc     "ATA"
10164 40E4    92                                  fcb     $92              * ?
10165 40E5    00                                  fcb     0
10166 40E6    F2                                  fcb     $F2              * ?
10167 40E7    03                                  fcb     3
10168 40E8    4F 44               aOd             fcc     "OD"
10169 40EA    93                                  fcb     $93              * ?
10170 40EB    00                                  fcb     0
10171 40EC    00                                  fcb     0
10172 40ED    04                                  fcb     4
10173 40EE    4C 55 53            aLus            fcc     "LUS"
10174 40F1    94                                  fcb     $94              * ?
10175 40F2    01                                  fcb     1
10176 40F3    11                                  fcb     $11
10177 40F4    05                                  fcb     5
10178 40F5    49 4E 55 53         aInus           fcc     "INUS"
10179 40F9    95                                  fcb     $95              * ?
10180 40FA    00                                  fcb     0
10181 40FB    00                                  fcb     0
10182 40FC    02                                  fcb     2
10183 40FD    52                  aR              fcc     "R"
10184 40FE    96                                  fcb     $96              * ?
10185 40FF    00                                  fcb     0
10186 4100    00                                  fcb     0
10187 4101    03                                  fcb     3
10188 4102    4F 52               aOr             fcc     "OR"
10189 4104    97                                  fcb     $97              * ?
10190 4105    00                                  fcb     0
10191 4106    00                                  fcb     0
10192 4107    03                                  fcb     3
10193 4108    4E 44               aNd_1           fcc     "ND"
10194 410A    98                                  fcb     $98              * ?
10195 410B    00                                  fcb     0
10196 410C    00                                  fcb     0
10197 410D    03                                  fcb     3
10198 410E    4F 54               aOt             fcc     "OT"
10199 4110    99                                  fcb     $99              * ?
10200 4111    01                                  fcb     1
10201 4112    19                                  fcb     $19
10202 4113    03                                  fcb     3
10203 4114    45 4D               aEm             fcc     "EM"
10204 4116    F2                                  fcb     $F2              * ?
10205 4117    00                                  fcb     0
10206 4118    00                                  fcb     0
10207 4119    01                                  fcb     1
10208 411A    38                                  fcb     $38              * 8
10209 411B    04                                  fcb     4
10210 411C    45 4D 41            aEma            fcc     "EMA"
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 177
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

10211 411F    F3                                  fcb     $F3              * ?
10212 4120    00                                  fcb     0
10213 4121    00                                  fcb     0
10214 4122    01                                  fcb     1
10215 4123    28                                  fcb     $28              * (
10216 4124    03                                  fcb     3
10217 4125    45 4E               aEn             fcc     "EN"
10218 4127    9A                                  fcb     $9A              * ?
10219 4128    00                                  fcb     0
10220 4129    00                                  fcb     0
10221 412A    08                                  fcb     8
10222 412B    45 4E 45 52 41 54   aEnerate        fcc     "ENERATE"
10223 4132    9A                                  fcb     $9A              * ?
10224 4133    00                                  fcb     0
10225 4134    00                                  fcb     0
10226 4135    02                                  fcb     2
10227 4136    59                  aY              fcc     "Y"
10228 4137    9E                                  fcb     $9E              * ?
10229 4138    00                                  fcb     0
10230 4139    00                                  fcb     0
10231 413A    07                                  fcb     7
10232 413B    4F 4E 49 54 4F 52   aOnitor         fcc     "ONITOR"
10233 4141    9B                                  fcb     $9B              * ?
10234 4142    00                                  fcb     0
10235 4143    00                                  fcb     0
10236 4144    02                                  fcb     2
10237 4145    4F                  aO_0            fcc     "O"
10238 4146    9D                                  fcb     $9D              * ?
10239 4147                                        rmb     $319
10240 4460                        byte_4460       rmb     $3A0
10241               *
10242               * This section is only used at startup to load the command
10243               * line parameters then it gets released for useby the
10244               * application
10245               *
10246               
10247               * =============== S U B R O U TI N E =======================================
10248               
10249               
10250         4800                sub_4800        EQU     *
10251 4800 CE E124                                ldx     #SFE1
10252 4803 FF A012                                stx     SWIJMP
10253 4806 7F 0570                                clr     unk_570
10254 4809 7F 0571                                clr     byte_571
10255 480C 7F 0572                                clr     unk_572
10256 480F 7F 0573                                clr     unk_573
10257 4812 7F 4BF3                                clr     byte_4BF3
10258 4815 B6 AC18                                ldaa    CURCHR           * get the first	character from command line
10259 4818 81 0D                                  cmpa    #$D              * were ther any	parameters or is this for interactive mode?
10260 481A 26 09                                  bne     processcmdlin    * process command line
10261 481C BD AD2A                                jsr     RSTRIO
10262 481F BD 4B9E                                jsr     sub_4B9E
10263 4822 7E 48F4                                jmp     loc_48F4
10264               * ---------------------------------------------------------------------------
10265               
10266         4825                processcmdlin   EQU     *
10267 4825 86 02                                  ldaa    #2
10268 4827 B7 0570                                staa    unk_570
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 178
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

10269 482A B7 0571                                staa    byte_571
10270 482D 7C 0572                                inc     unk_572
10271 4830 7F 4BFE                                clr     byte_4BFE
10272 4833 7F 4BFF                                clr     byte_4BFF
10273 4836 7F 4C00                                clr     byte_4C00
10274 4839 CE 4C03                                ldx     #$4C03
10275 483C BD AD2D                                jsr     GETFIL
10276 483F 24 09                                  bcc     loc_484A
10277               
10278         4841                loc_4841        EQU     *
10279 4841 BD AD3F                                jsr     RPTERR
10280               
10281         4844                loc_4844        EQU     *
10282 4844 BD B403                                jsr     FMSCLS
10283 4847 7E AD03                                jmp     WARMS
10284               * ---------------------------------------------------------------------------
10285               
10286         484A                loc_484A        EQU     *
10287 484A 86 01                                  ldaa    #1
10288 484C BD AD33                                jsr     SETEXT
10289 484F 86 01                                  ldaa    #1
10290 4851 A7 00                                  staa    0,x
10291 4853 BD B406                                jsr     FMS
10292 4856 26 E9                                  bne     loc_4841
10293 4858 CE 4C03                                ldx     #$4C03
10294 485B FF 4BF4                                stx     byte_4BF4
10295 485E CE 4D43                                ldx     #$4D43
10296 4861 FF 4BF6                                stx     byte_4BF6
10297 4864 BD 4949                                jsr     sub_4949
10298 4867 CE 4D43                                ldx     #$4D43
10299 486A 6F 0C                                  clr     $C,x
10300 486C 6F 0D                                  clr     $D,x
10301 486E 6F 0E                                  clr     $E,x
10302 4870 BD AD27                                jsr     NXTCH
10303 4873 81 0D                                  cmpa    #$D
10304 4875 27 7D                                  beq     loc_48F4
10305 4877 81 2B                                  cmpa    #$2B             * '+'
10306 4879 27 16                                  beq     loc_4891
10307 487B FE AC14                                ldx     LINPTR
10308 487E 09                                     dex
10309 487F FF AC14                                stx     LINPTR
10310 4882 CE 4D43                                ldx     #$4D43
10311 4885 BD AD2D                                jsr     GETFIL
10312 4888 25 B7                                  bcs     loc_4841
10313 488A BD AD27                                jsr     NXTCH
10314 488D 81 2B                                  cmpa    #$2B             * '+'
10315 488F 26 63                                  bne     loc_48F4
10316               
10317         4891                loc_4891        EQU     *
10318 4891 BD AD27                                jsr     NXTCH
10319 4894 81 0D                                  cmpa    #$D
10320 4896 27 5C                                  beq     loc_48F4
10321 4898 81 42                                  cmpa    #$42             * 'B'
10322 489A 26 05                                  bne     loc_48A1
10323 489C 7F 0572                                clr     unk_572
10324 489F 20 F0                                  bra     loc_4891
10325               * ---------------------------------------------------------------------------
10326               
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 179
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

10327         48A1                loc_48A1        EQU     *
10328 48A1 81 59                                  cmpa    #$59             * 'Y'
10329 48A3 26 05                                  bne     loc_48AA
10330 48A5 7C 4BF3                                inc     byte_4BF3
10331 48A8 20 E7                                  bra     loc_4891
10332               * ---------------------------------------------------------------------------
10333               
10334         48AA                loc_48AA        EQU     *
10335 48AA 81 45                                  cmpa    #$45             * 'E'
10336 48AC 26 07                                  bne     loc_48B5
10337 48AE 86 01                                  ldaa    #1
10338               
10339         48B0                loc_48B0        EQU     *
10340 48B0 B7 0571                                staa    byte_571
10341 48B3 20 DC                                  bra     loc_4891
10342               * ---------------------------------------------------------------------------
10343               
10344         48B5                loc_48B5        EQU     *
10345 48B5 81 43                                  cmpa    #$43             * 'C'
10346 48B7 26 04                                  bne     loc_48BD
10347 48B9 86 03                                  ldaa    #3
10348 48BB 20 F3                                  bra     loc_48B0
10349               * ---------------------------------------------------------------------------
10350               
10351         48BD                loc_48BD        EQU     *
10352 48BD 81 41                                  cmpa    #$41             * 'A'
10353 48BF 26 07                                  bne     loc_48C8
10354 48C1 86 02                                  ldaa    #2
10355               
10356         48C3                loc_48C3        EQU     *
10357 48C3 B7 0573                                staa    unk_573
10358 48C6 20 C9                                  bra     loc_4891
10359               * ---------------------------------------------------------------------------
10360               
10361         48C8                loc_48C8        EQU     *
10362 48C8 81 47                                  cmpa    #$47             * 'G'
10363 48CA 26 04                                  bne     loc_48D0
10364 48CC 86 01                                  ldaa    #1
10365 48CE 20 F3                                  bra     loc_48C3
10366               * ---------------------------------------------------------------------------
10367               
10368         48D0                loc_48D0        EQU     *
10369 48D0 CE 48D9                                ldx     #$48D9
10370 48D3 BD 4B6C                                jsr     sub_4B6C
10371 48D6 7E 4844                                jmp     loc_4844
10372               * ---------------------------------------------------------------------------
10373 48D9    0D 0A               aIllegalOptionS fcb     $D,$A
10374 48DB    49 4C 4C 45 47 41                   fcc     "ILLEGAL OPTION SPECIFIED"
10375 48F3    04                                  fcb     4
10376               * ---------------------------------------------------------------------------
10377               
10378         48F4                loc_48F4        EQU     *
10379 48F4 7D 0572                                tst     unk_572
10380 48F7 26 01                                  bne     loc_48FA
10381 48F9 39                                     rts
10382               * ---------------------------------------------------------------------------
10383               
10384         48FA                loc_48FA        EQU     *
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 180
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

10385 48FA CE 4D43                                ldx     #$4D43
10386 48FD 86 00                                  ldaa    #0
10387 48FF BD AD33                                jsr     SETEXT
10388 4902 86 02                                  ldaa    #2
10389 4904 A7 00                                  staa    0,x
10390 4906 BD B406                                jsr     FMS
10391 4909 26 05                                  bne     loc_4910
10392 490B 86 FF                                  ldaa    #$FF
10393 490D A7 3B                                  staa    $3B,x
10394 490F 39                                     rts
10395               * ---------------------------------------------------------------------------
10396               
10397         4910                loc_4910        EQU     *
10398 4910 A6 01                                  ldaa    1,x
10399 4912 81 03                                  cmpa    #3
10400 4914 26 30                                  bne     loc_4946
10401 4916 7D 4BF3                                tst     byte_4BF3
10402 4919 26 10                                  bne     loc_492B
10403 491B CE 4961                                ldx     #$4961
10404 491E BD 4B6C                                jsr     sub_4B6C
10405 4921 BD AD15                                jsr     GETCHR
10406 4924 81 59                                  cmpa    #$59             * 'Y'
10407 4926 27 03                                  beq     loc_492B
10408 4928 7E 4844                                jmp     loc_4844
10409               * ---------------------------------------------------------------------------
10410               
10411         492B                loc_492B        EQU     *
10412 492B CE 4D43                                ldx     #$4D43
10413 492E FF 4BF4                                stx     byte_4BF4
10414 4931 CE 4E83                                ldx     #$4E83
10415 4934 FF 4BF6                                stx     byte_4BF6
10416 4937 BD 4949                                jsr     sub_4949
10417 493A CE 4E83                                ldx     #$4E83
10418 493D 86 0C                                  ldaa    #$C
10419 493F A7 00                                  staa    0,x
10420 4941 BD B406                                jsr     FMS
10421 4944 27 B4                                  beq     loc_48FA
10422               
10423         4946                loc_4946        EQU     *
10424 4946 7E 4841                                jmp     loc_4841
10425               * End of function sub_4800
10426               
10427               
10428               * =============== S U B R O U TI N E =======================================
10429               
10430               
10431         4949                sub_4949        EQU     *
10432 4949 C6 0C                                  ldab    #$C
10433               
10434         494B                loc_494B        EQU     *
10435 494B FE 4BF4                                ldx     byte_4BF4
10436 494E A6 03                                  ldaa    3,x
10437 4950 08                                     inx
10438 4951 FF 4BF4                                stx     byte_4BF4
10439 4954 FE 4BF6                                ldx     byte_4BF6
10440 4957 A7 03                                  staa    3,x
10441 4959 08                                     inx
10442 495A FF 4BF6                                stx     byte_4BF6
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 181
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

10443 495D 5A                                     decb
10444 495E 26 EB                                  bne     loc_494B
10445 4960 39                                     rts
10446               * End of function sub_4949
10447               
10448               * ---------------------------------------------------------------------------
10449 4961    0D 0A               aDeleteOldBinar fcb     $D,$A
10450 4963    44 45 4C 45 54 45                   fcc     "DELETE OLD BINARY (Y-N)? "
10451 497C    04                                  fcb     4
10452               * ---------------------------------------------------------------------------
10453               * START OF FUNCTION CHUNK FOR sub_26E8
10454               
10455         497D                loc_497D        EQU     *
10456 497D 7D 4BFF                                tst     byte_4BFF
10457 4980 27 05                                  beq     loc_4987
10458 4982 CE 4C03                                ldx     #$4C03
10459 4985 20 63                                  bra     loc_49EA
10460               * ---------------------------------------------------------------------------
10461               
10462         4987                loc_4987        EQU     *
10463 4987 8D 29                                  bsr     sub_49B2
10464 4989 7D 4BFF                                tst     byte_4BFF
10465 498C 26 13                                  bne     locret_49A1
10466 498E 81 23                                  cmpa    #$23             * '#'
10467 4990 27 5B                                  beq     loc_49ED
10468               
10469         4992                loc_4992        EQU     *
10470 4992 8D 0E                                  bsr     sub_49A2
10471 4994 C6 3D                                  ldab    #$3D             * '='
10472 4996 86 80                                  ldaa    #$80             * '?'
10473 4998 90 3F                                  suba    $3F
10474 499A D2 3E                                  sbcb    $3E
10475 499C 26 01                                  bne     loc_499F
10476 499E 4D                                     tsta
10477               
10478         499F                loc_499F        EQU     *
10479 499F 22 E6                                  bhi     loc_4987
10480               
10481         49A1                locret_49A1     EQU     *
10482 49A1 39                                     rts
10483               * END OF FUNCTION CHUNK FOR sub_26E8
10484               
10485               * =============== S U B R O U TI N E =======================================
10486               
10487               
10488         49A2                sub_49A2        EQU     *
10489 49A2 DE 3E                                  ldx     $3E
10490               
10491         49A4                loc_49A4        EQU     *
10492 49A4 A7 00                                  staa    0,x
10493 49A6 08                                     inx
10494 49A7 DF 3E                                  stx     $3E
10495 49A9 81 0D                                  cmpa    #$D
10496 49AB 27 04                                  beq     locret_49B1
10497 49AD 8D 03                                  bsr     sub_49B2
10498 49AF 20 F3                                  bra     loc_49A4
10499               * ---------------------------------------------------------------------------
10500               
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 182
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

10501         49B1                locret_49B1     EQU     *
10502 49B1 39                                     rts
10503               * End of function sub_49A2
10504               
10505               
10506               * =============== S U B R O U TI N E =======================================
10507               
10508               
10509         49B2                sub_49B2        EQU     *
10510 49B2 FF 4BF4                                stx     byte_4BF4
10511               
10512         49B5                loc_49B5        EQU     *
10513 49B5 CE 4C03                                ldx     #$4C03
10514 49B8 7D 4BFE                                tst     byte_4BFE
10515 49BB 27 03                                  beq     loc_49C0
10516 49BD CE 4E83                                ldx     #$4E83
10517               
10518         49C0                loc_49C0        EQU     *
10519 49C0 BD B406                                jsr     FMS
10520 49C3 27 1E                                  beq     loc_49E3
10521 49C5 A6 01                                  ldaa    1,x
10522 49C7 81 08                                  cmpa    #8
10523 49C9 26 1F                                  bne     loc_49EA
10524 49CB 7D 4BFE                                tst     byte_4BFE
10525 49CE 27 0E                                  beq     loc_49DE
10526 49D0 7F 4BFE                                clr     byte_4BFE
10527 49D3 86 04                                  ldaa    #4
10528 49D5 A7 00                                  staa    0,x
10529 49D7 BD B406                                jsr     FMS
10530 49DA 26 0E                                  bne     loc_49EA
10531 49DC 20 D7                                  bra     loc_49B5
10532               * ---------------------------------------------------------------------------
10533               
10534         49DE                loc_49DE        EQU     *
10535 49DE 86 01                                  ldaa    #1
10536 49E0 B7 4BFF                                staa    byte_4BFF
10537               
10538         49E3                loc_49E3        EQU     *
10539 49E3 4D                                     tsta
10540 49E4 27 DA                                  beq     loc_49C0
10541 49E6 FE 4BF4                                ldx     byte_4BF4
10542 49E9 39                                     rts
10543               * ---------------------------------------------------------------------------
10544               
10545         49EA                loc_49EA        EQU     *
10546 49EA 7E 4841                                jmp     loc_4841
10547               * End of function sub_49B2
10548               
10549               * ---------------------------------------------------------------------------
10550               * START OF FUNCTION CHUNK FOR sub_26E8
10551               
10552         49ED                loc_49ED        EQU     *
10553 49ED 8D C3                                  bsr     sub_49B2
10554 49EF 81 49                                  cmpa    #$49             * 'I'
10555 49F1 27 0B                                  beq     loc_49FE
10556 49F3 DE 3E                                  ldx     $3E
10557 49F5 C6 23                                  ldab    #$23             * '#'
10558 49F7 E7 00                                  stab    0,x
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 183
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

10559 49F9 08                                     inx
10560 49FA DF 3E                                  stx     $3E
10561 49FC 20 94                                  bra     loc_4992
10562               * ---------------------------------------------------------------------------
10563               
10564         49FE                loc_49FE        EQU     *
10565 49FE 7D 4BFE                                tst     byte_4BFE
10566 4A01 26 48                                  bne     loc_4A4B
10567               
10568         4A03                loc_4A03        EQU     *
10569 4A03 8D AD                                  bsr     sub_49B2
10570 4A05 81 0D                                  cmpa    #$D
10571 4A07 27 42                                  beq     loc_4A4B
10572 4A09 81 20                                  cmpa    #$20             * ' '
10573 4A0B 26 F6                                  bne     loc_4A03
10574 4A0D 8D A3                                  bsr     sub_49B2
10575 4A0F 81 0D                                  cmpa    #$D
10576 4A11 27 38                                  beq     loc_4A4B
10577 4A13 FE 039A                                ldx     word_39A
10578 4A16 FF AC14                                stx     LINPTR
10579               
10580         4A19                loc_4A19        EQU     *
10581 4A19 A7 00                                  staa    0,x
10582 4A1B 08                                     inx
10583 4A1C 81 0D                                  cmpa    #$D
10584 4A1E 27 04                                  beq     loc_4A24
10585 4A20 8D 90                                  bsr     sub_49B2
10586 4A22 20 F5                                  bra     loc_4A19
10587               * ---------------------------------------------------------------------------
10588               
10589         4A24                loc_4A24        EQU     *
10590 4A24 CE 4E83                                ldx     #$4E83
10591 4A27 BD AD2D                                jsr     GETFIL
10592 4A2A 25 14                                  bcs     loc_4A40
10593 4A2C 86 01                                  ldaa    #1
10594 4A2E BD AD33                                jsr     SETEXT
10595 4A31 86 01                                  ldaa    #1
10596 4A33 A7 00                                  staa    0,x
10597 4A35 BD B406                                jsr     FMS
10598 4A38 26 06                                  bne     loc_4A40
10599 4A3A 7C 4BFE                                inc     byte_4BFE
10600 4A3D 7E 4987                                jmp     loc_4987
10601               * ---------------------------------------------------------------------------
10602               
10603         4A40                loc_4A40        EQU     *
10604 4A40 CE 4A54                                ldx     #$4A54
10605 4A43 BD 4B6C                                jsr     sub_4B6C
10606 4A46 CE 4E83                                ldx     #$4E83
10607 4A49 20 9F                                  bra     loc_49EA
10608               * ---------------------------------------------------------------------------
10609               
10610         4A4B                loc_4A4B        EQU     *
10611 4A4B CE 4A54                                ldx     #$4A54
10612 4A4E BD 4B6C                                jsr     sub_4B6C
10613 4A51 7E 4844                                jmp     loc_4844
10614               * END OF FUNCTION CHUNK FOR sub_26E8
10615               * ---------------------------------------------------------------------------
10616 4A54    0D 0A               aIncludeError   fcb     $D,$A
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 184
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

10617 4A56    23 49 4E 43 4C 55                   fcc     "#INCLUDE ERROR"
10618 4A64    04                                  fcb     4
10619               * ---------------------------------------------------------------------------
10620               * START OF FUNCTION CHUNK FOR sub_2EB2
10621               
10622         4A65                loc_4A65        EQU     *
10623 4A65 DE 3C                                  ldx     $3C
10624 4A67 A6 00                                  ldaa    0,x
10625 4A69 26 04                                  bne     loc_4A6F
10626 4A6B 7F 4BFB                                clr     byte_4BFB
10627               
10628         4A6E                locret_4A6E     EQU     *
10629 4A6E 39                                     rts
10630               * ---------------------------------------------------------------------------
10631               
10632         4A6F                loc_4A6F        EQU     *
10633 4A6F 81 FF                                  cmpa    #$FF
10634 4A71 26 15                                  bne     loc_4A88
10635 4A73 96 C0                                  ldaa    $C0
10636 4A75 27 F7                                  beq     locret_4A6E
10637 4A77 86 16                                  ldaa    #$16
10638 4A79 BD 4B0D                                jsr     sub_4B0D
10639 4A7C B6 4BFC                                ldaa    byte_4BFC
10640 4A7F BD 4B0D                                jsr     sub_4B0D
10641 4A82 B6 4BFD                                ldaa    byte_4BFD
10642 4A85 7E 4B0D                                jmp     sub_4B0D
10643               * ---------------------------------------------------------------------------
10644               
10645         4A88                loc_4A88        EQU     *
10646 4A88 81 01                                  cmpa    #1
10647 4A8A 26 E2                                  bne     locret_4A6E
10648 4A8C 08                                     inx
10649 4A8D 08                                     inx
10650 4A8E 08                                     inx
10651 4A8F FF 4BF8                                stx     byte_4BF8
10652               
10653         4A92                loc_4A92        EQU     *
10654 4A92 D6 3E                                  ldab    $3E
10655 4A94 96 3F                                  ldaa    $3F
10656 4A96 B0 4BF9                                suba    byte_4BF9
10657 4A99 F2 4BF8                                sbcb    byte_4BF8
10658 4A9C 26 5B                                  bne     loc_4AF9
10659 4A9E 81 80                                  cmpa    #$80             * '?'
10660 4AA0 24 57                                  bcc     loc_4AF9
10661 4AA2 7D 4BFB                                tst     byte_4BFB
10662 4AA5 26 13                                  bne     sub_4ABA
10663 4AA7 81 02                                  cmpa    #2
10664 4AA9 26 0F                                  bne     sub_4ABA
10665 4AAB E6 00                                  ldab    0,x
10666 4AAD C1 7E                                  cmpb    #$7E             * '~'
10667 4AAF 26 09                                  bne     sub_4ABA
10668 4AB1 5F                                     clrb
10669 4AB2 E1 01                                  cmpb    1,x
10670 4AB4 26 04                                  bne     sub_4ABA
10671 4AB6 E1 02                                  cmpb    2,x
10672 4AB8 27 3E                                  beq     locret_4AF8
10673               * END OF FUNCTION CHUNK FOR sub_2EB2
10674               
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 185
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

10675               * =============== S U B R O U TI N E =======================================
10676               
10677               
10678         4ABA                sub_4ABA        EQU     *
10679 4ABA B7 4BFA                                staa    byte_4BFA
10680 4ABD 86 02                                  ldaa    #2
10681 4ABF 8D 4C                                  bsr     sub_4B0D
10682 4AC1 DE 3C                                  ldx     $3C
10683 4AC3 A6 01                                  ldaa    1,x
10684 4AC5 7D 4BFB                                tst     byte_4BFB
10685 4AC8 26 03                                  bne     loc_4ACD
10686 4ACA B7 4BFC                                staa    byte_4BFC
10687               
10688         4ACD                loc_4ACD        EQU     *
10689 4ACD 8D 3E                                  bsr     sub_4B0D
10690 4ACF A6 02                                  ldaa    2,x
10691 4AD1 7D 4BFB                                tst     byte_4BFB
10692 4AD4 26 03                                  bne     loc_4AD9
10693 4AD6 B7 4BFD                                staa    byte_4BFD
10694               
10695         4AD9                loc_4AD9        EQU     *
10696 4AD9 8D 32                                  bsr     sub_4B0D
10697 4ADB 86 01                                  ldaa    #1
10698 4ADD B7 4BFB                                staa    byte_4BFB
10699 4AE0 7C 4BFA                                inc     byte_4BFA
10700 4AE3 B6 4BFA                                ldaa    byte_4BFA
10701 4AE6 8D 25                                  bsr     sub_4B0D
10702 4AE8 FE 4BF8                                ldx     byte_4BF8
10703               
10704         4AEB                loc_4AEB        EQU     *
10705 4AEB A6 00                                  ldaa    0,x
10706 4AED 8D 1E                                  bsr     sub_4B0D
10707 4AEF 08                                     inx
10708 4AF0 7A 4BFA                                dec     byte_4BFA
10709 4AF3 26 F6                                  bne     loc_4AEB
10710 4AF5 FF 4BF8                                stx     byte_4BF8
10711               
10712         4AF8                locret_4AF8     EQU     *
10713 4AF8 39                                     rts
10714               * End of function sub_4ABA
10715               
10716               * ---------------------------------------------------------------------------
10717               * START OF FUNCTION CHUNK FOR sub_2EB2
10718               
10719         4AF9                loc_4AF9        EQU     *
10720 4AF9 86 7F                                  ldaa    #$7F             * ''
10721 4AFB 8D BD                                  bsr     sub_4ABA
10722 4AFD DE 3C                                  ldx     $3C
10723 4AFF E6 01                                  ldab    1,x
10724 4B01 A6 02                                  ldaa    2,x
10725 4B03 8B 80                                  adda    #$80             * '?'
10726 4B05 C9 00                                  adcb    #0
10727 4B07 E7 01                                  stab    1,x
10728 4B09 A7 02                                  staa    2,x
10729 4B0B 20 85                                  bra     loc_4A92
10730               * END OF FUNCTION CHUNK FOR sub_2EB2
10731               
10732               * =============== S U B R O U TI N E =======================================
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 186
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

10733               
10734               
10735         4B0D                sub_4B0D        EQU     *
10736 4B0D FF 4BF4                                stx     byte_4BF4
10737 4B10 CE 4D43                                ldx     #$4D43
10738 4B13 BD B406                                jsr     FMS
10739 4B16 26 04                                  bne     loc_4B1C
10740 4B18 FE 4BF4                                ldx     byte_4BF4
10741 4B1B 39                                     rts
10742               * ---------------------------------------------------------------------------
10743               
10744         4B1C                loc_4B1C        EQU     *
10745 4B1C 7E 4841                                jmp     loc_4841
10746               * End of function sub_4B0D
10747               
10748               
10749               * =============== S U B R O U TI N E =======================================
10750               
10751               
10752         4B1F                sub_4B1F        EQU     *
10753 4B1F CE 4C03                                ldx     #$4C03
10754 4B22 C6 08                                  ldab    #8
10755               
10756         4B24                loc_4B24        EQU     *
10757 4B24 A6 04                                  ldaa    4,x
10758 4B26 26 02                                  bne     loc_4B2A
10759 4B28 86 20                                  ldaa    #$20             * ' '
10760               
10761         4B2A                loc_4B2A        EQU     *
10762 4B2A BD AD18                                jsr     PUTCHR
10763 4B2D 08                                     inx
10764 4B2E 5A                                     decb
10765 4B2F 26 F3                                  bne     loc_4B24
10766 4B31 CE 4BBB                                ldx     #$4BBB
10767 4B34 BD 4B5F                                jsr     sub_4B5F
10768 4B37 B6 039D                                ldaa    byte_39D
10769 4B3A 27 08                                  beq     loc_4B44
10770 4B3C CE 4BC0                                ldx     #$4BC0
10771 4B3F BD 4B5F                                jsr     sub_4B5F
10772 4B42 20 06                                  bra     loc_4B4A
10773               * ---------------------------------------------------------------------------
10774               
10775         4B44                loc_4B44        EQU     *
10776 4B44 CE 4BC5                                ldx     #$4BC5
10777 4B47 BD 4B5F                                jsr     sub_4B5F
10778               
10779         4B4A                loc_4B4A        EQU     *
10780 4B4A BD 4B82                                jsr     sub_4B82
10781 4B4D CE 4BEA                                ldx     #$4BEA
10782 4B50 BD 4B5F                                jsr     sub_4B5F
10783 4B53 7C 4C00                                inc     byte_4C00
10784 4B56 B6 4C00                                ldaa    byte_4C00
10785 4B59 BD 4B78                                jsr     sub_4B78
10786 4B5C 7E AD24                                jmp     PCRLF
10787               * End of function sub_4B1F
10788               
10789               
10790               * =============== S U B R O U TI N E =======================================
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 187
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

10791               
10792               
10793         4B5F                sub_4B5F        EQU     *
10794 4B5F A6 00                                  ldaa    0,x
10795 4B61 81 04                                  cmpa    #4
10796 4B63 27 06                                  beq     locret_4B6B
10797 4B65 BD AD18                                jsr     PUTCHR
10798 4B68 08                                     inx
10799 4B69 20 F4                                  bra     sub_4B5F
10800               * ---------------------------------------------------------------------------
10801               
10802         4B6B                locret_4B6B     EQU     *
10803 4B6B 39                                     rts
10804               * End of function sub_4B5F
10805               
10806               
10807               * =============== S U B R O U TI N E =======================================
10808               
10809               
10810         4B6C                sub_4B6C        EQU     *
10811 4B6C A6 00                                  ldaa    0,x
10812 4B6E 81 04                                  cmpa    #4
10813 4B70 27 F9                                  beq     locret_4B6B
10814 4B72 BD AD12                                jsr     OUTCH2
10815 4B75 08                                     inx
10816 4B76 20 F4                                  bra     sub_4B6C
10817               * End of function sub_4B6C
10818               
10819               
10820               * =============== S U B R O U TI N E =======================================
10821               
10822               
10823         4B78                sub_4B78        EQU     *
10824 4B78 B7 4C02                                staa    byte_4C02
10825 4B7B CE 4C01                                ldx     #$4C01
10826 4B7E 5F                                     clrb
10827 4B7F 7E AD39                                jmp     OUTDEC
10828               * End of function sub_4B78
10829               
10830               
10831               * =============== S U B R O U TI N E =======================================
10832               
10833               
10834         4B82                sub_4B82        EQU     *
10835 4B82 B6 AC0E                                ldaa    MONTH
10836 4B85 BD 4B78                                jsr     sub_4B78
10837 4B88 86 2D                                  ldaa    #$2D             * '-'
10838 4B8A BD AD18                                jsr     PUTCHR
10839 4B8D B6 AC0F                                ldaa    DAY
10840 4B90 BD 4B78                                jsr     sub_4B78
10841 4B93 86 2D                                  ldaa    #$2D             * '-'
10842 4B95 BD AD18                                jsr     PUTCHR
10843 4B98 B6 AC10                                ldaa    YEAR
10844 4B9B 7E 4B78                                jmp     sub_4B78
10845               * End of function sub_4B82
10846               
10847               
10848               * =============== S U B R O U TI N E =======================================
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 188
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

10849               
10850               
10851         4B9E                sub_4B9E        EQU     *
10852 4B9E BD AD24                                jsr     PCRLF
10853 4BA1 B6 039D                                ldaa    byte_39D
10854 4BA4 26 0C                                  bne     loc_4BB2
10855 4BA6 CE 4BBB                                ldx     #$4BBB
10856 4BA9 BD 4B5F                                jsr     sub_4B5F
10857 4BAC CE 4BBC                                ldx     #$4BBC
10858 4BAF BD 4B5F                                jsr     sub_4B5F
10859               
10860         4BB2                loc_4BB2        EQU     *
10861 4BB2 CE 4BC5                                ldx     #$4BC5
10862 4BB5 BD 4B5F                                jsr     sub_4B5F
10863 4BB8 7E AD24                                jmp     PCRLF
10864               * End of function sub_4B9E
10865               
10866               * ---------------------------------------------------------------------------
10867 4BBB    20 20 20 20 20 20   aSplMCompilerVe fcc     "         "
10868 4BC4    04                                  fcb     4
10869 4BC5    53 50 4C 2F 4D 20                   fcc     "SPL/M COMPILER VERSION 1.2          "
10870 4BE9    04                                  fcb     4
10871 4BEA    20 20 20 50 41 47                   fcc     "   PAGE "
10872 4BF2    04                                  fcb     4
10873 4BF3    00                  byte_4BF3       fcb     0
10874 4BF4    00                  byte_4BF4       fcb     0
10875 4BF5    00                                  fcb     0
10876 4BF6    00                  byte_4BF6       fcb     0
10877 4BF7    00                                  fcb     0
10878 4BF8    00                  byte_4BF8       fcb     0
10879 4BF9    00                  byte_4BF9       fcb     0
10880 4BFA    00                  byte_4BFA       fcb     0
10881 4BFB    00                  byte_4BFB       fcb     0
10882 4BFC    00                  byte_4BFC       fcb     0
10883 4BFD    00                  byte_4BFD       fcb     0
10884 4BFE    00                  byte_4BFE       fcb     0
10885 4BFF    00                  byte_4BFF       fcb     0
10886 4C00    00                  byte_4C00       fcb     0
10887 4C01    00                                  fcb     0
10888 4C02    00                  byte_4C02       fcb     0
10889               * end of 'TEXT'
10890               
10891               
10892         0380                                end     start

No errors
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 189
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm


Symbol table


aA              405C aAll            4052 aAsed           406E
aAta            40E1 aByteaddrprocli 0551 aCl             405E
AddBAtoX        0C78 aDdr            403A aDdress         4041
aDeleteOldBinar 4961 aEclare         4064 aEm             4114
aEma            411C aEn             4125 aEnerate        412B
aEturn          40AF aF              4091 aHen            40B8
aHile           40BF aIgh            408A aIllegalOptionS 48D9
aIncludeError   4A54 aInus           40F5 aIt             40DB
aIterally       40CF aLse            407D aLus            40EE
aNd             2D51 aNd_0           4077 aNd_1           4108
aO              4059 aO_0            4145 aOd             40E8
aOf             4084 aOnitor         413B aOnPlay         2D41
aOr             4102 aOt             410E aOw             4096
aPut            2D2A aR              40FD aReadCass       2D32
aReak           40C7 aRoc            409C aRocedure       40A3
aSplMCompilerVe 4BBB aY              4136 aYte            404B
byte_1441       1441 byte_1443       1443 byte_1B7D       1B7D
byte_2704       2704 byte_3000       3000 byte_3001       3001
byte_3002       3002 byte_3203       3203 byte_3204       3204
byte_3205       3205 byte_3206       3206 byte_3207       3207
byte_3408       3408 byte_3409       3409 byte_386        0386
byte_387        0387 byte_388        0388 byte_396        0396
byte_39D        039D byte_3A1        03A1 byte_3A2        03A2
byte_4460       4460 byte_4BF3       4BF3 byte_4BF4       4BF4
byte_4BF6       4BF6 byte_4BF8       4BF8 byte_4BF9       4BF9
byte_4BFA       4BFA byte_4BFB       4BFB byte_4BFC       4BFC
byte_4BFD       4BFD byte_4BFE       4BFE byte_4BFF       4BFF
byte_4C00       4C00 byte_4C02       4C02 byte_571        0571
CURCHR          AC18 DAY             AC0F FMS             B406
FMSCLS          B403 GETCHR          AD15 GETFIL          AD2D
INBUFF          AD1B LINPTR          AC14 loc_1011        1011
loc_1018        1018 loc_101F        101F loc_1026        1026
loc_102E        102E loc_1033        1033 loc_103B        103B
loc_1042        1042 loc_104C        104C loc_104F        104F
loc_1054        1054 loc_105E        105E loc_1064        1064
loc_1069        1069 loc_106E        106E loc_107D        107D
loc_1093        1093 loc_109C        109C loc_10A0        10A0
loc_10A6        10A6 loc_10AF        10AF loc_10B9        10B9
loc_10BF        10BF loc_10C7        10C7 loc_10CE        10CE
loc_10D4        10D4 loc_10DB        10DB loc_10E6        10E6
loc_10F1        10F1 loc_1104        1104 loc_1119        1119
loc_111C        111C loc_1142        1142 loc_1158        1158
loc_115F        115F loc_117B        117B loc_117F        117F
loc_1190        1190 loc_1197        1197 loc_11A6        11A6
loc_1204        1204 loc_1207        1207 loc_1211        1211
loc_1213        1213 loc_1218        1218 loc_1232        1232
loc_1237        1237 loc_123F        123F loc_1247        1247
loc_124A        124A loc_1262        1262 loc_1267        1267
loc_1274        1274 loc_1297        1297 loc_12A1        12A1
loc_12B0        12B0 loc_12C7        12C7 loc_12DA        12DA
loc_12DF        12DF loc_12E8        12E8 loc_12ED        12ED
loc_12F2        12F2 loc_1305        1305 loc_130C        130C
loc_1346        1346 loc_134A        134A loc_135C        135C
loc_1365        1365 loc_1372        1372 loc_1375        1375
loc_1378        1378 loc_137F        137F loc_1389        1389
loc_138E        138E loc_1397        1397 loc_139C        139C
loc_13A0        13A0 loc_13B1        13B1 loc_13D7        13D7
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 190
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

loc_13E0        13E0 loc_13E5        13E5 loc_13F6        13F6
loc_13FC        13FC loc_13FF        13FF loc_1415        1415
loc_1422        1422 loc_1438        1438 loc_1467        1467
loc_1469        1469 loc_146E        146E loc_1476        1476
loc_147B        147B loc_1498        1498 loc_149F        149F
loc_14A7        14A7 loc_14C8        14C8 loc_14D0        14D0
loc_14F5        14F5 loc_14FC        14FC loc_152C        152C
loc_1552        1552 loc_1566        1566 loc_1589        1589
loc_158E        158E loc_15CF        15CF loc_1625        1625
loc_163D        163D loc_1657        1657 loc_1660        1660
loc_1664        1664 loc_1666        1666 loc_167A        167A
loc_1680        1680 loc_1683        1683 loc_168D        168D
loc_1696        1696 loc_16A4        16A4 loc_16B0        16B0
loc_16C1        16C1 loc_16DC        16DC loc_16E1        16E1
loc_16F3        16F3 loc_16FD        16FD loc_1714        1714
loc_171E        171E loc_1727        1727 loc_172D        172D
loc_1730        1730 loc_1737        1737 loc_1741        1741
loc_174B        174B loc_175A        175A loc_176F        176F
loc_1778        1778 loc_1786        1786 loc_1789        1789
loc_178F        178F loc_1798        1798 loc_179B        179B
loc_17A4        17A4 loc_17AB        17AB loc_17B2        17B2
loc_17C1        17C1 loc_17C7        17C7 loc_17C9        17C9
loc_17D0        17D0 loc_17E1        17E1 loc_17EE        17EE
loc_17F1        17F1 loc_17FD        17FD loc_1800        1800
loc_1803        1803 loc_180D        180D loc_1820        1820
loc_1827        1827 loc_182A        182A loc_182E        182E
loc_1834        1834 loc_1842        1842 loc_1851        1851
loc_185A        185A loc_1863        1863 loc_186C        186C
loc_1875        1875 loc_1878        1878 loc_187C        187C
loc_1886        1886 loc_1895        1895 loc_189F        189F
loc_18C2        18C2 loc_18E0        18E0 loc_18E7        18E7
loc_190C        190C loc_1910        1910 loc_1914        1914
loc_1959        1959 loc_1964        1964 loc_197A        197A
loc_19A3        19A3 loc_19A6        19A6 loc_19B1        19B1
loc_19BB        19BB loc_19D5        19D5 loc_19DE        19DE
loc_19E2        19E2 loc_19F5        19F5 loc_19F9        19F9
loc_1A24        1A24 loc_1A3C        1A3C loc_1A54        1A54
loc_1A57        1A57 loc_1A66        1A66 loc_1A74        1A74
loc_1A77        1A77 loc_1AA0        1AA0 loc_1AEC        1AEC
loc_1AF0        1AF0 loc_1AF7        1AF7 loc_1B03        1B03
loc_1B22        1B22 loc_1B2F        1B2F loc_1B33        1B33
loc_1B3E        1B3E loc_1B47        1B47 loc_1B4A        1B4A
loc_1B4C        1B4C loc_1B59        1B59 loc_1B6D        1B6D
loc_1B71        1B71 loc_1B79        1B79 loc_1B94        1B94
loc_1B95        1B95 loc_1BB9        1BB9 loc_1BF2        1BF2
loc_1C4D        1C4D loc_1C4F        1C4F loc_1C67        1C67
loc_1C75        1C75 loc_1C9D        1C9D loc_1CA4        1CA4
loc_1CAC        1CAC loc_1CBB        1CBB loc_1CC2        1CC2
loc_1CD5        1CD5 loc_1CDC        1CDC loc_1CF7        1CF7
loc_1D0A        1D0A loc_1D28        1D28 loc_1D4D        1D4D
loc_1D7C        1D7C loc_1D7F        1D7F loc_1D87        1D87
loc_1D8F        1D8F loc_1D95        1D95 loc_1D9E        1D9E
loc_1DA9        1DA9 loc_1DB8        1DB8 loc_1DC8        1DC8
loc_1DDD        1DDD loc_1DE9        1DE9 loc_1E36        1E36
loc_1E5C        1E5C loc_1E65        1E65 loc_1E82        1E82
loc_1E8E        1E8E loc_1E95        1E95 loc_1E9E        1E9E
loc_1EA2        1EA2 loc_1EA5        1EA5 loc_1EAE        1EAE
loc_1ED7        1ED7 loc_1EE5        1EE5 loc_1F1B        1F1B
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 191
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

loc_1F24        1F24 loc_1F45        1F45 loc_1F4C        1F4C
loc_1F8D        1F8D loc_1F99        1F99 loc_1F9E        1F9E
loc_1FA4        1FA4 loc_1FC3        1FC3 loc_1FD8        1FD8
loc_1FDF        1FDF loc_1FE2        1FE2 loc_1FF2        1FF2
loc_2000        2000 loc_2010        2010 loc_201A        201A
loc_201D        201D loc_2024        2024 loc_2027        2027
loc_202C        202C loc_203A        203A loc_2040        2040
loc_2048        2048 loc_2053        2053 loc_2068        2068
loc_2071        2071 loc_2074        2074 loc_207B        207B
loc_2097        2097 loc_20A1        20A1 loc_20AA        20AA
loc_20B7        20B7 loc_20BB        20BB loc_20BE        20BE
loc_20D4        20D4 loc_20D9        20D9 loc_20E1        20E1
loc_20E4        20E4 loc_20E9        20E9 loc_2103        2103
loc_2110        2110 loc_2117        2117 loc_2125        2125
loc_212E        212E loc_2131        2131 loc_2134        2134
loc_214B        214B loc_2162        2162 loc_2169        2169
loc_216F        216F loc_2179        2179 loc_2185        2185
loc_2191        2191 loc_2194        2194 loc_219B        219B
loc_21A2        21A2 loc_21A5        21A5 loc_21B0        21B0
loc_21B3        21B3 loc_21BF        21BF loc_21C5        21C5
loc_21D0        21D0 loc_21D3        21D3 loc_21D6        21D6
loc_21E2        21E2 loc_21E5        21E5 loc_2200        2200
loc_2215        2215 loc_221F        221F loc_222F        222F
loc_2232        2232 loc_223F        223F loc_2248        2248
loc_224E        224E loc_2253        2253 loc_2269        2269
loc_2281        2281 loc_22AA        22AA loc_22B1        22B1
loc_22CD        22CD loc_22D5        22D5 loc_22DD        22DD
loc_22F8        22F8 loc_22FE        22FE loc_2304        2304
loc_230A        230A loc_230F        230F loc_2327        2327
loc_234E        234E loc_2379        2379 loc_2390        2390
loc_2399        2399 loc_23C8        23C8 loc_23EB        23EB
loc_23F6        23F6 loc_2404        2404 loc_2409        2409
loc_241E        241E loc_2424        2424 loc_2431        2431
loc_2438        2438 loc_247D        247D loc_2487        2487
loc_2491        2491 loc_249B        249B loc_24A5        24A5
loc_24AF        24AF loc_24B9        24B9 loc_24C3        24C3
loc_24CD        24CD loc_24D7        24D7 loc_24E1        24E1
loc_24EB        24EB loc_24F6        24F6 loc_2511        2511
loc_2514        2514 loc_2519        2519 loc_253B        253B
loc_2545        2545 loc_2548        2548 loc_2558        2558
loc_2586        2586 loc_25A2        25A2 loc_25E0        25E0
loc_260A        260A loc_2619        2619 loc_2647        2647
loc_2660        2660 loc_2667        2667 loc_266F        266F
loc_2671        2671 loc_2685        2685 loc_269E        269E
loc_26A7        26A7 loc_26A9        26A9 loc_26B0        26B0
loc_26B9        26B9 loc_26BE        26BE loc_26C7        26C7
loc_26E2        26E2 loc_26F0        26F0 loc_26F5        26F5
loc_2706        2706 loc_270D        270D loc_2713        2713
loc_2716        2716 loc_271E        271E loc_2723        2723
loc_2736        2736 loc_273D        273D loc_2744        2744
loc_274A        274A loc_2755        2755 loc_278C        278C
loc_279C        279C loc_27A3        27A3 loc_27AF        27AF
loc_27B4        27B4 loc_27C0        27C0 loc_27C9        27C9
loc_27CE        27CE loc_27F8        27F8 loc_27FB        27FB
loc_2804        2804 loc_281B        281B loc_2825        2825
loc_282F        282F loc_2839        2839 loc_2840        2840
loc_2843        2843 loc_2857        2857 loc_285B        285B
loc_286A        286A loc_287C        287C loc_2884        2884
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 192
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

loc_2887        2887 loc_288F        288F loc_289C        289C
loc_28A0        28A0 loc_28A5        28A5 loc_28A8        28A8
loc_28AC        28AC loc_28E7        28E7 loc_28FA        28FA
loc_2909        2909 loc_2916        2916 loc_2928        2928
loc_2936        2936 loc_293A        293A loc_2959        2959
loc_2969        2969 loc_2987        2987 loc_298E        298E
loc_2993        2993 loc_2999        2999 loc_29A1        29A1
loc_29A5        29A5 loc_29B1        29B1 loc_29B9        29B9
loc_29C8        29C8 loc_29CB        29CB loc_29D2        29D2
loc_29F0        29F0 loc_29FB        29FB loc_2A22        2A22
loc_2A29        2A29 loc_2A32        2A32 loc_2A58        2A58
loc_2A5A        2A5A loc_2A5C        2A5C loc_2A6F        2A6F
loc_2A84        2A84 loc_2A89        2A89 loc_2A8F        2A8F
loc_2A9E        2A9E loc_2AAA        2AAA loc_2AC2        2AC2
loc_2ACD        2ACD loc_2AD7        2AD7 loc_2AE4        2AE4
loc_2AE5        2AE5 loc_2B07        2B07 loc_2B0B        2B0B
loc_2B13        2B13 loc_2B84        2B84 loc_2B90        2B90
loc_2C45        2C45 loc_2C8A        2C8A loc_2CA2        2CA2
loc_2CAF        2CAF loc_2CB8        2CB8 loc_2CCC        2CCC
loc_2CE7        2CE7 loc_2CF0        2CF0 loc_2CF3        2CF3
loc_2D03        2D03 loc_2D10        2D10 loc_2D18        2D18
loc_2D25        2D25 loc_2D2F        2D2F loc_2D3E        2D3E
loc_2D4C        2D4C loc_2D55        2D55 loc_2D65        2D65
loc_2D72        2D72 loc_2DA7        2DA7 loc_2DB9        2DB9
loc_2DDA        2DDA loc_2DE2        2DE2 loc_2DEB        2DEB
loc_2DEE        2DEE loc_2E03        2E03 loc_2E28        2E28
loc_2E30        2E30 loc_2E33        2E33 loc_2E3D        2E3D
loc_2E59        2E59 loc_2E61        2E61 loc_2E66        2E66
loc_2E7E        2E7E loc_2E90        2E90 loc_2E98        2E98
loc_2EA1        2EA1 loc_2EA7        2EA7 loc_2EAF        2EAF
loc_2EB8        2EB8 loc_2EC3        2EC3 loc_2ED5        2ED5
loc_2EE7        2EE7 loc_2F08        2F08 loc_2F0D        2F0D
loc_2F15        2F15 loc_2F21        2F21 loc_2F26        2F26
loc_2F2F        2F2F loc_2F44        2F44 loc_2F63        2F63
loc_2F71        2F71 loc_2F77        2F77 loc_2F81        2F81
loc_2F84        2F84 loc_2F93        2F93 loc_2F96        2F96
loc_2F99        2F99 loc_2F9C        2F9C loc_2FAF        2FAF
loc_2FB4        2FB4 loc_2FBA        2FBA loc_2FBE        2FBE
loc_2FC4        2FC4 loc_2FCC        2FCC loc_2FD7        2FD7
loc_2FDA        2FDA loc_2FE6        2FE6 loc_2FEC        2FEC
loc_390         0390 loc_393         0393 loc_3AA         03AA
loc_4841        4841 loc_4844        4844 loc_484A        484A
loc_4891        4891 loc_48A1        48A1 loc_48AA        48AA
loc_48B0        48B0 loc_48B5        48B5 loc_48BD        48BD
loc_48C3        48C3 loc_48C8        48C8 loc_48D0        48D0
loc_48F4        48F4 loc_48FA        48FA loc_4910        4910
loc_492B        492B loc_4946        4946 loc_494B        494B
loc_497D        497D loc_4987        4987 loc_4992        4992
loc_499F        499F loc_49A4        49A4 loc_49B5        49B5
loc_49C0        49C0 loc_49DE        49DE loc_49E3        49E3
loc_49EA        49EA loc_49ED        49ED loc_49FE        49FE
loc_4A03        4A03 loc_4A19        4A19 loc_4A24        4A24
loc_4A40        4A40 loc_4A4B        4A4B loc_4A65        4A65
loc_4A6F        4A6F loc_4A88        4A88 loc_4A92        4A92
loc_4ACD        4ACD loc_4AD9        4AD9 loc_4AEB        4AEB
loc_4AF9        4AF9 loc_4B1C        4B1C loc_4B24        4B24
loc_4B2A        4B2A loc_4B44        4B44 loc_4B4A        4B4A
loc_4BB2        4BB2 loc_59F         059F loc_5A4         05A4
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 193
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

loc_5AC         05AC loc_5BD         05BD loc_5E3         05E3
loc_5E6         05E6 loc_5F1         05F1 loc_5FA         05FA
loc_603         0603 loc_60C         060C loc_610         0610
loc_615         0615 loc_61E         061E loc_627         0627
loc_62E         062E loc_635         0635 loc_63C         063C
loc_68B         068B loc_6E9         06E9 loc_718         0718
loc_724         0724 loc_734         0734 loc_73B         073B
loc_774         0774 loc_788         0788 loc_7AE         07AE
loc_7BE         07BE loc_7C3         07C3 loc_7CF         07CF
loc_7DB         07DB loc_7E7         07E7 loc_7F3         07F3
loc_7FC         07FC loc_805         0805 loc_806         0806
loc_818         0818 loc_821         0821 loc_83F         083F
loc_84C         084C loc_862         0862 loc_86A         086A
loc_885         0885 loc_898         0898 loc_8A8         08A8
loc_8B3         08B3 loc_8BD         08BD loc_8C8         08C8
loc_8E5         08E5 loc_8EE         08EE loc_8FB         08FB
loc_90B         090B loc_917         0917 loc_923         0923
loc_92F         092F loc_93B         093B loc_944         0944
loc_94D         094D loc_956         0956 loc_95D         095D
loc_95F         095F loc_966         0966 loc_96F         096F
loc_98A         098A loc_993         0993 loc_99F         099F
loc_9AB         09AB loc_9B4         09B4 loc_9E4         09E4
loc_9E9         09E9 loc_9F2         09F2 loc_9FF         09FF
loc_A11         0A11 loc_A28         0A28 loc_A2E         0A2E
loc_A34         0A34 loc_A45         0A45 loc_A5F         0A5F
loc_A6A         0A6A loc_AA9         0AA9 loc_AC3         0AC3
loc_ADB         0ADB loc_ADE         0ADE loc_B13         0B13
loc_B1D         0B1D loc_B47         0B47 loc_B8D         0B8D
loc_BB9         0BB9 loc_BE2         0BE2 loc_BF5         0BF5
loc_C49         0C49 loc_C53         0C53 loc_C5C         0C5C
loc_C74         0C74 loc_C7A         0C7A loc_CA8         0CA8
loc_CAE         0CAE loc_CB2         0CB2 loc_CB5         0CB5
loc_CC5         0CC5 loc_CC9         0CC9 loc_CD0         0CD0
loc_CDA         0CDA loc_CE2         0CE2 loc_CE5         0CE5
loc_CEA         0CEA loc_CF0         0CF0 loc_D0A         0D0A
loc_D14         0D14 loc_D26         0D26 loc_D36         0D36
loc_D3C         0D3C loc_D42         0D42 loc_D47         0D47
loc_D4D         0D4D loc_D51         0D51 loc_D5B         0D5B
loc_D63         0D63 loc_D6B         0D6B loc_D73         0D73
loc_D7B         0D7B loc_D8C         0D8C loc_DA5         0DA5
loc_DAF         0DAF loc_DB3         0DB3 loc_DD5         0DD5
loc_DDC         0DDC loc_E32         0E32 loc_E38         0E38
loc_E3E         0E3E loc_E50         0E50 loc_E58         0E58
loc_E62         0E62 loc_E74         0E74 loc_E80         0E80
loc_E8A         0E8A loc_ECD         0ECD loc_F10         0F10
loc_F15         0F15 loc_F25         0F25 loc_F2E         0F2E
loc_F34         0F34 loc_F4B         0F4B loc_F55         0F55
loc_F5A         0F5A loc_F5B         0F5B loc_F75         0F75
loc_F7F         0F7F loc_F8E         0F8E loc_F94         0F94
loc_F9D         0F9D loc_FA0         0FA0 loc_FA9         0FA9
loc_FAF         0FAF loc_FB8         0FB8 loc_FCD         0FCD
loc_FD2         0FD2 loc_FDF         0FDF loc_FEE         0FEE
loc_FF8         0FF8 loc_FFE         0FFE locret_118F     118F
locret_140F     140F locret_15AC     15AC locret_15D7     15D7
locret_1889     1889 locret_1B32     1B32 locret_1BB7     1BB7
locret_1F93     1F93 locret_201C     201C locret_21EF     21EF
locret_255F     255F locret_2789     2789 locret_2794     2794
locret_28EE     28EE locret_2A4E     2A4E locret_2CB7     2CB7
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 194
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

locret_2E8D     2E8D locret_2EC9     2EC9 locret_49A1     49A1
locret_49B1     49B1 locret_4A6E     4A6E locret_4AF8     4AF8
locret_4B6B     4B6B locret_6B0      06B0 locret_973      0973
locret_9BB      09BB locret_EB9      0EB9 MONTH           AC0E
nullsub_1       2FFA NXTCH           AD27 OUTCH2          AD12
OUTDEC          AD39 PCRLF           AD24 processcmdlin   4825
PUTCHR          AD18 RPTERR          AD3F RSTRIO          AD2A
SETEXT          AD33 SFE1            E124 stacksave       2C76
start           0380 start_0         2C78 sub_1009        1009
sub_112A        112A sub_1130        1130 sub_1137        1137
sub_1148        1148 sub_116F        116F sub_1181        1181
sub_119E        119E sub_11B6        11B6 sub_11BF        11BF
sub_11C7        11C7 sub_11D0        11D0 sub_11DB        11DB
sub_11E4        11E4 sub_1200        1200 sub_1222        1222
sub_124F        124F sub_126A        126A sub_1285        1285
sub_12F9        12F9 sub_132E        132E sub_1384        1384
sub_13A5        13A5 sub_13C8        13C8 sub_1403        1403
sub_1450        1450 sub_1457        1457 sub_1489        1489
sub_14B7        14B7 sub_1500        1500 sub_1555        1555
sub_15A2        15A2 sub_15AD        15AD sub_15E5        15E5
sub_15F9        15F9 sub_1609        1609 sub_1615        1615
sub_161D        161D sub_1636        1636 sub_1644        1644
sub_164D        164D sub_1650        1650 sub_169D        169D
sub_16B3        16B3 sub_16D3        16D3 sub_174E        174E
sub_1760        1760 sub_17B5        17B5 sub_17D3        17D3
sub_181C        181C sub_1846        1846 sub_188A        188A
sub_18FA        18FA sub_192C        192C sub_199C        199C
sub_19B8        19B8 sub_19EC        19EC sub_1A05        1A05
sub_1A08        1A08 sub_1A10        1A10 sub_1AAD        1AAD
sub_1ABB        1ABB sub_1ACC        1ACC sub_1B00        1B00
sub_1B1F        1B1F sub_1B81        1B81 sub_1B8A        1B8A
sub_1B8F        1B8F sub_1B9D        1B9D sub_1BC2        1BC2
sub_1BC4        1BC4 sub_1BE1        1BE1 sub_1C00        1C00
sub_1C07        1C07 sub_1C0E        1C0E sub_1C15        1C15
sub_1C1D        1C1D sub_1C30        1C30 sub_1C3C        1C3C
sub_1C58        1C58 sub_1C85        1C85 sub_1C95        1C95
sub_1CA7        1CA7 sub_1CC8        1CC8 sub_1CE3        1CE3
sub_1D37        1D37 sub_1DA1        1DA1 sub_1DD0        1DD0
sub_1DD2        1DD2 sub_1DDB        1DDB sub_1DF6        1DF6
sub_1E04        1E04 sub_1E19        1E19 sub_1EDB        1EDB
sub_1F94        1F94 sub_1FFB        1FFB sub_2034        2034
sub_2155        2155 sub_215D        215D sub_2172        2172
sub_218B        218B sub_21DD        21DD sub_21F0        21F0
sub_2238        2238 sub_225B        225B sub_2295        2295
sub_22A3        22A3 sub_22BD        22BD sub_22F3        22F3
sub_2317        2317 sub_232A        232A sub_2336        2336
sub_2342        2342 sub_2354        2354 sub_2387        2387
sub_239C        239C sub_23A7        23A7 sub_23B2        23B2
sub_23CB        23CB sub_2459        2459 sub_24F9        24F9
sub_24FF        24FF sub_250C        250C sub_2520        2520
sub_252E        252E sub_2562        2562 sub_2583        2583
sub_25B3        25B3 sub_25D4        25D4 sub_25D9        25D9
sub_25EE        25EE sub_2608        2608 sub_2611        2611
sub_261E        261E sub_2633        2633 sub_26AA        26AA
sub_26D7        26D7 sub_26E8        26E8 sub_26FF        26FF
sub_272C        272C sub_275D        275D sub_2762        2762
sub_2768        2768 sub_276E        276E sub_2774        2774
sub_278A        278A sub_27C5        27C5 sub_27EB        27EB
6800Assembler 6800 Assembler (c) 1988-2013 Evenson Consulting Services                                                                                                                                                                                Page 195
FILE: C:\src\Emulators\memulator\memulator\COMMANDS\SPLM.asm

sub_27ED        27ED sub_280D        280D sub_2812        2812
sub_28CD        28CD sub_28D6        28D6 sub_28EF        28EF
sub_28FD        28FD sub_2903        2903 sub_291F        291F
sub_2934        2934 sub_2971        2971 sub_29E9        29E9
sub_29F4        29F4 sub_2A00        2A00 sub_2A03        2A03
sub_2A08        2A08 sub_2A12        2A12 sub_2A1A        2A1A
sub_2A4F        2A4F sub_2A5F        2A5F sub_2A67        2A67
sub_2A96        2A96 sub_2AB2        2AB2 sub_2B00        2B00
sub_2B02        2B02 sub_2B74        2B74 sub_2B7A        2B7A
sub_2B7F        2B7F sub_2C90        2C90 sub_2C9A        2C9A
sub_2D00        2D00 sub_2E44        2E44 sub_2E4F        2E4F
sub_2E70        2E70 sub_2E84        2E84 sub_2E9B        2E9B
sub_2EB2        2EB2 sub_2EBB        2EBB sub_2ECF        2ECF
sub_2EDE        2EDE sub_2F03        2F03 sub_2F32        2F32
sub_2F8D        2F8D sub_2FA4        2FA4 sub_383         0383
sub_38A         038A sub_38D         038D sub_39E         039E
sub_3A4         03A4 sub_3A7         03A7 sub_4800        4800
sub_4949        4949 sub_49A2        49A2 sub_49B2        49B2
sub_4ABA        4ABA sub_4B0D        4B0D sub_4B1F        4B1F
sub_4B5F        4B5F sub_4B6C        4B6C sub_4B78        4B78
sub_4B82        4B82 sub_4B9E        4B9E sub_59C         059C
sub_632         0632 sub_643         0643 sub_646         0646
sub_6B1         06B1 sub_6C3         06C3 sub_6DB         06DB
sub_6FC         06FC sub_74F         074F sub_793         0793
sub_7B5         07B5 sub_7BA         07BA sub_82D         082D
sub_8D4         08D4 sub_974         0974 sub_977         0977
sub_9BC         09BC sub_A2A         0A2A sub_A55         0A55
sub_A6E         0A6E sub_A84         0A84 sub_AAD         0AAD
sub_ACF         0ACF sub_AEA         0AEA sub_AF9         0AF9
sub_B02         0B02 sub_B2C         0B2C sub_B45         0B45
sub_B51         0B51 sub_B5F         0B5F sub_B6C         0B6C
sub_B83         0B83 sub_B9B         0B9B sub_BD4         0BD4
sub_BE0         0BE0 sub_BEB         0BEB sub_BEF         0BEF
sub_C02         0C02 sub_C0A         0C0A sub_C18         0C18
sub_C1D         0C1D sub_C30         0C30 sub_C3B         0C3B
sub_C3F         0C3F sub_C43         0C43 sub_C8B         0C8B
sub_C94         0C94 sub_CA0         0CA0 sub_CB9         0CB9
sub_CD3         0CD3 sub_CF2         0CF2 sub_D00         0D00
sub_D7F         0D7F sub_DBD         0DBD sub_DC3         0DC3
sub_DED         0DED sub_E0A         0E0A sub_E1A         0E1A
sub_E2A         0E2A sub_E6A         0E6A sub_E6D         0E6D
sub_E78         0E78 sub_E7B         0E7B sub_E83         0E83
sub_E8F         0E8F sub_EC1         0EC1 sub_EC6         0EC6
sub_EC9         0EC9 sub_F48         0F48 sub_FE2         0FE2
sub_FF1         0FF1 SWIJMP          A012 unk_400         0400
unk_4000        4000 unk_402         0402 unk_428         0428
unk_429         0429 unk_42A         042A unk_43C         043C
unk_45C         045C unk_46C         046C unk_47C         047C
unk_48C         048C unk_49C         049C unk_4AC         04AC
unk_4CC         04CC unk_500         0500 unk_550         0550
unk_570         0570 unk_572         0572 unk_573         0573
unk_575         0575 unk_577         0577 unk_579         0579
unk_57A         057A WARMS           AD03 word_398        0398
word_39A        039A xsave           0C85 YEAR            AC10

 Total bytes output = 18563
